{
    "df_nessus": [
        {
            "file_no": 0,
            "ip": "10.27.45.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.45.4",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=securelogin.arubanetworks.com/O=Aruba Networks/C=US\n|-Issuer  : CN=ArubaMM-VA/O=Aruba Networks/C=US"
        },
        {
            "file_no": 0,
            "ip": "10.27.45.4",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8081",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=securelogin.arubanetworks.com/O=Aruba Networks/C=US\n|-Issuer  : CN=ArubaMM-VA/O=Aruba Networks/C=US"
        },
        {
            "file_no": 0,
            "ip": "10.27.45.4",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8082",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=securelogin.arubanetworks.com/O=Aruba Networks/C=US\n|-Issuer  : CN=ArubaMM-VA/O=Aruba Networks/C=US"
        },
        {
            "file_no": 0,
            "ip": "10.27.45.4",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "4343",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=securelogin.arubanetworks.com/O=Aruba Networks/C=US\n|-Issuer  : CN=ArubaMM-VA/O=Aruba Networks/C=US"
        },
        {
            "file_no": 0,
            "ip": "10.27.45.4",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.45.3",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=securelogin.arubanetworks.com/O=Aruba Networks/C=US\n|-Issuer  : CN=ArubaMM-VA/O=Aruba Networks/C=US"
        },
        {
            "file_no": 0,
            "ip": "10.27.45.3",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8081",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=securelogin.arubanetworks.com/O=Aruba Networks/C=US\n|-Issuer  : CN=ArubaMM-VA/O=Aruba Networks/C=US"
        },
        {
            "file_no": 0,
            "ip": "10.27.45.3",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8082",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=securelogin.arubanetworks.com/O=Aruba Networks/C=US\n|-Issuer  : CN=ArubaMM-VA/O=Aruba Networks/C=US"
        },
        {
            "file_no": 0,
            "ip": "10.27.45.3",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "4343",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=securelogin.arubanetworks.com/O=Aruba Networks/C=US\n|-Issuer  : CN=ArubaMM-VA/O=Aruba Networks/C=US"
        },
        {
            "file_no": 0,
            "ip": "10.27.45.3",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -5 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.45.2",
            "system": "Linux Kernel 3.1",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8081",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=securelogin.arubanetworks.com/O=Aruba Networks/C=US\n|-Issuer  : CN=ArubaMM-VA/O=Aruba Networks/C=US"
        },
        {
            "file_no": 0,
            "ip": "10.27.45.2",
            "system": "Linux Kernel 3.1",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8082",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=securelogin.arubanetworks.com/O=Aruba Networks/C=US\n|-Issuer  : CN=ArubaMM-VA/O=Aruba Networks/C=US"
        },
        {
            "file_no": 0,
            "ip": "10.27.45.2",
            "system": "Linux Kernel 3.1",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "4343",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=securelogin.arubanetworks.com/O=Aruba Networks/C=US\n|-Issuer  : CN=ArubaMM-VA/O=Aruba Networks/C=US"
        },
        {
            "file_no": 0,
            "ip": "10.27.45.2",
            "system": "Linux Kernel 3.1",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=securelogin.arubanetworks.com/O=Aruba Networks/C=US\n|-Issuer  : CN=ArubaMM-VA/O=Aruba Networks/C=US"
        },
        {
            "file_no": 0,
            "ip": "10.27.45.2",
            "system": "Linux Kernel 3.1",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.45.1",
            "system": "NVIDIA Mellanox",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=California/O=Aruba Networks, Inc./OU=AirWave Management Platform/CN=acsi-sl-336/E=support@airwave.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.45.1",
            "system": "NVIDIA Mellanox",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=California/O=Aruba Networks, Inc./OU=AirWave Management Platform/CN=acsi-sl-336/E=support@airwave.com\n|-Issuer  : C=US/ST=California/O=Aruba Networks, Inc./OU=AirWave Management Platform/CN=acsi-sl-336/E=support@airwave.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.44.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.44.5",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "148367",
            "pluginname": "Python Unsupported Version Detection",
            "hostname": "",
            "port": "5555",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote host contains one or more unsupported versions of Python.\n\nLack of support implies that no new security patches for the product will be released by the vendor. As a result, it is likely to contain security vulnerabilities.",
            "solution": "Upgrade to a version of Python that is currently supported.",
            "cve": "",
            "cvss3": "10.0",
            "cvss2": "10.0",
            "see_also": "https://www.python.org/downloads/\nhttps://devguide.python.org/devcycle/",
            "plugin_output": "The following Python installation is unsupported :\nPath              : /\nPort              : 5555\nInstalled version : 3.8.10\nLatest version    : 3.10\nSupport dates     : 2024-10-14 (end of life)"
        },
        {
            "file_no": 0,
            "ip": "10.27.44.5",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 28 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.44.4",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "148367",
            "pluginname": "Python Unsupported Version Detection",
            "hostname": "",
            "port": "5555",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote host contains one or more unsupported versions of Python.\n\nLack of support implies that no new security patches for the product will be released by the vendor. As a result, it is likely to contain security vulnerabilities.",
            "solution": "Upgrade to a version of Python that is currently supported.",
            "cve": "",
            "cvss3": "10.0",
            "cvss2": "10.0",
            "see_also": "https://www.python.org/downloads/\nhttps://devguide.python.org/devcycle/",
            "plugin_output": "The following Python installation is unsupported :\nPath              : /\nPort              : 5555\nInstalled version : 3.8.10\nLatest version    : 3.10\nSupport dates     : 2024-10-14 (end of life)"
        },
        {
            "file_no": 0,
            "ip": "10.27.44.4",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.44.3",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "148367",
            "pluginname": "Python Unsupported Version Detection",
            "hostname": "",
            "port": "5555",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote host contains one or more unsupported versions of Python.\n\nLack of support implies that no new security patches for the product will be released by the vendor. As a result, it is likely to contain security vulnerabilities.",
            "solution": "Upgrade to a version of Python that is currently supported.",
            "cve": "",
            "cvss3": "10.0",
            "cvss2": "10.0",
            "see_also": "https://www.python.org/downloads/\nhttps://devguide.python.org/devcycle/",
            "plugin_output": "The following Python installation is unsupported :\nPath              : /\nPort              : 5555\nInstalled version : 3.8.10\nLatest version    : 3.10\nSupport dates     : 2024-10-14 (end of life)"
        },
        {
            "file_no": 0,
            "ip": "10.27.44.3",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.44.2",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -62 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.44.1",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.43.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.43.5",
            "system": "Check Point GAiA",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : L=Locality Name (eg, city)/CN=10.27.43.5/E=Email Address/1.2.840.113549.1.9.2=An optional company name"
        },
        {
            "file_no": 0,
            "ip": "10.27.43.5",
            "system": "Check Point GAiA",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : L=Locality Name (eg, city)/CN=10.27.43.5/E=Email Address/1.2.840.113549.1.9.2=An optional company name\n|-Issuer  : L=Locality Name (eg, city)/CN=10.27.43.5/E=Email Address/1.2.840.113549.1.9.2=An optional company name"
        },
        {
            "file_no": 0,
            "ip": "10.27.43.5",
            "system": "Check Point GAiA",
            "os": "other",
            "pluginid": "159491",
            "pluginname": "OpenSSH < 8.0",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its banner, the version of OpenSSH running on the remote host is prior to 8.0. It is, therefore, affected by the following vulnerabilities:\n\n  - A permission bypass vulnerability due to improper directory name validation. An unauthenticated, remote     attacker can exploit this, with a specially crafted scp server, to change the permission of a directory     on the client. (CVE-2018-20685)\n\n  - Multiple arbitrary file downloads due to improper validation of object name and stderr output. An unauthenticated     remote attacker can exploit this, with a specially crafted scp server, to include additional hidden     files in the transfer. (CVE-2019-6109, CVE-2019-6110)\n\n  - An arbitrary file write vulnerability due to improper object name validation. An unauthenticated, remote     attacker can exploit this, with a specially crafted scp server, to overwrite arbitrary files in the     client directory. (CVE-2019-6111)\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSH version 8.0 or later.",
            "cve": "CVE-2018-20685",
            "cvss3": "6.8",
            "cvss2": "5.8",
            "see_also": "https://sintonen.fi/advisories/scp-client-multiple-vulnerabilities.txt\nhttps://www.openssh.com/txt/release-8.0",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_7.8\nInstalled version : 7.8\nFixed version     : 8.0"
        },
        {
            "file_no": 0,
            "ip": "10.27.43.5",
            "system": "Check Point GAiA",
            "os": "other",
            "pluginid": "187201",
            "pluginname": "OpenSSH < 9.6 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple vulnerabilities as referenced in the release-9.6 advisory.\n\n  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by     Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of     the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the     commencement of encryption, and deleting an equal number of consecutive messages immediately after     encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While     cryptographically novel, the security impact of this attack is fortunately very limited as it only allows     deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user     user authentication from proceeding and results in a stuck connection. The most serious identified impact     is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing     the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.\n    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this     protocol weakness through a new strict KEX protocol extension that will be automatically enabled when     both the client and server support it. This extension makes two changes to the SSH transport protocol to     improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the     connection if any unnecessary or unexpected message is received during key exchange (including messages     that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability     from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of     each key exchange, preventing previously inserted messages from being able to make persistent changes to     the sequence number across completion of a key exchange. Either of these changes should be sufficient to     thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source     distribition. (CVE-2023-48795)\n\n  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the     PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular     private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)\n\n  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a     ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h     or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could     potentially perform command injection depending on what quoting was present in the user-supplied     ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository     could contain a submodule with shell characters in its user/hostname. Git does not ban shell     metacharacters in user or host names when checking out repositories from untrusted sources. Although we     believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially     across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters     from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be     effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters     potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject     to these restrictions, allowing configurations that use strange names to continue to be used, under the     assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSH version 9.6 or later.",
            "cve": "CVE-2023-48795",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.openssh.com/txt/release-9.6",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_7.8\nInstalled version : 7.8\nFixed version     : 9.6p1 / 9.6"
        },
        {
            "file_no": 0,
            "ip": "10.27.43.5",
            "system": "Check Point GAiA",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 1532 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.42.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.42.190",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.42.132",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.42.132",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "80",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.42.132",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com\n|-Issuer  : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.42.132",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "80",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com\n|-Issuer  : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.42.131",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "45411",
            "pluginname": "SSL Certificate with Wrong Hostname",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The 'commonName' (CN) attribute of the SSL certificate presented for this service is for a different machine.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The identities known by Nessus are :\n10.27.42.131\n10.27.42.131\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.42.131",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "45411",
            "pluginname": "SSL Certificate with Wrong Hostname",
            "hostname": "",
            "port": "5001",
            "protocol": "tcp",
            "severity": "2",
            "description": "The 'commonName' (CN) attribute of the SSL certificate presented for this service is for a different machine.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The identities known by Nessus are :\n10.27.42.131\n10.27.42.131\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.42.131",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "45410",
            "pluginname": "SSL Certificate 'commonName' Mismatch",
            "hostname": "\nacsi-sftp\n",
            "port": "443",
            "protocol": "tcp",
            "severity": "0",
            "description": "The service running on the remote host presents an SSL certificate for which the 'commonName' (CN) attribute does not match the hostname on which the service listens.",
            "solution": "If the machine has several names, make sure that users connect to the service through the DNS hostname that matches the common name in the certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "",
            "plugin_output": "The host name known by Nessus is :\nacsi-sftp\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.42.131",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/L=Taipel/O=Synology Inc./CN=synology\n|-Issuer  : C=TW/L=Taipel/O=Synology Inc./CN=Synology Inc. CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.42.131",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5001",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/L=Taipel/O=Synology Inc./CN=synology\n|-Issuer  : C=TW/L=Taipel/O=Synology Inc./CN=Synology Inc. CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.42.131",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "45410",
            "pluginname": "SSL Certificate 'commonName' Mismatch",
            "hostname": "\nacsi-sftp\n",
            "port": "5001",
            "protocol": "tcp",
            "severity": "0",
            "description": "The service running on the remote host presents an SSL certificate for which the 'commonName' (CN) attribute does not match the hostname on which the service listens.",
            "solution": "If the machine has several names, make sure that users connect to the service through the DNS hostname that matches the common name in the certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "",
            "plugin_output": "The host name known by Nessus is :\nacsi-sftp\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.42.131",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.42.130",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.42.129",
            "system": "Arista EOS",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/L=Taipel/O=Synology Inc./CN=synology\n|-Issuer  : C=TW/L=Taipel/O=Synology Inc./CN=Synology Inc. CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.42.129",
            "system": "Arista EOS",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5001",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/L=Taipel/O=Synology Inc./CN=synology\n|-Issuer  : C=TW/L=Taipel/O=Synology Inc./CN=Synology Inc. CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.42.129",
            "system": "Arista EOS",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.42.126",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.42.66",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.42.66",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.42.66",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.42.66/\nInstalled version : iDRAC9 with firmware 7.00.00.00.53\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.42.65",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.42.65",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.42.65",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.42.65/\nInstalled version : iDRAC9 with firmware 7.00.00.00.53\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.42.62",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.42.1",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.41.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.41.6",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8080",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=DEVELOPMENT STATE/L=DEVELOPMENT CITY/O=DEVELOPMENT COMPANY/OU=DJANGO DEVELOPERS/CN=localhost/E=development@example.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.41.6",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8080",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=DEVELOPMENT STATE/L=DEVELOPMENT CITY/O=DEVELOPMENT COMPANY/OU=DJANGO DEVELOPERS/CN=localhost/E=development@example.com\n|-Issuer  : C=US/ST=DEVELOPMENT STATE/L=DEVELOPMENT CITY/O=DEVELOPMENT COMPANY/OU=DJANGO DEVELOPERS/CN=localhost/E=development@example.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.41.6",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -254 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.41.5",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -139 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.41.4",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -23 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.41.3",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "9443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Taiwan/L=Taipei City/O=SEOrg/OU=SEUnit/CN=upload.backend2.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.41.3",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "9443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=TW/ST=Taiwan/L=Taipei City/O=SEOrg/OU=SEUnit/CN=upload.backend2.com\n|-Not After : Feb 29 06:23:03 2024 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taiwan/L=Taipei City/O=SEOrg/OU=SEUnit/CN=upload.backend2.com\n|-Issuer  : C=TW/ST=Taiwan/L=Taipei City/O=SEOrg/OU=SEUnit/CN=upload.backend2.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.41.3",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "9443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=TW, ST=Taiwan, L=Taipei City, O=SEOrg, OU=SEUnit, CN=upload.backend2.com\nIssuer           : C=TW, ST=Taiwan, L=Taipei City, O=SEOrg, OU=SEUnit, CN=upload.backend2.com\nNot valid before : Jul 19 06:23:03 2023 GMT\nNot valid after  : Feb 29 06:23:03 2024 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.41.3",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 1067 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.41.2",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/O=Palo Alto Networks/OU=Cortex XSOAR/CN=acsi-sl-278"
        },
        {
            "file_no": 0,
            "ip": "10.27.41.2",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/O=Palo Alto Networks/OU=Cortex XSOAR/CN=acsi-sl-278\n|-Issuer  : C=US/O=Palo Alto Networks/OU=Cortex XSOAR/CN=acsi-sl-278"
        },
        {
            "file_no": 0,
            "ip": "10.27.41.2",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -982 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.41.1",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 301 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.40.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.40.2",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "192966",
            "pluginname": "OpenSSL 3.0.0 < 3.0.14 Multiple Vulnerabilities",
            "hostname": "",
            "port": "80",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of OpenSSL installed on the remote host is prior to 3.0.14. It is, therefore, affected by multiple vulnerabilities as referenced in the 3.0.14 advisory.\n\n  - Issue summary: Checking excessively long DSA keys or parameters may be very slow. Impact summary:\n    Applications that use the functions EVP_PKEY_param_check() or EVP_PKEY_public_check() to check a DSA     public key or DSA parameters may experience long delays. Where the key or parameters that are being     checked have been obtained from an untrusted source this may lead to a Denial of Service. The functions     EVP_PKEY_param_check() or EVP_PKEY_public_check() perform various checks on DSA parameters. Some of those     computations take a long time if the modulus (`p` parameter) is too large. Trying to use a very large     modulus is slow and OpenSSL will not allow using public keys with a modulus which is over 10,000 bits in     length for signature verification. However the key and parameter check functions do not limit the modulus     size when performing the checks. An application that calls EVP_PKEY_param_check() or     EVP_PKEY_public_check() and supplies a key or parameters obtained from an untrusted source could be     vulnerable to a Denial of Service attack. These functions are not called by OpenSSL itself on untrusted     DSA keys so only applications that directly call these functions may be vulnerable. Also vulnerable are     the OpenSSL pkey and pkeyparam command line applications when using the `-check` option. The OpenSSL     SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers are affected     by this issue. (CVE-2024-4603)\n\n  - Issue summary: Some non-default TLS server configurations can cause unbounded memory growth when     processing TLSv1.3 sessions Impact summary: An attacker may exploit certain server configurations to     trigger unbounded memory growth that would lead to a Denial of Service This problem can occur in TLSv1.3     if the non-default SSL_OP_NO_TICKET option is being used (but not if early_data support is also configured     and the default anti-replay protection is in use). In this case, under certain conditions, the session     cache can get into an incorrect state and it will fail to flush properly as it fills. The session cache     will continue to grow in an unbounded manner. A malicious client could deliberately create the scenario     for this failure to force a Denial of Service. It may also happen by accident in normal operation. This     issue only affects TLS servers supporting TLSv1.3. It does not affect TLS clients. The FIPS modules in     3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL 1.0.2 is also not affected by this issue.\n    (CVE-2024-2511)\n\n  - Issue summary: Calling the OpenSSL API function SSL_free_buffers may cause memory to be accessed that was     previously freed in some situations Impact summary: A use after free can have a range of potential     consequences such as the corruption of valid data, crashes or execution of arbitrary code. However, only     applications that directly call the SSL_free_buffers function are affected by this issue. Applications     that do not call this function are not vulnerable. Our investigations indicate that this function is     rarely used by applications. The SSL_free_buffers function is used to free the internal OpenSSL buffer     used when processing an incoming record from the network. The call is only expected to succeed if the     buffer is not currently in use. However, two scenarios have been identified where the buffer is freed even     when still in use. The first scenario occurs where a record header has been received from the network and     processed by OpenSSL, but the full record body has not yet arrived. In this case calling SSL_free_buffers     will succeed even though a record has only been partially processed and the buffer is still in use. The     second scenario occurs where a full record containing application data has been received and processed by     OpenSSL but the application has only read part of this data. Again a call to SSL_free_buffers will succeed     even though the buffer is still in use. While these scenarios could occur accidentally during normal     operation a malicious attacker could attempt to engineer a stituation where this occurs. We are not aware     of this issue being actively exploited. The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this     issue. Found by William Ahern (Akamai). Fix developed by Matt Caswell. Fix developed by Watson Ladd     (Akamai). Fixed in OpenSSL 3.3.1 (Affected since 3.3.0). (CVE-2024-4741)\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSL version 3.0.14 or later.",
            "cve": "CVE-2024-2511",
            "cvss3": "7.5",
            "cvss2": "5.4",
            "see_also": "http://www.nessus.org/u?141a6242\nhttp://www.nessus.org/u?2cbb1fb1\nhttp://www.nessus.org/u?8409be15\nhttps://www.cve.org/CVERecord?id=CVE-2024-2511\nhttps://www.cve.org/CVERecord?id=CVE-2024-4603\nhttps://www.cve.org/CVERecord?id=CVE-2024-4741",
            "plugin_output": "Banner           : Apache/2.4.62 (codeit) OpenSSL/3.0.12+quic\nReported version : 3.0.12\nFixed version    : 3.0.14"
        },
        {
            "file_no": 0,
            "ip": "10.27.40.2",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "192966",
            "pluginname": "OpenSSL 3.0.0 < 3.0.14 Multiple Vulnerabilities",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of OpenSSL installed on the remote host is prior to 3.0.14. It is, therefore, affected by multiple vulnerabilities as referenced in the 3.0.14 advisory.\n\n  - Issue summary: Checking excessively long DSA keys or parameters may be very slow. Impact summary:\n    Applications that use the functions EVP_PKEY_param_check() or EVP_PKEY_public_check() to check a DSA     public key or DSA parameters may experience long delays. Where the key or parameters that are being     checked have been obtained from an untrusted source this may lead to a Denial of Service. The functions     EVP_PKEY_param_check() or EVP_PKEY_public_check() perform various checks on DSA parameters. Some of those     computations take a long time if the modulus (`p` parameter) is too large. Trying to use a very large     modulus is slow and OpenSSL will not allow using public keys with a modulus which is over 10,000 bits in     length for signature verification. However the key and parameter check functions do not limit the modulus     size when performing the checks. An application that calls EVP_PKEY_param_check() or     EVP_PKEY_public_check() and supplies a key or parameters obtained from an untrusted source could be     vulnerable to a Denial of Service attack. These functions are not called by OpenSSL itself on untrusted     DSA keys so only applications that directly call these functions may be vulnerable. Also vulnerable are     the OpenSSL pkey and pkeyparam command line applications when using the `-check` option. The OpenSSL     SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers are affected     by this issue. (CVE-2024-4603)\n\n  - Issue summary: Some non-default TLS server configurations can cause unbounded memory growth when     processing TLSv1.3 sessions Impact summary: An attacker may exploit certain server configurations to     trigger unbounded memory growth that would lead to a Denial of Service This problem can occur in TLSv1.3     if the non-default SSL_OP_NO_TICKET option is being used (but not if early_data support is also configured     and the default anti-replay protection is in use). In this case, under certain conditions, the session     cache can get into an incorrect state and it will fail to flush properly as it fills. The session cache     will continue to grow in an unbounded manner. A malicious client could deliberately create the scenario     for this failure to force a Denial of Service. It may also happen by accident in normal operation. This     issue only affects TLS servers supporting TLSv1.3. It does not affect TLS clients. The FIPS modules in     3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL 1.0.2 is also not affected by this issue.\n    (CVE-2024-2511)\n\n  - Issue summary: Calling the OpenSSL API function SSL_free_buffers may cause memory to be accessed that was     previously freed in some situations Impact summary: A use after free can have a range of potential     consequences such as the corruption of valid data, crashes or execution of arbitrary code. However, only     applications that directly call the SSL_free_buffers function are affected by this issue. Applications     that do not call this function are not vulnerable. Our investigations indicate that this function is     rarely used by applications. The SSL_free_buffers function is used to free the internal OpenSSL buffer     used when processing an incoming record from the network. The call is only expected to succeed if the     buffer is not currently in use. However, two scenarios have been identified where the buffer is freed even     when still in use. The first scenario occurs where a record header has been received from the network and     processed by OpenSSL, but the full record body has not yet arrived. In this case calling SSL_free_buffers     will succeed even though a record has only been partially processed and the buffer is still in use. The     second scenario occurs where a full record containing application data has been received and processed by     OpenSSL but the application has only read part of this data. Again a call to SSL_free_buffers will succeed     even though the buffer is still in use. While these scenarios could occur accidentally during normal     operation a malicious attacker could attempt to engineer a stituation where this occurs. We are not aware     of this issue being actively exploited. The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this     issue. Found by William Ahern (Akamai). Fix developed by Matt Caswell. Fix developed by Watson Ladd     (Akamai). Fixed in OpenSSL 3.3.1 (Affected since 3.3.0). (CVE-2024-4741)\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSL version 3.0.14 or later.",
            "cve": "CVE-2024-2511",
            "cvss3": "7.5",
            "cvss2": "5.4",
            "see_also": "http://www.nessus.org/u?141a6242\nhttp://www.nessus.org/u?2cbb1fb1\nhttp://www.nessus.org/u?8409be15\nhttps://www.cve.org/CVERecord?id=CVE-2024-2511\nhttps://www.cve.org/CVERecord?id=CVE-2024-4603\nhttps://www.cve.org/CVERecord?id=CVE-2024-4741",
            "plugin_output": "Banner           : Apache/2.4.62 (codeit) OpenSSL/3.0.12+quic\nReported version : 3.0.12\nFixed version    : 3.0.14"
        },
        {
            "file_no": 0,
            "ip": "10.27.40.2",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "185160",
            "pluginname": "OpenSSL 3.0.0 < 3.0.13 Multiple Vulnerabilities",
            "hostname": "",
            "port": "80",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of OpenSSL installed on the remote host is prior to 3.0.13. It is, therefore, affected by multiple vulnerabilities as referenced in the 3.0.13 advisory.\n\n  - Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL to crash leading to a     potential Denial of Service attack Impact summary: Applications loading files in the PKCS12 format from     untrusted sources might terminate abruptly. A file in PKCS12 format can contain certificates and keys and     may come from an untrusted source. The PKCS12 specification allows certain fields to be NULL, but OpenSSL     does not correctly check for this case. This can lead to a NULL pointer dereference that results in     OpenSSL crashing. If an application processes PKCS12 files from an untrusted source using the OpenSSL APIs     then that application will be vulnerable to this issue. OpenSSL APIs that are vulnerable to this are:\n    PKCS12_parse(), PKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes() and     PKCS12_newpass(). We have also fixed a similar issue in SMIME_write_PKCS7(). However since this function     is related to writing data we do not consider it security significant. The FIPS modules in 3.2, 3.1 and     3.0 are not affected by this issue. (CVE-2024-0727)\n\n  - Issue summary: Checking excessively long invalid RSA public keys may take a long time. Impact summary:\n    Applications that use the function EVP_PKEY_public_check() to check RSA public keys may experience long     delays. Where the key that is being checked has been obtained from an untrusted source this may lead to a     Denial of Service. When function EVP_PKEY_public_check() is called on RSA public keys, a computation is     done to confirm that the RSA modulus, n, is composite. For valid RSA keys, n is a product of two or more     large primes and this computation completes quickly. However, if n is an overly large prime, then this     computation would take a long time. An application that calls EVP_PKEY_public_check() and supplies an RSA     key obtained from an untrusted source could be vulnerable to a Denial of Service attack. The function     EVP_PKEY_public_check() is not called from other OpenSSL functions however it is called from the OpenSSL     pkey command line application. For that reason that application is also vulnerable if used with the     '-pubin' and '-check' options on untrusted data. The OpenSSL SSL/TLS implementation is not affected by     this issue. The OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue. (CVE-2023-6237)\n\n  - Issue summary: The POLY1305 MAC (message authentication code) implementation contains a bug that might     corrupt the internal state of applications running on PowerPC CPU based platforms if the CPU provides     vector instructions. Impact summary: If an attacker can influence whether the POLY1305 MAC algorithm is     used, the application state might be corrupted with various application dependent consequences. The     POLY1305 MAC (message authentication code) implementation in OpenSSL for PowerPC CPUs restores the     contents of vector registers in a different order than they are saved. Thus the contents of some of these     vector registers are corrupted when returning to the caller. The vulnerable code is used only on newer     PowerPC processors supporting the PowerISA 2.07 instructions. The consequences of this kind of internal     application state corruption can be various - from no consequences, if the calling application does not     depend on the contents of non-volatile XMM registers at all, to the worst consequences, where the attacker     could get complete control of the application process. However unless the compiler uses the vector     registers for storing pointers, the most likely consequence, if any, would be an incorrect result of some     application dependent calculations or a crash leading to a denial of service. The POLY1305 MAC algorithm     is most frequently used as part of the CHACHA20-POLY1305 AEAD (authenticated encryption with associated     data) algorithm. The most common usage of this AEAD cipher is with TLS protocol versions 1.2 and 1.3. If     this cipher is enabled on the server a malicious client can influence whether this AEAD cipher is used.\n    This implies that TLS server applications using OpenSSL can be potentially impacted. However we are     currently not aware of any concrete application that would be affected by this issue therefore we consider     this a Low severity security issue. (CVE-2023-6129)\n\n  - Issue summary: Generating excessively long X9.42 DH keys or checking excessively long X9.42 DH keys or     parameters may be very slow. Impact summary: Applications that use the functions DH_generate_key() to     generate an X9.42 DH key may experience long delays. Likewise, applications that use DH_check_pub_key(),     DH_check_pub_key_ex() or EVP_PKEY_public_check() to check an X9.42 DH key or X9.42 DH parameters may     experience long delays. Where the key or parameters that are being checked have been obtained from an     untrusted source this may lead to a Denial of Service. While DH_check() performs all the necessary checks     (as of CVE-2023-3817), DH_check_pub_key() doesn't make any of these checks, and is therefore vulnerable     for excessively large P and Q parameters. Likewise, while DH_generate_key() performs a check for an     excessively large P, it doesn't check for an excessively large Q. An application that calls     DH_generate_key() or DH_check_pub_key() and supplies a key or parameters obtained from an untrusted source     could be vulnerable to a Denial of Service attack. DH_generate_key() and DH_check_pub_key() are also     called by a number of other OpenSSL functions. An application calling any of those other functions may     similarly be affected. The other functions affected by this are DH_check_pub_key_ex(),     EVP_PKEY_public_check(), and EVP_PKEY_generate(). Also vulnerable are the OpenSSL pkey command line     application when using the -pubcheck option, as well as the OpenSSL genpkey command line application.\n    The OpenSSL SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers     are not affected by this issue. (CVE-2023-5678)\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSL version 3.0.13 or later.",
            "cve": "CVE-2023-5678",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?02bfb3df\nhttp://www.nessus.org/u?71a978e4\nhttp://www.nessus.org/u?ccacbb1d\nhttp://www.nessus.org/u?fc067b0a\nhttps://www.cve.org/CVERecord?id=CVE-2023-5678\nhttps://www.cve.org/CVERecord?id=CVE-2023-6129\nhttps://www.cve.org/CVERecord?id=CVE-2023-6237\nhttps://www.cve.org/CVERecord?id=CVE-2024-0727",
            "plugin_output": "Banner           : Apache/2.4.62 (codeit) OpenSSL/3.0.12+quic\nReported version : 3.0.12\nFixed version    : 3.0.13"
        },
        {
            "file_no": 0,
            "ip": "10.27.40.2",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "185160",
            "pluginname": "OpenSSL 3.0.0 < 3.0.13 Multiple Vulnerabilities",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of OpenSSL installed on the remote host is prior to 3.0.13. It is, therefore, affected by multiple vulnerabilities as referenced in the 3.0.13 advisory.\n\n  - Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL to crash leading to a     potential Denial of Service attack Impact summary: Applications loading files in the PKCS12 format from     untrusted sources might terminate abruptly. A file in PKCS12 format can contain certificates and keys and     may come from an untrusted source. The PKCS12 specification allows certain fields to be NULL, but OpenSSL     does not correctly check for this case. This can lead to a NULL pointer dereference that results in     OpenSSL crashing. If an application processes PKCS12 files from an untrusted source using the OpenSSL APIs     then that application will be vulnerable to this issue. OpenSSL APIs that are vulnerable to this are:\n    PKCS12_parse(), PKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes() and     PKCS12_newpass(). We have also fixed a similar issue in SMIME_write_PKCS7(). However since this function     is related to writing data we do not consider it security significant. The FIPS modules in 3.2, 3.1 and     3.0 are not affected by this issue. (CVE-2024-0727)\n\n  - Issue summary: Checking excessively long invalid RSA public keys may take a long time. Impact summary:\n    Applications that use the function EVP_PKEY_public_check() to check RSA public keys may experience long     delays. Where the key that is being checked has been obtained from an untrusted source this may lead to a     Denial of Service. When function EVP_PKEY_public_check() is called on RSA public keys, a computation is     done to confirm that the RSA modulus, n, is composite. For valid RSA keys, n is a product of two or more     large primes and this computation completes quickly. However, if n is an overly large prime, then this     computation would take a long time. An application that calls EVP_PKEY_public_check() and supplies an RSA     key obtained from an untrusted source could be vulnerable to a Denial of Service attack. The function     EVP_PKEY_public_check() is not called from other OpenSSL functions however it is called from the OpenSSL     pkey command line application. For that reason that application is also vulnerable if used with the     '-pubin' and '-check' options on untrusted data. The OpenSSL SSL/TLS implementation is not affected by     this issue. The OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue. (CVE-2023-6237)\n\n  - Issue summary: The POLY1305 MAC (message authentication code) implementation contains a bug that might     corrupt the internal state of applications running on PowerPC CPU based platforms if the CPU provides     vector instructions. Impact summary: If an attacker can influence whether the POLY1305 MAC algorithm is     used, the application state might be corrupted with various application dependent consequences. The     POLY1305 MAC (message authentication code) implementation in OpenSSL for PowerPC CPUs restores the     contents of vector registers in a different order than they are saved. Thus the contents of some of these     vector registers are corrupted when returning to the caller. The vulnerable code is used only on newer     PowerPC processors supporting the PowerISA 2.07 instructions. The consequences of this kind of internal     application state corruption can be various - from no consequences, if the calling application does not     depend on the contents of non-volatile XMM registers at all, to the worst consequences, where the attacker     could get complete control of the application process. However unless the compiler uses the vector     registers for storing pointers, the most likely consequence, if any, would be an incorrect result of some     application dependent calculations or a crash leading to a denial of service. The POLY1305 MAC algorithm     is most frequently used as part of the CHACHA20-POLY1305 AEAD (authenticated encryption with associated     data) algorithm. The most common usage of this AEAD cipher is with TLS protocol versions 1.2 and 1.3. If     this cipher is enabled on the server a malicious client can influence whether this AEAD cipher is used.\n    This implies that TLS server applications using OpenSSL can be potentially impacted. However we are     currently not aware of any concrete application that would be affected by this issue therefore we consider     this a Low severity security issue. (CVE-2023-6129)\n\n  - Issue summary: Generating excessively long X9.42 DH keys or checking excessively long X9.42 DH keys or     parameters may be very slow. Impact summary: Applications that use the functions DH_generate_key() to     generate an X9.42 DH key may experience long delays. Likewise, applications that use DH_check_pub_key(),     DH_check_pub_key_ex() or EVP_PKEY_public_check() to check an X9.42 DH key or X9.42 DH parameters may     experience long delays. Where the key or parameters that are being checked have been obtained from an     untrusted source this may lead to a Denial of Service. While DH_check() performs all the necessary checks     (as of CVE-2023-3817), DH_check_pub_key() doesn't make any of these checks, and is therefore vulnerable     for excessively large P and Q parameters. Likewise, while DH_generate_key() performs a check for an     excessively large P, it doesn't check for an excessively large Q. An application that calls     DH_generate_key() or DH_check_pub_key() and supplies a key or parameters obtained from an untrusted source     could be vulnerable to a Denial of Service attack. DH_generate_key() and DH_check_pub_key() are also     called by a number of other OpenSSL functions. An application calling any of those other functions may     similarly be affected. The other functions affected by this are DH_check_pub_key_ex(),     EVP_PKEY_public_check(), and EVP_PKEY_generate(). Also vulnerable are the OpenSSL pkey command line     application when using the -pubcheck option, as well as the OpenSSL genpkey command line application.\n    The OpenSSL SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers     are not affected by this issue. (CVE-2023-5678)\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSL version 3.0.13 or later.",
            "cve": "CVE-2023-5678",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?02bfb3df\nhttp://www.nessus.org/u?71a978e4\nhttp://www.nessus.org/u?ccacbb1d\nhttp://www.nessus.org/u?fc067b0a\nhttps://www.cve.org/CVERecord?id=CVE-2023-5678\nhttps://www.cve.org/CVERecord?id=CVE-2023-6129\nhttps://www.cve.org/CVERecord?id=CVE-2023-6237\nhttps://www.cve.org/CVERecord?id=CVE-2024-0727",
            "plugin_output": "Banner           : Apache/2.4.62 (codeit) OpenSSL/3.0.12+quic\nReported version : 3.0.12\nFixed version    : 3.0.13"
        },
        {
            "file_no": 0,
            "ip": "10.27.40.2",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "209150",
            "pluginname": "OpenSSL 3.0.0 < 3.0.16 Vulnerability",
            "hostname": "",
            "port": "80",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of OpenSSL installed on the remote host is prior to 3.0.16. It is, therefore, affected by a vulnerability as referenced in the 3.0.16 advisory.\n\n  - Issue summary: Use of the low-level GF(2^m) elliptic curve APIs with untrusted explicit values for the     field polynomial can lead to out-of-bounds memory reads or writes. Impact summary: Out of bound memory     writes can lead to an application crash or even a possibility of a remote code execution, however, in all     the protocols involving Elliptic Curve Cryptography that we're aware of, either only named curves are     supported, or, if explicit curve parameters are supported, they specify an X9.62 encoding of binary     (GF(2^m)) curves that can't represent problematic input values. Thus the likelihood of existence of a     vulnerable application is low. In particular, the X9.62 encoding is used for ECC keys in X.509     certificates, so problematic inputs cannot occur in the context of processing X.509 certificates. Any     problematic use-cases would have to be using an exotic curve encoding. The affected APIs include:\n    EC_GROUP_new_curve_GF2m(), EC_GROUP_new_from_params(), and various supporting BN_GF2m_*() functions.\n    Applications working with exotic explicit binary (GF(2^m)) curve parameters, that make it possible to     represent invalid field polynomials with a zero constant term, via the above or similar APIs, may     terminate abruptly as a result of reading or writing outside of array bounds. Remote code execution cannot     easily be ruled out. The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.\n    (CVE-2024-9143)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSL version 3.0.16 or later.",
            "cve": "CVE-2024-9143",
            "cvss3": "4.3",
            "cvss2": "6.8",
            "see_also": "http://www.nessus.org/u?4cbe1bfc\nhttps://openssl-library.org/news/secadv/20241016.txt\nhttps://openssl-library.org/policies/general/security-policy/#low\nhttps://www.cve.org/CVERecord?id=CVE-2024-9143",
            "plugin_output": "Banner           : Apache/2.4.62 (codeit) OpenSSL/3.0.12+quic\nReported version : 3.0.12\nFixed version    : 3.0.16"
        },
        {
            "file_no": 0,
            "ip": "10.27.40.2",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "209150",
            "pluginname": "OpenSSL 3.0.0 < 3.0.16 Vulnerability",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of OpenSSL installed on the remote host is prior to 3.0.16. It is, therefore, affected by a vulnerability as referenced in the 3.0.16 advisory.\n\n  - Issue summary: Use of the low-level GF(2^m) elliptic curve APIs with untrusted explicit values for the     field polynomial can lead to out-of-bounds memory reads or writes. Impact summary: Out of bound memory     writes can lead to an application crash or even a possibility of a remote code execution, however, in all     the protocols involving Elliptic Curve Cryptography that we're aware of, either only named curves are     supported, or, if explicit curve parameters are supported, they specify an X9.62 encoding of binary     (GF(2^m)) curves that can't represent problematic input values. Thus the likelihood of existence of a     vulnerable application is low. In particular, the X9.62 encoding is used for ECC keys in X.509     certificates, so problematic inputs cannot occur in the context of processing X.509 certificates. Any     problematic use-cases would have to be using an exotic curve encoding. The affected APIs include:\n    EC_GROUP_new_curve_GF2m(), EC_GROUP_new_from_params(), and various supporting BN_GF2m_*() functions.\n    Applications working with exotic explicit binary (GF(2^m)) curve parameters, that make it possible to     represent invalid field polynomials with a zero constant term, via the above or similar APIs, may     terminate abruptly as a result of reading or writing outside of array bounds. Remote code execution cannot     easily be ruled out. The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.\n    (CVE-2024-9143)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSL version 3.0.16 or later.",
            "cve": "CVE-2024-9143",
            "cvss3": "4.3",
            "cvss2": "6.8",
            "see_also": "http://www.nessus.org/u?4cbe1bfc\nhttps://openssl-library.org/news/secadv/20241016.txt\nhttps://openssl-library.org/policies/general/security-policy/#low\nhttps://www.cve.org/CVERecord?id=CVE-2024-9143",
            "plugin_output": "Banner           : Apache/2.4.62 (codeit) OpenSSL/3.0.12+quic\nReported version : 3.0.12\nFixed version    : 3.0.16"
        },
        {
            "file_no": 0,
            "ip": "10.27.40.2",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "201085",
            "pluginname": "OpenSSL 3.0.0 < 3.0.15 Vulnerability",
            "hostname": "",
            "port": "80",
            "protocol": "tcp",
            "severity": "4",
            "description": "The version of OpenSSL installed on the remote host is prior to 3.0.15. It is, therefore, affected by a vulnerability as referenced in the 3.0.15 advisory.\n\n  - Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an empty supported client     protocols buffer may cause a crash or memory contents to be sent to the peer. Impact summary: A buffer     overread can have a range of potential consequences such as unexpected application beahviour or a crash.\n    In particular this issue could result in up to 255 bytes of arbitrary private data from memory being sent     to the peer leading to a loss of confidentiality. However, only applications that directly call the     SSL_select_next_proto function with a 0 length list of supported client protocols are affected by this     issue. This would normally never be a valid scenario and is typically not under attacker control but may     occur by accident in the case of a configuration or programming error in the calling application. The     OpenSSL API function SSL_select_next_proto is typically used by TLS applications that support ALPN     (Application Layer Protocol Negotiation) or NPN (Next Protocol Negotiation). NPN is older, was never     standardised and is deprecated in favour of ALPN. We believe that ALPN is significantly more widely     deployed than NPN. The SSL_select_next_proto function accepts a list of protocols from the server and a     list of protocols from the client and returns the first protocol that appears in the server list that also     appears in the client list. In the case of no overlap between the two lists it returns the first item in     the client list. In either case it will signal whether an overlap between the two lists was found. In the     case where SSL_select_next_proto is called with a zero length client list it fails to notice this     condition and returns the memory immediately following the client list pointer (and reports that there was     no overlap in the lists). This function is typically called from a server side application callback for     ALPN or a client side application callback for NPN. In the case of ALPN the list of protocols supplied by     the client is guaranteed by libssl to never be zero in length. The list of server protocols comes from the     application and should never normally be expected to be of zero length. In this case if the     SSL_select_next_proto function has been called as expected (with the list supplied by the client passed in     the client/client_len parameters), then the application will not be vulnerable to this issue. If the     application has accidentally been configured with a zero length server list, and has accidentally passed     that zero length server list in the client/client_len parameters, and has additionally failed to correctly     handle a no overlap response (which would normally result in a handshake failure in ALPN) then it will     be vulnerable to this problem. In the case of NPN, the protocol permits the client to opportunistically     select a protocol when there is no overlap. OpenSSL returns the first client protocol in the no overlap     case in support of this. The list of client protocols comes from the application and should never normally     be expected to be of zero length. However if the SSL_select_next_proto function is accidentally called     with a client_len of 0 then an invalid memory pointer will be returned instead. If the application uses     this output as the opportunistic protocol then the loss of confidentiality will occur. This issue has been     assessed as Low severity because applications are most likely to be vulnerable if they are using NPN     instead of ALPN - but NPN is not widely used. It also requires an application configuration or programming     error. Finally, this issue would not typically be under attacker control making active exploitation     unlikely. The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue. Due to the low     severity of this issue we are not issuing new releases of OpenSSL at this time. The fix will be included     in the next releases when they become available. Found by Joseph Birr-Pixton. Thanks to David Benjamin     (Google). Fix developed by Matt Caswell. Fixed in OpenSSL 1.1.1za (premium support) (Affected since     1.1.1). (CVE-2024-5535)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSL version 3.0.15 or later.",
            "cve": "CVE-2024-5535",
            "cvss3": "9.1",
            "cvss2": "4.3",
            "see_also": "http://www.nessus.org/u?8f2a60eb\nhttps://www.cve.org/CVERecord?id=CVE-2024-5535",
            "plugin_output": "Banner           : Apache/2.4.62 (codeit) OpenSSL/3.0.12+quic\nReported version : 3.0.12\nFixed version    : 3.0.15"
        },
        {
            "file_no": 0,
            "ip": "10.27.40.2",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "201085",
            "pluginname": "OpenSSL 3.0.0 < 3.0.15 Vulnerability",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "4",
            "description": "The version of OpenSSL installed on the remote host is prior to 3.0.15. It is, therefore, affected by a vulnerability as referenced in the 3.0.15 advisory.\n\n  - Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an empty supported client     protocols buffer may cause a crash or memory contents to be sent to the peer. Impact summary: A buffer     overread can have a range of potential consequences such as unexpected application beahviour or a crash.\n    In particular this issue could result in up to 255 bytes of arbitrary private data from memory being sent     to the peer leading to a loss of confidentiality. However, only applications that directly call the     SSL_select_next_proto function with a 0 length list of supported client protocols are affected by this     issue. This would normally never be a valid scenario and is typically not under attacker control but may     occur by accident in the case of a configuration or programming error in the calling application. The     OpenSSL API function SSL_select_next_proto is typically used by TLS applications that support ALPN     (Application Layer Protocol Negotiation) or NPN (Next Protocol Negotiation). NPN is older, was never     standardised and is deprecated in favour of ALPN. We believe that ALPN is significantly more widely     deployed than NPN. The SSL_select_next_proto function accepts a list of protocols from the server and a     list of protocols from the client and returns the first protocol that appears in the server list that also     appears in the client list. In the case of no overlap between the two lists it returns the first item in     the client list. In either case it will signal whether an overlap between the two lists was found. In the     case where SSL_select_next_proto is called with a zero length client list it fails to notice this     condition and returns the memory immediately following the client list pointer (and reports that there was     no overlap in the lists). This function is typically called from a server side application callback for     ALPN or a client side application callback for NPN. In the case of ALPN the list of protocols supplied by     the client is guaranteed by libssl to never be zero in length. The list of server protocols comes from the     application and should never normally be expected to be of zero length. In this case if the     SSL_select_next_proto function has been called as expected (with the list supplied by the client passed in     the client/client_len parameters), then the application will not be vulnerable to this issue. If the     application has accidentally been configured with a zero length server list, and has accidentally passed     that zero length server list in the client/client_len parameters, and has additionally failed to correctly     handle a no overlap response (which would normally result in a handshake failure in ALPN) then it will     be vulnerable to this problem. In the case of NPN, the protocol permits the client to opportunistically     select a protocol when there is no overlap. OpenSSL returns the first client protocol in the no overlap     case in support of this. The list of client protocols comes from the application and should never normally     be expected to be of zero length. However if the SSL_select_next_proto function is accidentally called     with a client_len of 0 then an invalid memory pointer will be returned instead. If the application uses     this output as the opportunistic protocol then the loss of confidentiality will occur. This issue has been     assessed as Low severity because applications are most likely to be vulnerable if they are using NPN     instead of ALPN - but NPN is not widely used. It also requires an application configuration or programming     error. Finally, this issue would not typically be under attacker control making active exploitation     unlikely. The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue. Due to the low     severity of this issue we are not issuing new releases of OpenSSL at this time. The fix will be included     in the next releases when they become available. Found by Joseph Birr-Pixton. Thanks to David Benjamin     (Google). Fix developed by Matt Caswell. Fixed in OpenSSL 1.1.1za (premium support) (Affected since     1.1.1). (CVE-2024-5535)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSL version 3.0.15 or later.",
            "cve": "CVE-2024-5535",
            "cvss3": "9.1",
            "cvss2": "4.3",
            "see_also": "http://www.nessus.org/u?8f2a60eb\nhttps://www.cve.org/CVERecord?id=CVE-2024-5535",
            "plugin_output": "Banner           : Apache/2.4.62 (codeit) OpenSSL/3.0.12+quic\nReported version : 3.0.12\nFixed version    : 3.0.15"
        },
        {
            "file_no": 0,
            "ip": "10.27.40.2",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/O=Unspecified/OU=ca-2701420741041880921/CN=acsi-sl-275/E=root@acsi-sl-275"
        },
        {
            "file_no": 0,
            "ip": "10.27.40.2",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificates were part of the certificate chain\nsent by the remote host, but they have expired :\n|-Subject   : C=US/O=Unspecified/OU=ca-2701420741041880921/CN=acsi-sl-275/E=root@acsi-sl-275\n|-Not After : Apr 16 11:08:14 2024 GMT\n|-Subject   : C=US/O=Unspecified/CN=acsi-sl-275/E=root@acsi-sl-275\n|-Not After : Apr 16 11:08:15 2024 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/O=Unspecified/OU=ca-2701420741041880921/CN=acsi-sl-275/E=root@acsi-sl-275\n|-Issuer  : C=US/O=Unspecified/OU=ca-2701420741041880921/CN=acsi-sl-275/E=root@acsi-sl-275"
        },
        {
            "file_no": 0,
            "ip": "10.27.40.2",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, O=Unspecified, CN=acsi-sl-275, emailAddress=root@acsi-sl-275\nIssuer           : C=US, O=Unspecified, OU=ca-2701420741041880921, CN=acsi-sl-275, emailAddress=root@acsi-sl-275\nNot valid before : Apr 17 11:08:15 2023 GMT\nNot valid after  : Apr 16 11:08:15 2024 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.40.2",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "11213",
            "pluginname": "HTTP TRACE / TRACK Methods Allowed",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote web server supports the TRACE and/or TRACK methods. TRACE and TRACK are HTTP methods that are used to debug web server connections.",
            "solution": "Disable these HTTP methods. Refer to the plugin output for more information.",
            "cve": "CVE-2003-1567",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?e979b5cb\nhttp://www.apacheweek.com/issues/03-01-24\nhttps://download.oracle.com/sunalerts/1000718.1.html",
            "plugin_output": "To disable these methods, add the following lines for each virtual\nhost in your configuration file :\nRewriteEngine on\nRewriteCond %{REQUEST_METHOD} ^(TRACE|TRACK)\nRewriteRule .* - [F]\nAlternatively, note that Apache versions 1.3.34, 2.0.55, and 2.2\nsupport disabling the TRACE method natively via the 'TraceEnable'\ndirective.\nNessus sent the following TRACE request : \\n\\n------------------------------ snip ------------------------------\\nTRACE /Nessus68469981.html HTTP/1.1\nConnection: Close\nHost: 10.27.40.2\nPragma: no-cache\nUser-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0)\nAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\nAccept-Language: en\nAccept-Charset: iso-8859-1,*,utf-8\n------------------------------ snip ------------------------------\\n\\nand received the following response from the remote server :\\n\\n------------------------------ snip ------------------------------\\nHTTP/1.1 200 OK\nDate: Thu, 19 Dec 2024 11:04:08 GMT\nServer: Apache/2.4.62 (codeit) OpenSSL/3.0.12+quic\nKeep-Alive: timeout=5, max=100\nConnection: Keep-Alive\nTransfer-Encoding: chunked\nContent-Type: message/http\nTRACE /Nessus68469981.html HTTP/1.1\nConnection: Keep-Alive\nHost: 10.27.40.2\nPragma: no-cache\nUser-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0)\nAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\nAccept-Language: en\nAccept-Charset: iso-8859-1,*,utf-8\n------------------------------ snip ------------------------------\\n"
        },
        {
            "file_no": 0,
            "ip": "10.27.40.2",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "11213",
            "pluginname": "HTTP TRACE / TRACK Methods Allowed",
            "hostname": "",
            "port": "80",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote web server supports the TRACE and/or TRACK methods. TRACE and TRACK are HTTP methods that are used to debug web server connections.",
            "solution": "Disable these HTTP methods. Refer to the plugin output for more information.",
            "cve": "CVE-2003-1567",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?e979b5cb\nhttp://www.apacheweek.com/issues/03-01-24\nhttps://download.oracle.com/sunalerts/1000718.1.html",
            "plugin_output": "To disable these methods, add the following lines for each virtual\nhost in your configuration file :\nRewriteEngine on\nRewriteCond %{REQUEST_METHOD} ^(TRACE|TRACK)\nRewriteRule .* - [F]\nAlternatively, note that Apache versions 1.3.34, 2.0.55, and 2.2\nsupport disabling the TRACE method natively via the 'TraceEnable'\ndirective.\nNessus sent the following TRACE request : \\n\\n------------------------------ snip ------------------------------\\nTRACE /Nessus1197849097.html HTTP/1.1\nConnection: Close\nHost: 10.27.40.2\nPragma: no-cache\nUser-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0)\nAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\nAccept-Language: en\nAccept-Charset: iso-8859-1,*,utf-8\n------------------------------ snip ------------------------------\\n\\nand received the following response from the remote server :\\n\\n------------------------------ snip ------------------------------\\nHTTP/1.1 200 OK\nDate: Thu, 19 Dec 2024 11:04:08 GMT\nServer: Apache/2.4.62 (codeit) OpenSSL/3.0.12+quic\nKeep-Alive: timeout=5, max=100\nConnection: Keep-Alive\nTransfer-Encoding: chunked\nContent-Type: message/http\nTRACE /Nessus1197849097.html HTTP/1.1\nConnection: Keep-Alive\nHost: 10.27.40.2\nPragma: no-cache\nUser-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0)\nAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\nAccept-Language: en\nAccept-Charset: iso-8859-1,*,utf-8\n------------------------------ snip ------------------------------\\n"
        },
        {
            "file_no": 0,
            "ip": "10.27.40.2",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.40.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "192966",
            "pluginname": "OpenSSL 3.0.0 < 3.0.14 Multiple Vulnerabilities",
            "hostname": "",
            "port": "80",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of OpenSSL installed on the remote host is prior to 3.0.14. It is, therefore, affected by multiple vulnerabilities as referenced in the 3.0.14 advisory.\n\n  - Issue summary: Checking excessively long DSA keys or parameters may be very slow. Impact summary:\n    Applications that use the functions EVP_PKEY_param_check() or EVP_PKEY_public_check() to check a DSA     public key or DSA parameters may experience long delays. Where the key or parameters that are being     checked have been obtained from an untrusted source this may lead to a Denial of Service. The functions     EVP_PKEY_param_check() or EVP_PKEY_public_check() perform various checks on DSA parameters. Some of those     computations take a long time if the modulus (`p` parameter) is too large. Trying to use a very large     modulus is slow and OpenSSL will not allow using public keys with a modulus which is over 10,000 bits in     length for signature verification. However the key and parameter check functions do not limit the modulus     size when performing the checks. An application that calls EVP_PKEY_param_check() or     EVP_PKEY_public_check() and supplies a key or parameters obtained from an untrusted source could be     vulnerable to a Denial of Service attack. These functions are not called by OpenSSL itself on untrusted     DSA keys so only applications that directly call these functions may be vulnerable. Also vulnerable are     the OpenSSL pkey and pkeyparam command line applications when using the `-check` option. The OpenSSL     SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers are affected     by this issue. (CVE-2024-4603)\n\n  - Issue summary: Some non-default TLS server configurations can cause unbounded memory growth when     processing TLSv1.3 sessions Impact summary: An attacker may exploit certain server configurations to     trigger unbounded memory growth that would lead to a Denial of Service This problem can occur in TLSv1.3     if the non-default SSL_OP_NO_TICKET option is being used (but not if early_data support is also configured     and the default anti-replay protection is in use). In this case, under certain conditions, the session     cache can get into an incorrect state and it will fail to flush properly as it fills. The session cache     will continue to grow in an unbounded manner. A malicious client could deliberately create the scenario     for this failure to force a Denial of Service. It may also happen by accident in normal operation. This     issue only affects TLS servers supporting TLSv1.3. It does not affect TLS clients. The FIPS modules in     3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL 1.0.2 is also not affected by this issue.\n    (CVE-2024-2511)\n\n  - Issue summary: Calling the OpenSSL API function SSL_free_buffers may cause memory to be accessed that was     previously freed in some situations Impact summary: A use after free can have a range of potential     consequences such as the corruption of valid data, crashes or execution of arbitrary code. However, only     applications that directly call the SSL_free_buffers function are affected by this issue. Applications     that do not call this function are not vulnerable. Our investigations indicate that this function is     rarely used by applications. The SSL_free_buffers function is used to free the internal OpenSSL buffer     used when processing an incoming record from the network. The call is only expected to succeed if the     buffer is not currently in use. However, two scenarios have been identified where the buffer is freed even     when still in use. The first scenario occurs where a record header has been received from the network and     processed by OpenSSL, but the full record body has not yet arrived. In this case calling SSL_free_buffers     will succeed even though a record has only been partially processed and the buffer is still in use. The     second scenario occurs where a full record containing application data has been received and processed by     OpenSSL but the application has only read part of this data. Again a call to SSL_free_buffers will succeed     even though the buffer is still in use. While these scenarios could occur accidentally during normal     operation a malicious attacker could attempt to engineer a stituation where this occurs. We are not aware     of this issue being actively exploited. The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this     issue. Found by William Ahern (Akamai). Fix developed by Matt Caswell. Fix developed by Watson Ladd     (Akamai). Fixed in OpenSSL 3.3.1 (Affected since 3.3.0). (CVE-2024-4741)\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSL version 3.0.14 or later.",
            "cve": "CVE-2024-2511",
            "cvss3": "7.5",
            "cvss2": "5.4",
            "see_also": "http://www.nessus.org/u?141a6242\nhttp://www.nessus.org/u?2cbb1fb1\nhttp://www.nessus.org/u?8409be15\nhttps://www.cve.org/CVERecord?id=CVE-2024-2511\nhttps://www.cve.org/CVERecord?id=CVE-2024-4603\nhttps://www.cve.org/CVERecord?id=CVE-2024-4741",
            "plugin_output": "Banner           : Apache/2.4.62 (codeit) OpenSSL/3.0.12+quic\nReported version : 3.0.12\nFixed version    : 3.0.14"
        },
        {
            "file_no": 0,
            "ip": "10.27.40.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "185160",
            "pluginname": "OpenSSL 3.0.0 < 3.0.13 Multiple Vulnerabilities",
            "hostname": "",
            "port": "80",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of OpenSSL installed on the remote host is prior to 3.0.13. It is, therefore, affected by multiple vulnerabilities as referenced in the 3.0.13 advisory.\n\n  - Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL to crash leading to a     potential Denial of Service attack Impact summary: Applications loading files in the PKCS12 format from     untrusted sources might terminate abruptly. A file in PKCS12 format can contain certificates and keys and     may come from an untrusted source. The PKCS12 specification allows certain fields to be NULL, but OpenSSL     does not correctly check for this case. This can lead to a NULL pointer dereference that results in     OpenSSL crashing. If an application processes PKCS12 files from an untrusted source using the OpenSSL APIs     then that application will be vulnerable to this issue. OpenSSL APIs that are vulnerable to this are:\n    PKCS12_parse(), PKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes() and     PKCS12_newpass(). We have also fixed a similar issue in SMIME_write_PKCS7(). However since this function     is related to writing data we do not consider it security significant. The FIPS modules in 3.2, 3.1 and     3.0 are not affected by this issue. (CVE-2024-0727)\n\n  - Issue summary: Checking excessively long invalid RSA public keys may take a long time. Impact summary:\n    Applications that use the function EVP_PKEY_public_check() to check RSA public keys may experience long     delays. Where the key that is being checked has been obtained from an untrusted source this may lead to a     Denial of Service. When function EVP_PKEY_public_check() is called on RSA public keys, a computation is     done to confirm that the RSA modulus, n, is composite. For valid RSA keys, n is a product of two or more     large primes and this computation completes quickly. However, if n is an overly large prime, then this     computation would take a long time. An application that calls EVP_PKEY_public_check() and supplies an RSA     key obtained from an untrusted source could be vulnerable to a Denial of Service attack. The function     EVP_PKEY_public_check() is not called from other OpenSSL functions however it is called from the OpenSSL     pkey command line application. For that reason that application is also vulnerable if used with the     '-pubin' and '-check' options on untrusted data. The OpenSSL SSL/TLS implementation is not affected by     this issue. The OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue. (CVE-2023-6237)\n\n  - Issue summary: The POLY1305 MAC (message authentication code) implementation contains a bug that might     corrupt the internal state of applications running on PowerPC CPU based platforms if the CPU provides     vector instructions. Impact summary: If an attacker can influence whether the POLY1305 MAC algorithm is     used, the application state might be corrupted with various application dependent consequences. The     POLY1305 MAC (message authentication code) implementation in OpenSSL for PowerPC CPUs restores the     contents of vector registers in a different order than they are saved. Thus the contents of some of these     vector registers are corrupted when returning to the caller. The vulnerable code is used only on newer     PowerPC processors supporting the PowerISA 2.07 instructions. The consequences of this kind of internal     application state corruption can be various - from no consequences, if the calling application does not     depend on the contents of non-volatile XMM registers at all, to the worst consequences, where the attacker     could get complete control of the application process. However unless the compiler uses the vector     registers for storing pointers, the most likely consequence, if any, would be an incorrect result of some     application dependent calculations or a crash leading to a denial of service. The POLY1305 MAC algorithm     is most frequently used as part of the CHACHA20-POLY1305 AEAD (authenticated encryption with associated     data) algorithm. The most common usage of this AEAD cipher is with TLS protocol versions 1.2 and 1.3. If     this cipher is enabled on the server a malicious client can influence whether this AEAD cipher is used.\n    This implies that TLS server applications using OpenSSL can be potentially impacted. However we are     currently not aware of any concrete application that would be affected by this issue therefore we consider     this a Low severity security issue. (CVE-2023-6129)\n\n  - Issue summary: Generating excessively long X9.42 DH keys or checking excessively long X9.42 DH keys or     parameters may be very slow. Impact summary: Applications that use the functions DH_generate_key() to     generate an X9.42 DH key may experience long delays. Likewise, applications that use DH_check_pub_key(),     DH_check_pub_key_ex() or EVP_PKEY_public_check() to check an X9.42 DH key or X9.42 DH parameters may     experience long delays. Where the key or parameters that are being checked have been obtained from an     untrusted source this may lead to a Denial of Service. While DH_check() performs all the necessary checks     (as of CVE-2023-3817), DH_check_pub_key() doesn't make any of these checks, and is therefore vulnerable     for excessively large P and Q parameters. Likewise, while DH_generate_key() performs a check for an     excessively large P, it doesn't check for an excessively large Q. An application that calls     DH_generate_key() or DH_check_pub_key() and supplies a key or parameters obtained from an untrusted source     could be vulnerable to a Denial of Service attack. DH_generate_key() and DH_check_pub_key() are also     called by a number of other OpenSSL functions. An application calling any of those other functions may     similarly be affected. The other functions affected by this are DH_check_pub_key_ex(),     EVP_PKEY_public_check(), and EVP_PKEY_generate(). Also vulnerable are the OpenSSL pkey command line     application when using the -pubcheck option, as well as the OpenSSL genpkey command line application.\n    The OpenSSL SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers     are not affected by this issue. (CVE-2023-5678)\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSL version 3.0.13 or later.",
            "cve": "CVE-2023-5678",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?02bfb3df\nhttp://www.nessus.org/u?71a978e4\nhttp://www.nessus.org/u?ccacbb1d\nhttp://www.nessus.org/u?fc067b0a\nhttps://www.cve.org/CVERecord?id=CVE-2023-5678\nhttps://www.cve.org/CVERecord?id=CVE-2023-6129\nhttps://www.cve.org/CVERecord?id=CVE-2023-6237\nhttps://www.cve.org/CVERecord?id=CVE-2024-0727",
            "plugin_output": "Banner           : Apache/2.4.62 (codeit) OpenSSL/3.0.12+quic\nReported version : 3.0.12\nFixed version    : 3.0.13"
        },
        {
            "file_no": 0,
            "ip": "10.27.40.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "192966",
            "pluginname": "OpenSSL 3.0.0 < 3.0.14 Multiple Vulnerabilities",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of OpenSSL installed on the remote host is prior to 3.0.14. It is, therefore, affected by multiple vulnerabilities as referenced in the 3.0.14 advisory.\n\n  - Issue summary: Checking excessively long DSA keys or parameters may be very slow. Impact summary:\n    Applications that use the functions EVP_PKEY_param_check() or EVP_PKEY_public_check() to check a DSA     public key or DSA parameters may experience long delays. Where the key or parameters that are being     checked have been obtained from an untrusted source this may lead to a Denial of Service. The functions     EVP_PKEY_param_check() or EVP_PKEY_public_check() perform various checks on DSA parameters. Some of those     computations take a long time if the modulus (`p` parameter) is too large. Trying to use a very large     modulus is slow and OpenSSL will not allow using public keys with a modulus which is over 10,000 bits in     length for signature verification. However the key and parameter check functions do not limit the modulus     size when performing the checks. An application that calls EVP_PKEY_param_check() or     EVP_PKEY_public_check() and supplies a key or parameters obtained from an untrusted source could be     vulnerable to a Denial of Service attack. These functions are not called by OpenSSL itself on untrusted     DSA keys so only applications that directly call these functions may be vulnerable. Also vulnerable are     the OpenSSL pkey and pkeyparam command line applications when using the `-check` option. The OpenSSL     SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers are affected     by this issue. (CVE-2024-4603)\n\n  - Issue summary: Some non-default TLS server configurations can cause unbounded memory growth when     processing TLSv1.3 sessions Impact summary: An attacker may exploit certain server configurations to     trigger unbounded memory growth that would lead to a Denial of Service This problem can occur in TLSv1.3     if the non-default SSL_OP_NO_TICKET option is being used (but not if early_data support is also configured     and the default anti-replay protection is in use). In this case, under certain conditions, the session     cache can get into an incorrect state and it will fail to flush properly as it fills. The session cache     will continue to grow in an unbounded manner. A malicious client could deliberately create the scenario     for this failure to force a Denial of Service. It may also happen by accident in normal operation. This     issue only affects TLS servers supporting TLSv1.3. It does not affect TLS clients. The FIPS modules in     3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL 1.0.2 is also not affected by this issue.\n    (CVE-2024-2511)\n\n  - Issue summary: Calling the OpenSSL API function SSL_free_buffers may cause memory to be accessed that was     previously freed in some situations Impact summary: A use after free can have a range of potential     consequences such as the corruption of valid data, crashes or execution of arbitrary code. However, only     applications that directly call the SSL_free_buffers function are affected by this issue. Applications     that do not call this function are not vulnerable. Our investigations indicate that this function is     rarely used by applications. The SSL_free_buffers function is used to free the internal OpenSSL buffer     used when processing an incoming record from the network. The call is only expected to succeed if the     buffer is not currently in use. However, two scenarios have been identified where the buffer is freed even     when still in use. The first scenario occurs where a record header has been received from the network and     processed by OpenSSL, but the full record body has not yet arrived. In this case calling SSL_free_buffers     will succeed even though a record has only been partially processed and the buffer is still in use. The     second scenario occurs where a full record containing application data has been received and processed by     OpenSSL but the application has only read part of this data. Again a call to SSL_free_buffers will succeed     even though the buffer is still in use. While these scenarios could occur accidentally during normal     operation a malicious attacker could attempt to engineer a stituation where this occurs. We are not aware     of this issue being actively exploited. The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this     issue. Found by William Ahern (Akamai). Fix developed by Matt Caswell. Fix developed by Watson Ladd     (Akamai). Fixed in OpenSSL 3.3.1 (Affected since 3.3.0). (CVE-2024-4741)\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSL version 3.0.14 or later.",
            "cve": "CVE-2024-2511",
            "cvss3": "7.5",
            "cvss2": "5.4",
            "see_also": "http://www.nessus.org/u?141a6242\nhttp://www.nessus.org/u?2cbb1fb1\nhttp://www.nessus.org/u?8409be15\nhttps://www.cve.org/CVERecord?id=CVE-2024-2511\nhttps://www.cve.org/CVERecord?id=CVE-2024-4603\nhttps://www.cve.org/CVERecord?id=CVE-2024-4741",
            "plugin_output": "Banner           : Apache/2.4.62 (codeit) OpenSSL/3.0.12+quic\nReported version : 3.0.12\nFixed version    : 3.0.14"
        },
        {
            "file_no": 0,
            "ip": "10.27.40.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "185160",
            "pluginname": "OpenSSL 3.0.0 < 3.0.13 Multiple Vulnerabilities",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of OpenSSL installed on the remote host is prior to 3.0.13. It is, therefore, affected by multiple vulnerabilities as referenced in the 3.0.13 advisory.\n\n  - Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL to crash leading to a     potential Denial of Service attack Impact summary: Applications loading files in the PKCS12 format from     untrusted sources might terminate abruptly. A file in PKCS12 format can contain certificates and keys and     may come from an untrusted source. The PKCS12 specification allows certain fields to be NULL, but OpenSSL     does not correctly check for this case. This can lead to a NULL pointer dereference that results in     OpenSSL crashing. If an application processes PKCS12 files from an untrusted source using the OpenSSL APIs     then that application will be vulnerable to this issue. OpenSSL APIs that are vulnerable to this are:\n    PKCS12_parse(), PKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes() and     PKCS12_newpass(). We have also fixed a similar issue in SMIME_write_PKCS7(). However since this function     is related to writing data we do not consider it security significant. The FIPS modules in 3.2, 3.1 and     3.0 are not affected by this issue. (CVE-2024-0727)\n\n  - Issue summary: Checking excessively long invalid RSA public keys may take a long time. Impact summary:\n    Applications that use the function EVP_PKEY_public_check() to check RSA public keys may experience long     delays. Where the key that is being checked has been obtained from an untrusted source this may lead to a     Denial of Service. When function EVP_PKEY_public_check() is called on RSA public keys, a computation is     done to confirm that the RSA modulus, n, is composite. For valid RSA keys, n is a product of two or more     large primes and this computation completes quickly. However, if n is an overly large prime, then this     computation would take a long time. An application that calls EVP_PKEY_public_check() and supplies an RSA     key obtained from an untrusted source could be vulnerable to a Denial of Service attack. The function     EVP_PKEY_public_check() is not called from other OpenSSL functions however it is called from the OpenSSL     pkey command line application. For that reason that application is also vulnerable if used with the     '-pubin' and '-check' options on untrusted data. The OpenSSL SSL/TLS implementation is not affected by     this issue. The OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue. (CVE-2023-6237)\n\n  - Issue summary: The POLY1305 MAC (message authentication code) implementation contains a bug that might     corrupt the internal state of applications running on PowerPC CPU based platforms if the CPU provides     vector instructions. Impact summary: If an attacker can influence whether the POLY1305 MAC algorithm is     used, the application state might be corrupted with various application dependent consequences. The     POLY1305 MAC (message authentication code) implementation in OpenSSL for PowerPC CPUs restores the     contents of vector registers in a different order than they are saved. Thus the contents of some of these     vector registers are corrupted when returning to the caller. The vulnerable code is used only on newer     PowerPC processors supporting the PowerISA 2.07 instructions. The consequences of this kind of internal     application state corruption can be various - from no consequences, if the calling application does not     depend on the contents of non-volatile XMM registers at all, to the worst consequences, where the attacker     could get complete control of the application process. However unless the compiler uses the vector     registers for storing pointers, the most likely consequence, if any, would be an incorrect result of some     application dependent calculations or a crash leading to a denial of service. The POLY1305 MAC algorithm     is most frequently used as part of the CHACHA20-POLY1305 AEAD (authenticated encryption with associated     data) algorithm. The most common usage of this AEAD cipher is with TLS protocol versions 1.2 and 1.3. If     this cipher is enabled on the server a malicious client can influence whether this AEAD cipher is used.\n    This implies that TLS server applications using OpenSSL can be potentially impacted. However we are     currently not aware of any concrete application that would be affected by this issue therefore we consider     this a Low severity security issue. (CVE-2023-6129)\n\n  - Issue summary: Generating excessively long X9.42 DH keys or checking excessively long X9.42 DH keys or     parameters may be very slow. Impact summary: Applications that use the functions DH_generate_key() to     generate an X9.42 DH key may experience long delays. Likewise, applications that use DH_check_pub_key(),     DH_check_pub_key_ex() or EVP_PKEY_public_check() to check an X9.42 DH key or X9.42 DH parameters may     experience long delays. Where the key or parameters that are being checked have been obtained from an     untrusted source this may lead to a Denial of Service. While DH_check() performs all the necessary checks     (as of CVE-2023-3817), DH_check_pub_key() doesn't make any of these checks, and is therefore vulnerable     for excessively large P and Q parameters. Likewise, while DH_generate_key() performs a check for an     excessively large P, it doesn't check for an excessively large Q. An application that calls     DH_generate_key() or DH_check_pub_key() and supplies a key or parameters obtained from an untrusted source     could be vulnerable to a Denial of Service attack. DH_generate_key() and DH_check_pub_key() are also     called by a number of other OpenSSL functions. An application calling any of those other functions may     similarly be affected. The other functions affected by this are DH_check_pub_key_ex(),     EVP_PKEY_public_check(), and EVP_PKEY_generate(). Also vulnerable are the OpenSSL pkey command line     application when using the -pubcheck option, as well as the OpenSSL genpkey command line application.\n    The OpenSSL SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers     are not affected by this issue. (CVE-2023-5678)\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSL version 3.0.13 or later.",
            "cve": "CVE-2023-5678",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?02bfb3df\nhttp://www.nessus.org/u?71a978e4\nhttp://www.nessus.org/u?ccacbb1d\nhttp://www.nessus.org/u?fc067b0a\nhttps://www.cve.org/CVERecord?id=CVE-2023-5678\nhttps://www.cve.org/CVERecord?id=CVE-2023-6129\nhttps://www.cve.org/CVERecord?id=CVE-2023-6237\nhttps://www.cve.org/CVERecord?id=CVE-2024-0727",
            "plugin_output": "Banner           : Apache/2.4.62 (codeit) OpenSSL/3.0.12+quic\nReported version : 3.0.12\nFixed version    : 3.0.13"
        },
        {
            "file_no": 0,
            "ip": "10.27.40.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "209150",
            "pluginname": "OpenSSL 3.0.0 < 3.0.16 Vulnerability",
            "hostname": "",
            "port": "80",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of OpenSSL installed on the remote host is prior to 3.0.16. It is, therefore, affected by a vulnerability as referenced in the 3.0.16 advisory.\n\n  - Issue summary: Use of the low-level GF(2^m) elliptic curve APIs with untrusted explicit values for the     field polynomial can lead to out-of-bounds memory reads or writes. Impact summary: Out of bound memory     writes can lead to an application crash or even a possibility of a remote code execution, however, in all     the protocols involving Elliptic Curve Cryptography that we're aware of, either only named curves are     supported, or, if explicit curve parameters are supported, they specify an X9.62 encoding of binary     (GF(2^m)) curves that can't represent problematic input values. Thus the likelihood of existence of a     vulnerable application is low. In particular, the X9.62 encoding is used for ECC keys in X.509     certificates, so problematic inputs cannot occur in the context of processing X.509 certificates. Any     problematic use-cases would have to be using an exotic curve encoding. The affected APIs include:\n    EC_GROUP_new_curve_GF2m(), EC_GROUP_new_from_params(), and various supporting BN_GF2m_*() functions.\n    Applications working with exotic explicit binary (GF(2^m)) curve parameters, that make it possible to     represent invalid field polynomials with a zero constant term, via the above or similar APIs, may     terminate abruptly as a result of reading or writing outside of array bounds. Remote code execution cannot     easily be ruled out. The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.\n    (CVE-2024-9143)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSL version 3.0.16 or later.",
            "cve": "CVE-2024-9143",
            "cvss3": "4.3",
            "cvss2": "6.8",
            "see_also": "http://www.nessus.org/u?4cbe1bfc\nhttps://openssl-library.org/news/secadv/20241016.txt\nhttps://openssl-library.org/policies/general/security-policy/#low\nhttps://www.cve.org/CVERecord?id=CVE-2024-9143",
            "plugin_output": "Banner           : Apache/2.4.62 (codeit) OpenSSL/3.0.12+quic\nReported version : 3.0.12\nFixed version    : 3.0.16"
        },
        {
            "file_no": 0,
            "ip": "10.27.40.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "209150",
            "pluginname": "OpenSSL 3.0.0 < 3.0.16 Vulnerability",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of OpenSSL installed on the remote host is prior to 3.0.16. It is, therefore, affected by a vulnerability as referenced in the 3.0.16 advisory.\n\n  - Issue summary: Use of the low-level GF(2^m) elliptic curve APIs with untrusted explicit values for the     field polynomial can lead to out-of-bounds memory reads or writes. Impact summary: Out of bound memory     writes can lead to an application crash or even a possibility of a remote code execution, however, in all     the protocols involving Elliptic Curve Cryptography that we're aware of, either only named curves are     supported, or, if explicit curve parameters are supported, they specify an X9.62 encoding of binary     (GF(2^m)) curves that can't represent problematic input values. Thus the likelihood of existence of a     vulnerable application is low. In particular, the X9.62 encoding is used for ECC keys in X.509     certificates, so problematic inputs cannot occur in the context of processing X.509 certificates. Any     problematic use-cases would have to be using an exotic curve encoding. The affected APIs include:\n    EC_GROUP_new_curve_GF2m(), EC_GROUP_new_from_params(), and various supporting BN_GF2m_*() functions.\n    Applications working with exotic explicit binary (GF(2^m)) curve parameters, that make it possible to     represent invalid field polynomials with a zero constant term, via the above or similar APIs, may     terminate abruptly as a result of reading or writing outside of array bounds. Remote code execution cannot     easily be ruled out. The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.\n    (CVE-2024-9143)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSL version 3.0.16 or later.",
            "cve": "CVE-2024-9143",
            "cvss3": "4.3",
            "cvss2": "6.8",
            "see_also": "http://www.nessus.org/u?4cbe1bfc\nhttps://openssl-library.org/news/secadv/20241016.txt\nhttps://openssl-library.org/policies/general/security-policy/#low\nhttps://www.cve.org/CVERecord?id=CVE-2024-9143",
            "plugin_output": "Banner           : Apache/2.4.62 (codeit) OpenSSL/3.0.12+quic\nReported version : 3.0.12\nFixed version    : 3.0.16"
        },
        {
            "file_no": 0,
            "ip": "10.27.40.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "201085",
            "pluginname": "OpenSSL 3.0.0 < 3.0.15 Vulnerability",
            "hostname": "",
            "port": "80",
            "protocol": "tcp",
            "severity": "4",
            "description": "The version of OpenSSL installed on the remote host is prior to 3.0.15. It is, therefore, affected by a vulnerability as referenced in the 3.0.15 advisory.\n\n  - Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an empty supported client     protocols buffer may cause a crash or memory contents to be sent to the peer. Impact summary: A buffer     overread can have a range of potential consequences such as unexpected application beahviour or a crash.\n    In particular this issue could result in up to 255 bytes of arbitrary private data from memory being sent     to the peer leading to a loss of confidentiality. However, only applications that directly call the     SSL_select_next_proto function with a 0 length list of supported client protocols are affected by this     issue. This would normally never be a valid scenario and is typically not under attacker control but may     occur by accident in the case of a configuration or programming error in the calling application. The     OpenSSL API function SSL_select_next_proto is typically used by TLS applications that support ALPN     (Application Layer Protocol Negotiation) or NPN (Next Protocol Negotiation). NPN is older, was never     standardised and is deprecated in favour of ALPN. We believe that ALPN is significantly more widely     deployed than NPN. The SSL_select_next_proto function accepts a list of protocols from the server and a     list of protocols from the client and returns the first protocol that appears in the server list that also     appears in the client list. In the case of no overlap between the two lists it returns the first item in     the client list. In either case it will signal whether an overlap between the two lists was found. In the     case where SSL_select_next_proto is called with a zero length client list it fails to notice this     condition and returns the memory immediately following the client list pointer (and reports that there was     no overlap in the lists). This function is typically called from a server side application callback for     ALPN or a client side application callback for NPN. In the case of ALPN the list of protocols supplied by     the client is guaranteed by libssl to never be zero in length. The list of server protocols comes from the     application and should never normally be expected to be of zero length. In this case if the     SSL_select_next_proto function has been called as expected (with the list supplied by the client passed in     the client/client_len parameters), then the application will not be vulnerable to this issue. If the     application has accidentally been configured with a zero length server list, and has accidentally passed     that zero length server list in the client/client_len parameters, and has additionally failed to correctly     handle a no overlap response (which would normally result in a handshake failure in ALPN) then it will     be vulnerable to this problem. In the case of NPN, the protocol permits the client to opportunistically     select a protocol when there is no overlap. OpenSSL returns the first client protocol in the no overlap     case in support of this. The list of client protocols comes from the application and should never normally     be expected to be of zero length. However if the SSL_select_next_proto function is accidentally called     with a client_len of 0 then an invalid memory pointer will be returned instead. If the application uses     this output as the opportunistic protocol then the loss of confidentiality will occur. This issue has been     assessed as Low severity because applications are most likely to be vulnerable if they are using NPN     instead of ALPN - but NPN is not widely used. It also requires an application configuration or programming     error. Finally, this issue would not typically be under attacker control making active exploitation     unlikely. The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue. Due to the low     severity of this issue we are not issuing new releases of OpenSSL at this time. The fix will be included     in the next releases when they become available. Found by Joseph Birr-Pixton. Thanks to David Benjamin     (Google). Fix developed by Matt Caswell. Fixed in OpenSSL 1.1.1za (premium support) (Affected since     1.1.1). (CVE-2024-5535)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSL version 3.0.15 or later.",
            "cve": "CVE-2024-5535",
            "cvss3": "9.1",
            "cvss2": "4.3",
            "see_also": "http://www.nessus.org/u?8f2a60eb\nhttps://www.cve.org/CVERecord?id=CVE-2024-5535",
            "plugin_output": "Banner           : Apache/2.4.62 (codeit) OpenSSL/3.0.12+quic\nReported version : 3.0.12\nFixed version    : 3.0.15"
        },
        {
            "file_no": 0,
            "ip": "10.27.40.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "201085",
            "pluginname": "OpenSSL 3.0.0 < 3.0.15 Vulnerability",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "4",
            "description": "The version of OpenSSL installed on the remote host is prior to 3.0.15. It is, therefore, affected by a vulnerability as referenced in the 3.0.15 advisory.\n\n  - Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an empty supported client     protocols buffer may cause a crash or memory contents to be sent to the peer. Impact summary: A buffer     overread can have a range of potential consequences such as unexpected application beahviour or a crash.\n    In particular this issue could result in up to 255 bytes of arbitrary private data from memory being sent     to the peer leading to a loss of confidentiality. However, only applications that directly call the     SSL_select_next_proto function with a 0 length list of supported client protocols are affected by this     issue. This would normally never be a valid scenario and is typically not under attacker control but may     occur by accident in the case of a configuration or programming error in the calling application. The     OpenSSL API function SSL_select_next_proto is typically used by TLS applications that support ALPN     (Application Layer Protocol Negotiation) or NPN (Next Protocol Negotiation). NPN is older, was never     standardised and is deprecated in favour of ALPN. We believe that ALPN is significantly more widely     deployed than NPN. The SSL_select_next_proto function accepts a list of protocols from the server and a     list of protocols from the client and returns the first protocol that appears in the server list that also     appears in the client list. In the case of no overlap between the two lists it returns the first item in     the client list. In either case it will signal whether an overlap between the two lists was found. In the     case where SSL_select_next_proto is called with a zero length client list it fails to notice this     condition and returns the memory immediately following the client list pointer (and reports that there was     no overlap in the lists). This function is typically called from a server side application callback for     ALPN or a client side application callback for NPN. In the case of ALPN the list of protocols supplied by     the client is guaranteed by libssl to never be zero in length. The list of server protocols comes from the     application and should never normally be expected to be of zero length. In this case if the     SSL_select_next_proto function has been called as expected (with the list supplied by the client passed in     the client/client_len parameters), then the application will not be vulnerable to this issue. If the     application has accidentally been configured with a zero length server list, and has accidentally passed     that zero length server list in the client/client_len parameters, and has additionally failed to correctly     handle a no overlap response (which would normally result in a handshake failure in ALPN) then it will     be vulnerable to this problem. In the case of NPN, the protocol permits the client to opportunistically     select a protocol when there is no overlap. OpenSSL returns the first client protocol in the no overlap     case in support of this. The list of client protocols comes from the application and should never normally     be expected to be of zero length. However if the SSL_select_next_proto function is accidentally called     with a client_len of 0 then an invalid memory pointer will be returned instead. If the application uses     this output as the opportunistic protocol then the loss of confidentiality will occur. This issue has been     assessed as Low severity because applications are most likely to be vulnerable if they are using NPN     instead of ALPN - but NPN is not widely used. It also requires an application configuration or programming     error. Finally, this issue would not typically be under attacker control making active exploitation     unlikely. The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue. Due to the low     severity of this issue we are not issuing new releases of OpenSSL at this time. The fix will be included     in the next releases when they become available. Found by Joseph Birr-Pixton. Thanks to David Benjamin     (Google). Fix developed by Matt Caswell. Fixed in OpenSSL 1.1.1za (premium support) (Affected since     1.1.1). (CVE-2024-5535)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSL version 3.0.15 or later.",
            "cve": "CVE-2024-5535",
            "cvss3": "9.1",
            "cvss2": "4.3",
            "see_also": "http://www.nessus.org/u?8f2a60eb\nhttps://www.cve.org/CVERecord?id=CVE-2024-5535",
            "plugin_output": "Banner           : Apache/2.4.62 (codeit) OpenSSL/3.0.12+quic\nReported version : 3.0.12\nFixed version    : 3.0.15"
        },
        {
            "file_no": 0,
            "ip": "10.27.40.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/O=Unspecified/OU=ca-6976481778888345178/CN=acsi-sl-274/E=root@acsi-sl-274"
        },
        {
            "file_no": 0,
            "ip": "10.27.40.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificates were part of the certificate chain\nsent by the remote host, but they have expired :\n|-Subject   : C=US/O=Unspecified/OU=ca-6976481778888345178/CN=acsi-sl-274/E=root@acsi-sl-274\n|-Not After : Apr 13 10:02:52 2024 GMT\n|-Subject   : C=US/O=Unspecified/CN=acsi-sl-274/E=root@acsi-sl-274\n|-Not After : Apr 13 10:02:52 2024 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/O=Unspecified/OU=ca-6976481778888345178/CN=acsi-sl-274/E=root@acsi-sl-274\n|-Issuer  : C=US/O=Unspecified/OU=ca-6976481778888345178/CN=acsi-sl-274/E=root@acsi-sl-274"
        },
        {
            "file_no": 0,
            "ip": "10.27.40.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, O=Unspecified, CN=acsi-sl-274, emailAddress=root@acsi-sl-274\nIssuer           : C=US, O=Unspecified, OU=ca-6976481778888345178, CN=acsi-sl-274, emailAddress=root@acsi-sl-274\nNot valid before : Apr 14 10:02:52 2023 GMT\nNot valid after  : Apr 13 10:02:52 2024 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.40.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "11213",
            "pluginname": "HTTP TRACE / TRACK Methods Allowed",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote web server supports the TRACE and/or TRACK methods. TRACE and TRACK are HTTP methods that are used to debug web server connections.",
            "solution": "Disable these HTTP methods. Refer to the plugin output for more information.",
            "cve": "CVE-2003-1567",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?e979b5cb\nhttp://www.apacheweek.com/issues/03-01-24\nhttps://download.oracle.com/sunalerts/1000718.1.html",
            "plugin_output": "To disable these methods, add the following lines for each virtual\nhost in your configuration file :\nRewriteEngine on\nRewriteCond %{REQUEST_METHOD} ^(TRACE|TRACK)\nRewriteRule .* - [F]\nAlternatively, note that Apache versions 1.3.34, 2.0.55, and 2.2\nsupport disabling the TRACE method natively via the 'TraceEnable'\ndirective.\nNessus sent the following TRACE request : \\n\\n------------------------------ snip ------------------------------\\nTRACE /Nessus1896244508.html HTTP/1.1\nConnection: Close\nHost: 10.27.40.1\nPragma: no-cache\nUser-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0)\nAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\nAccept-Language: en\nAccept-Charset: iso-8859-1,*,utf-8\n------------------------------ snip ------------------------------\\n\\nand received the following response from the remote server :\\n\\n------------------------------ snip ------------------------------\\nHTTP/1.1 200 OK\nDate: Thu, 19 Dec 2024 11:04:18 GMT\nServer: Apache/2.4.62 (codeit) OpenSSL/3.0.12+quic\nKeep-Alive: timeout=5, max=100\nConnection: Keep-Alive\nTransfer-Encoding: chunked\nContent-Type: message/http\nTRACE /Nessus1896244508.html HTTP/1.1\nConnection: Keep-Alive\nHost: 10.27.40.1\nPragma: no-cache\nUser-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0)\nAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\nAccept-Language: en\nAccept-Charset: iso-8859-1,*,utf-8\n------------------------------ snip ------------------------------\\n"
        },
        {
            "file_no": 0,
            "ip": "10.27.40.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "11213",
            "pluginname": "HTTP TRACE / TRACK Methods Allowed",
            "hostname": "",
            "port": "80",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote web server supports the TRACE and/or TRACK methods. TRACE and TRACK are HTTP methods that are used to debug web server connections.",
            "solution": "Disable these HTTP methods. Refer to the plugin output for more information.",
            "cve": "CVE-2003-1567",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?e979b5cb\nhttp://www.apacheweek.com/issues/03-01-24\nhttps://download.oracle.com/sunalerts/1000718.1.html",
            "plugin_output": "To disable these methods, add the following lines for each virtual\nhost in your configuration file :\nRewriteEngine on\nRewriteCond %{REQUEST_METHOD} ^(TRACE|TRACK)\nRewriteRule .* - [F]\nAlternatively, note that Apache versions 1.3.34, 2.0.55, and 2.2\nsupport disabling the TRACE method natively via the 'TraceEnable'\ndirective.\nNessus sent the following TRACE request : \\n\\n------------------------------ snip ------------------------------\\nTRACE /Nessus1412720673.html HTTP/1.1\nConnection: Close\nHost: 10.27.40.1\nPragma: no-cache\nUser-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0)\nAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\nAccept-Language: en\nAccept-Charset: iso-8859-1,*,utf-8\n------------------------------ snip ------------------------------\\n\\nand received the following response from the remote server :\\n\\n------------------------------ snip ------------------------------\\nHTTP/1.1 200 OK\nDate: Thu, 19 Dec 2024 11:04:18 GMT\nServer: Apache/2.4.62 (codeit) OpenSSL/3.0.12+quic\nKeep-Alive: timeout=5, max=100\nConnection: Keep-Alive\nTransfer-Encoding: chunked\nContent-Type: message/http\nTRACE /Nessus1412720673.html HTTP/1.1\nConnection: Keep-Alive\nHost: 10.27.40.1\nPragma: no-cache\nUser-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0)\nAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\nAccept-Language: en\nAccept-Charset: iso-8859-1,*,utf-8\n------------------------------ snip ------------------------------\\n"
        },
        {
            "file_no": 0,
            "ip": "10.27.40.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.39.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.39.190",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.39.133",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "58453",
            "pluginname": "Terminal Services Doesn't Use Network Level Authentication (NLA) Only",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote Terminal Services is not configured to use Network Level Authentication (NLA) only. NLA uses the Credential Security Support Provider (CredSSP) protocol to perform strong server authentication either through TLS/SSL or Kerberos mechanisms, which protect against man-in-the-middle attacks. In addition to improving authentication, NLA also helps protect the remote computer from malicious users and software by completing user authentication before a full RDP connection is established.",
            "solution": "Enable Network Level Authentication (NLA) on the remote RDP server. This is generally done on the 'Remote' tab of the 'System' settings on Windows.",
            "cve": "",
            "cvss3": "4.0",
            "cvss2": "4.3",
            "see_also": "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc732713(v=ws.11)\nhttp://www.nessus.org/u?e2628096",
            "plugin_output": "Nessus was able to negotiate non-NLA (Network Level Authentication) security."
        },
        {
            "file_no": 0,
            "ip": "10.27.39.133",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.39.133",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.39.133",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.39.133",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=acsi-sw-105\n|-Issuer  : CN=acsi-sw-105"
        },
        {
            "file_no": 0,
            "ip": "10.27.39.133",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=acsi-sw-105"
        },
        {
            "file_no": 0,
            "ip": "10.27.39.133",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8834",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : O=Nessus Users United/OU=Nessus Server/L=New York/C=US/ST=NY/CN=acsi-sw-105\n|-Issuer  : O=Nessus Users United/OU=Nessus Certification Authority/L=New York/C=US/ST=NY/CN=Nessus Certification Authority"
        },
        {
            "file_no": 0,
            "ip": "10.27.39.133",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "57608",
            "pluginname": "SMB Signing not required",
            "hostname": "",
            "port": "445",
            "protocol": "tcp",
            "severity": "2",
            "description": "Signing is not required on the remote SMB server. An unauthenticated, remote attacker can exploit this to conduct man-in-the-middle attacks against the SMB server.",
            "solution": "Enforce message signing in the host's configuration. On Windows, this is found in the policy setting 'Microsoft network server: Digitally sign communications (always)'. On Samba, the setting is called 'server signing'. See the 'see also' links for further details.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?df39b8b3\nhttp://technet.microsoft.com/en-us/library/cc731957.aspx\nhttp://www.nessus.org/u?74b80723\nhttps://www.samba.org/samba/docs/current/man-html/smb.conf.5.html\nhttp://www.nessus.org/u?a3cac4ea",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.39.129",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.39.129",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.39.129",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.39.129",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.39.129",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "58453",
            "pluginname": "Terminal Services Doesn't Use Network Level Authentication (NLA) Only",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote Terminal Services is not configured to use Network Level Authentication (NLA) only. NLA uses the Credential Security Support Provider (CredSSP) protocol to perform strong server authentication either through TLS/SSL or Kerberos mechanisms, which protect against man-in-the-middle attacks. In addition to improving authentication, NLA also helps protect the remote computer from malicious users and software by completing user authentication before a full RDP connection is established.",
            "solution": "Enable Network Level Authentication (NLA) on the remote RDP server. This is generally done on the 'Remote' tab of the 'System' settings on Windows.",
            "cve": "",
            "cvss3": "4.0",
            "cvss2": "4.3",
            "see_also": "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc732713(v=ws.11)\nhttp://www.nessus.org/u?e2628096",
            "plugin_output": "Nessus was able to negotiate non-NLA (Network Level Authentication) security."
        },
        {
            "file_no": 0,
            "ip": "10.27.39.129",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=acsi-sw-068A"
        },
        {
            "file_no": 0,
            "ip": "10.27.39.129",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=acsi-sw-068A\n|-Issuer  : CN=acsi-sw-068A"
        },
        {
            "file_no": 0,
            "ip": "10.27.39.126",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.39.62",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.38.5",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=TX/L=Austin/O=Thales/CN=CipherTrust Root CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.38.5",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "9000",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=TX/L=Austin/O=Thales/CN=CipherTrust Root CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.38.5",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=TX/L=Austin/O=Thales/CN=CipherTrust Root CA\n|-Issuer  : C=US/ST=TX/L=Austin/O=Thales/CN=CipherTrust Root CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.38.5",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "9000",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=TX/L=Austin/O=Thales/CN=CipherTrust Root CA\n|-Issuer  : C=US/ST=TX/L=Austin/O=Thales/CN=CipherTrust Root CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.38.3",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "134220",
            "pluginname": "nginx < 1.17.7 Information Disclosure",
            "hostname": "",
            "port": "8080",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its Server response header, the installed version of nginx is prior to 1.17.7. It is, therefore, affected by an information disclosure vulnerability.",
            "solution": "Upgrade to nginx version 1.17.7 or later.",
            "cve": "CVE-2019-20372",
            "cvss3": "5.3",
            "cvss2": "4.3",
            "see_also": "http://www.nessus.org/u?fd026623",
            "plugin_output": "URL               : http://10.27.38.3:8080/\nInstalled version : 1.14.1\nFixed version     : 1.17.7"
        },
        {
            "file_no": 0,
            "ip": "10.27.38.3",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "134220",
            "pluginname": "nginx < 1.17.7 Information Disclosure",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its Server response header, the installed version of nginx is prior to 1.17.7. It is, therefore, affected by an information disclosure vulnerability.",
            "solution": "Upgrade to nginx version 1.17.7 or later.",
            "cve": "CVE-2019-20372",
            "cvss3": "5.3",
            "cvss2": "4.3",
            "see_also": "http://www.nessus.org/u?fd026623",
            "plugin_output": "URL               : https://10.27.38.3/\nInstalled version : 1.14.1\nFixed version     : 1.17.7"
        },
        {
            "file_no": 0,
            "ip": "10.27.38.3",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Taipei/L=Taipei/O=IDM/OU=ATHENA/CN=idM,ATHENA CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.38.3",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taipei/L=Taipei/O=IDM/OU=ATHENA/CN=idM,ATHENA CA\n|-Issuer  : C=TW/ST=Taipei/L=Taipei/O=IDM/OU=ATHENA/CN=idM,ATHENA CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.38.3",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "9091",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/O=52e4b06a90a5434da01b1184607b0eee/CN=acsi-sl-245.idm.athena.local\n|-Issuer  : C=US/O=52e4b06a90a5434da01b1184607b0eee/OU=ca-3721084190645787896/CN=acsi-sl-245.idm.athena.local"
        },
        {
            "file_no": 0,
            "ip": "10.27.38.2",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "208027",
            "pluginname": "Grafana Labs Incorrect Permission (cve-2024-8118)",
            "hostname": "",
            "port": "3000",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Grafana Labs installed on the remote host is prior to 10.3.10, 10.4.9, 11.0.5, 11.1.6, or 11.2.1. It is, therefore, affected by a vulnerability as referenced in the cve-2024-8118 advisory.\n\n  - In Grafana, the wrong permission is applied to the alert rule write API endpoint, allowing users with     permission to write external alert instances to also write alert rules. (CVE-2024-8118)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Grafana Labs version 10.3.10 / 10.4.9 / 11.0.5 / 11.1.6 / 11.2.1 or later.",
            "cve": "CVE-2024-8118",
            "cvss3": "4.7",
            "cvss2": "5.8",
            "see_also": "https://grafana.com/security/security-advisories/cve-2024-8118/",
            "plugin_output": "URL               : http://10.27.38.2:3000/login\nInstalled version : 11.0.0\nFixed version     : 11.0.5"
        },
        {
            "file_no": 0,
            "ip": "10.27.38.2",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=ACSI/OU=ACSI"
        },
        {
            "file_no": 0,
            "ip": "10.27.38.2",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "9091",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : O=8fd94b1434a4436992bda78b5ee613f0/CN=acsi-sl-244.idm.athena.local"
        },
        {
            "file_no": 0,
            "ip": "10.27.38.2",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=TW/ST=Taiwan/L=Taipei/O=ACSI/OU=ACSI\n|-Not After : Jan 09 09:06:37 2024 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=ACSI/OU=ACSI\n|-Issuer  : C=TW/ST=Taiwan/L=Taipei/O=ACSI/OU=ACSI"
        },
        {
            "file_no": 0,
            "ip": "10.27.38.2",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "9091",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : O=8fd94b1434a4436992bda78b5ee613f0/CN=acsi-sl-244.idm.athena.local\n|-Issuer  : O=8fd94b1434a4436992bda78b5ee613f0/CN=acsi-sl-244.idm.athena.local"
        },
        {
            "file_no": 0,
            "ip": "10.27.38.2",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=TW, ST=Taiwan, L=Taipei, O=ACSI, OU=ACSI\nIssuer           : C=TW, ST=Taiwan, L=Taipei, O=ACSI, OU=ACSI\nNot valid before : Jan  9 09:06:37 2023 GMT\nNot valid after  : Jan  9 09:06:37 2024 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.38.1",
            "system": "Windows 6.1",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : O=IDM.ATHENA.LOCAL/CN=Certificate Authority"
        },
        {
            "file_no": 0,
            "ip": "10.27.38.1",
            "system": "Windows 6.1",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "636",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : O=IDM.ATHENA.LOCAL/CN=Certificate Authority"
        },
        {
            "file_no": 0,
            "ip": "10.27.38.1",
            "system": "Windows 6.1",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : O=IDM.ATHENA.LOCAL/CN=Certificate Authority"
        },
        {
            "file_no": 0,
            "ip": "10.27.38.1",
            "system": "Windows 6.1",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : O=IDM.ATHENA.LOCAL/CN=Certificate Authority\n|-Issuer  : O=IDM.ATHENA.LOCAL/CN=Certificate Authority"
        },
        {
            "file_no": 0,
            "ip": "10.27.38.1",
            "system": "Windows 6.1",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "9091",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/O=52e4b06a90a5434da01b1184607b0eee/CN=acsi-sl-243.idm.athena.local\n|-Not After : Dec 08 21:15:18 2023 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/O=52e4b06a90a5434da01b1184607b0eee/CN=acsi-sl-243.idm.athena.local\n|-Issuer  : C=US/O=52e4b06a90a5434da01b1184607b0eee/OU=ca-5633982222053844783/CN=acsi-sl-243.idm.athena.local"
        },
        {
            "file_no": 0,
            "ip": "10.27.38.1",
            "system": "Windows 6.1",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "636",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : O=IDM.ATHENA.LOCAL/CN=Certificate Authority\n|-Issuer  : O=IDM.ATHENA.LOCAL/CN=Certificate Authority"
        },
        {
            "file_no": 0,
            "ip": "10.27.38.1",
            "system": "Windows 6.1",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : O=IDM.ATHENA.LOCAL/CN=Certificate Authority\n|-Issuer  : O=IDM.ATHENA.LOCAL/CN=Certificate Authority"
        },
        {
            "file_no": 0,
            "ip": "10.27.38.1",
            "system": "Windows 6.1",
            "os": "windows",
            "pluginid": "10595",
            "pluginname": "DNS Server Zone Transfer Information Disclosure (AXFR)",
            "hostname": "",
            "port": "53",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote name server allows DNS zone transfers to be performed. \n\nA zone transfer lets a remote attacker instantly populate a list of potential targets.  In addition, companies often use a naming convention that can give hints as to a servers primary application (for instance, proxy.example.com, payroll.example.com, b2b.example.com, etc.). \n\nAs such, this information is of great use to an attacker, who may use it to gain information about the topology of the network and spot new targets.",
            "solution": "Limit DNS zone transfers to only the servers that need the information.",
            "cve": "CVE-1999-0532",
            "cvss3": "",
            "cvss2": "5.0",
            "see_also": "https://en.wikipedia.org/wiki/AXFR",
            "plugin_output": "+ Domain \"localhost\":\nlocalhost. name server localhost.\nlocalhost. has address 127.0.0.1\nlocalhost. has IPv6 address 0000:0000:0000:0000:0000:0000:0000:0001"
        },
        {
            "file_no": 0,
            "ip": "10.27.38.1",
            "system": "Windows 6.1",
            "os": "windows",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "9091",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, O=52e4b06a90a5434da01b1184607b0eee, CN=acsi-sl-243.idm.athena.local\nIssuer           : C=US, O=52e4b06a90a5434da01b1184607b0eee, OU=ca-5633982222053844783, CN=acsi-sl-243.idm.athena.local\nNot valid before : Nov  3 09:35:18 2022 GMT\nNot valid after  : Dec  8 21:15:18 2023 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.38.1",
            "system": "Windows 6.1",
            "os": "windows",
            "pluginid": "11213",
            "pluginname": "HTTP TRACE / TRACK Methods Allowed",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote web server supports the TRACE and/or TRACK methods. TRACE and TRACK are HTTP methods that are used to debug web server connections.",
            "solution": "Disable these HTTP methods. Refer to the plugin output for more information.",
            "cve": "CVE-2003-1567",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?e979b5cb\nhttp://www.apacheweek.com/issues/03-01-24\nhttps://download.oracle.com/sunalerts/1000718.1.html",
            "plugin_output": "To disable these methods, add the following lines for each virtual\nhost in your configuration file :\nRewriteEngine on\nRewriteCond %{REQUEST_METHOD} ^(TRACE|TRACK)\nRewriteRule .* - [F]\nAlternatively, note that Apache versions 1.3.34, 2.0.55, and 2.2\nsupport disabling the TRACE method natively via the 'TraceEnable'\ndirective.\nNessus sent the following TRACE request : \\n\\n------------------------------ snip ------------------------------\\nTRACE /Nessus1812499046.html HTTP/1.1\nConnection: Close\nHost: 10.27.38.1\nPragma: no-cache\nUser-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0)\nAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\nAccept-Language: en\nAccept-Charset: iso-8859-1,*,utf-8\n------------------------------ snip ------------------------------\\n\\nand received the following response from the remote server :\\n\\n------------------------------ snip ------------------------------\\nHTTP/1.1 200 OK\nDate: Thu, 19 Dec 2024 11:02:38 GMT\nServer: Apache/2.4.37 (Red Hat Enterprise Linux) OpenSSL/1.1.1k mod_auth_gssapi/1.6.1 mod_wsgi/4.6.4 Python/3.6\nKeep-Alive: timeout=30, max=100\nConnection: Keep-Alive\nTransfer-Encoding: chunked\nContent-Type: message/http\nTRACE /Nessus1812499046.html HTTP/1.1\nConnection: Keep-Alive\nHost: 10.27.38.1\nPragma: no-cache\nUser-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0)\nAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\nAccept-Language: en\nAccept-Charset: iso-8859-1,*,utf-8\n------------------------------ snip ------------------------------\\n"
        },
        {
            "file_no": 0,
            "ip": "10.27.38.1",
            "system": "Windows 6.1",
            "os": "windows",
            "pluginid": "11213",
            "pluginname": "HTTP TRACE / TRACK Methods Allowed",
            "hostname": "",
            "port": "80",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote web server supports the TRACE and/or TRACK methods. TRACE and TRACK are HTTP methods that are used to debug web server connections.",
            "solution": "Disable these HTTP methods. Refer to the plugin output for more information.",
            "cve": "CVE-2003-1567",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?e979b5cb\nhttp://www.apacheweek.com/issues/03-01-24\nhttps://download.oracle.com/sunalerts/1000718.1.html",
            "plugin_output": "To disable these methods, add the following lines for each virtual\nhost in your configuration file :\nRewriteEngine on\nRewriteCond %{REQUEST_METHOD} ^(TRACE|TRACK)\nRewriteRule .* - [F]\nAlternatively, note that Apache versions 1.3.34, 2.0.55, and 2.2\nsupport disabling the TRACE method natively via the 'TraceEnable'\ndirective.\nNessus sent the following TRACE request : \\n\\n------------------------------ snip ------------------------------\\nTRACE /Nessus655437666.html HTTP/1.1\nConnection: Close\nHost: 10.27.38.1\nPragma: no-cache\nUser-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0)\nAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\nAccept-Language: en\nAccept-Charset: iso-8859-1,*,utf-8\n------------------------------ snip ------------------------------\\n\\nand received the following response from the remote server :\\n\\n------------------------------ snip ------------------------------\\nHTTP/1.1 200 OK\nDate: Thu, 19 Dec 2024 11:02:38 GMT\nServer: Apache/2.4.37 (Red Hat Enterprise Linux) OpenSSL/1.1.1k mod_auth_gssapi/1.6.1 mod_wsgi/4.6.4 Python/3.6\nKeep-Alive: timeout=30, max=100\nConnection: Keep-Alive\nTransfer-Encoding: chunked\nContent-Type: message/http\nTRACE /Nessus655437666.html HTTP/1.1\nConnection: Keep-Alive\nHost: 10.27.38.1\nPragma: no-cache\nUser-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0)\nAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\nAccept-Language: en\nAccept-Charset: iso-8859-1,*,utf-8\n------------------------------ snip ------------------------------\\n"
        },
        {
            "file_no": 0,
            "ip": "10.27.37.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.37.10",
            "system": "Microsoft Windows Server 2012 R2",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=CA/O=Trend Micro/OU=DeepDiscoveryInspector/CN=Deep Discovery Inspector"
        },
        {
            "file_no": 0,
            "ip": "10.27.37.10",
            "system": "Microsoft Windows Server 2012 R2",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=CA/O=Trend Micro/OU=DeepDiscoveryInspector/CN=Deep Discovery Inspector\n|-Issuer  : C=US/ST=CA/O=Trend Micro/OU=DeepDiscoveryInspector/CN=Deep Discovery Inspector"
        },
        {
            "file_no": 0,
            "ip": "10.27.37.10",
            "system": "Microsoft Windows Server 2012 R2",
            "os": "windows",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 578 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.37.9",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.37.9",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.37.9",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.37.9",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=Cloudbase-Init WinRM"
        },
        {
            "file_no": 0,
            "ip": "10.27.37.9",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=Cloudbase-Init WinRM\n|-Issuer  : CN=Cloudbase-Init WinRM"
        },
        {
            "file_no": 0,
            "ip": "10.27.37.9",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "35291",
            "pluginname": "SSL Certificate Signed Using Weak Hashing Algorithm",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote service uses an SSL certificate chain that has been signed using a cryptographically weak hashing algorithm (e.g. MD2, MD4, MD5, or SHA1). These signature algorithms are known to be vulnerable to collision attacks. An attacker can exploit this to generate another certificate with the same digital signature, allowing an attacker to masquerade as the affected service.\n\nNote that this plugin reports all SSL certificate chains signed with SHA-1 that expire after January 1, 2017 as vulnerable. This is in accordance with Google's gradual sunsetting of the SHA-1 cryptographic hash algorithm.\n\nNote that certificates in the chain that are contained in the Nessus CA database (known_CA.inc) have been ignored.",
            "solution": "Contact the Certificate Authority to have the SSL certificate reissued.",
            "cve": "CVE-2004-2761",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://tools.ietf.org/html/rfc3279\nhttp://www.nessus.org/u?9bb87bf2\nhttp://www.nessus.org/u?e120eea1\nhttp://www.nessus.org/u?5d894816\nhttp://www.nessus.org/u?51db68aa\nhttp://www.nessus.org/u?9dc7bfba",
            "plugin_output": "The following certificates were part of the certificate chain sent by\nthe remote host, but contain hashes that are considered to be weak.\nSubject             : CN=Cloudbase-Init WinRM\nSignature Algorithm : SHA-1 With RSA Encryption\nValid From          : Sep 08 07:43:33 2020 GMT\nValid To            : Sep 07 07:43:33 2030 GMT\nRaw PEM certificate :\n-----BEGIN CERTIFICATE-----\nMIICxjCCAa6gAwIBAgIQaTn6T4uTgrhL4UX1xNwY6TANBgkqhkiG9w0BAQUFADAfMR0wGwYDVQQDExRDbG91ZGJhc2UtSW5pdCBXaW5STTAeFw0yMDA5MDgwNzQzMzNaFw0zMDA5MDcwNzQzMzNaMB8xHTAbBgNVBAMTFENsb3VkYmFzZS1Jbml0IFdpblJNMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvULtdLsobzpRry4CJjTq5XAUBrKwVstB/b3RfFXYxlmY9Li8hd+GLrtbVTyu6W7L41YrzZgGbKhe8awUY8qTQJqc5MHy/kb/Hm4edOlufzcZTB4R9/fEhdYWM5cs0rfzAAKYVaT7P3Ca1mwknJ99edu0/xI+GQxsEI8yekytEGZbo/sfl82g+qDHnJCLLWyGW977nQ6gScZ2PluobBMt2fAehb5afssVoH4MMNIaaWqXVoIg+mxUq/DL3/EQieGAhpSvZuysjx4Us1xWxkPSLuSldX7nT4VhfSrN0otj5ORPHPur+7ypW6pdzAVSAKbzuNEVtqGjd+tNAqc+I/QmbQIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQBeG12omrbftm9A1qezQDtVaTtOXOUKhn2PKBaQHkgdZLhJJIlITTaumojLZu/rjiA0WWd5f6GW9yxjnOCOIn/iQk63u6BTk4uOO+e8OBXUgol4FkAAL8BjBEHSpZcrF0+7uePXvmMxgS/TdVUJ5AkVGddgnYdL95etKlfmBl5kry1C0QQ43fddykPoXUhH4HHkRliiomiinxcCud6EKSu7RA7ccwedcqNbbvgox9S2yMMyeYK1DVq7V13LOTek7HvJRYMs9ctaZcpbvwuix/r8PrhnLXovBeesqVP90LZEgCqkhOU5Qg99UVc/7cohLLVrRnQWP2ImxyAx4w+ypSyb\n-----END CERTIFICATE-----"
        },
        {
            "file_no": 0,
            "ip": "10.27.37.8",
            "system": "Check Point GAiA",
            "os": "other",
            "pluginid": "42263",
            "pluginname": "Unencrypted Telnet Server",
            "hostname": "",
            "port": "23",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host is running a Telnet server over an unencrypted channel.\n\nUsing Telnet over an unencrypted channel is not recommended as logins, passwords, and commands are transferred in cleartext. This allows a remote, man-in-the-middle attacker to eavesdrop on a Telnet session to obtain credentials or other sensitive information and to modify traffic exchanged between a client and server.\n\nSSH is preferred over Telnet since it protects credentials from eavesdropping and can tunnel additional data streams such as an X11 session.",
            "solution": "Disable the Telnet service and use SSH instead.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "5.8",
            "see_also": "",
            "plugin_output": "Nessus collected the following banner from the remote Telnet server :\n------------------------------ snip ------------------------------\nacsi-sl-296 login:\n------------------------------ snip ------------------------------"
        },
        {
            "file_no": 0,
            "ip": "10.27.37.8",
            "system": "Check Point GAiA",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.37.7",
            "system": "Check Point GAiA",
            "os": "other",
            "pluginid": "42263",
            "pluginname": "Unencrypted Telnet Server",
            "hostname": "",
            "port": "23",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host is running a Telnet server over an unencrypted channel.\n\nUsing Telnet over an unencrypted channel is not recommended as logins, passwords, and commands are transferred in cleartext. This allows a remote, man-in-the-middle attacker to eavesdrop on a Telnet session to obtain credentials or other sensitive information and to modify traffic exchanged between a client and server.\n\nSSH is preferred over Telnet since it protects credentials from eavesdropping and can tunnel additional data streams such as an X11 session.",
            "solution": "Disable the Telnet service and use SSH instead.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "5.8",
            "see_also": "",
            "plugin_output": "Nessus collected the following banner from the remote Telnet server :\n------------------------------ snip ------------------------------\nacsi-sl-295 login:\n------------------------------ snip ------------------------------"
        },
        {
            "file_no": 0,
            "ip": "10.27.37.7",
            "system": "Check Point GAiA",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.37.3",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "8083",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.37.3",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "8083",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.37.3",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8083",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : O=Imperva/CN=VM150"
        },
        {
            "file_no": 0,
            "ip": "10.27.37.3",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8083",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : O=Imperva/CN=VM150\n|-Issuer  : O=Imperva/CN=VM150"
        },
        {
            "file_no": 0,
            "ip": "10.27.37.3",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.37.2",
            "system": "",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "10003",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.37.2",
            "system": "",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "10003",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.37.2",
            "system": "",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "10003",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.37.2",
            "system": "",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "10003",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=AN/ST=Some-State/O=Secure Connector"
        },
        {
            "file_no": 0,
            "ip": "10.27.37.2",
            "system": "",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=us/O=counteract/OU=counteract/CN=counteract_web_server"
        },
        {
            "file_no": 0,
            "ip": "10.27.37.2",
            "system": "",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "10005",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=AN/ST=Some-State/O=Secure Connector/CN=ACSI LINUX ENDPOINT"
        },
        {
            "file_no": 0,
            "ip": "10.27.37.2",
            "system": "",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "10006",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=AN/ST=Some-State/O=Secure Connector/CN=ACSI LINUX ENDPOINT"
        },
        {
            "file_no": 0,
            "ip": "10.27.37.2",
            "system": "",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "10003",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=AN/ST=Some-State/O=Secure Connector\n|-Issuer  : C=AN/ST=Some-State/O=Secure Connector"
        },
        {
            "file_no": 0,
            "ip": "10.27.37.2",
            "system": "",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=us/O=counteract/OU=counteract/CN=counteract_web_server\n|-Issuer  : C=us/O=counteract/OU=counteract/CN=counteract_web_server"
        },
        {
            "file_no": 0,
            "ip": "10.27.37.2",
            "system": "",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "10005",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=AN/ST=Some-State/O=Secure Connector/CN=ACSI LINUX ENDPOINT\n|-Issuer  : C=AN/ST=Some-State/O=Secure Connector/CN=ACSI LINUX ENDPOINT"
        },
        {
            "file_no": 0,
            "ip": "10.27.37.2",
            "system": "",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "10006",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=AN/ST=Some-State/O=Secure Connector/CN=ACSI LINUX ENDPOINT\n|-Issuer  : C=AN/ST=Some-State/O=Secure Connector/CN=ACSI LINUX ENDPOINT"
        },
        {
            "file_no": 0,
            "ip": "10.27.37.2",
            "system": "",
            "os": "other",
            "pluginid": "35291",
            "pluginname": "SSL Certificate Signed Using Weak Hashing Algorithm",
            "hostname": "",
            "port": "10003",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote service uses an SSL certificate chain that has been signed using a cryptographically weak hashing algorithm (e.g. MD2, MD4, MD5, or SHA1). These signature algorithms are known to be vulnerable to collision attacks. An attacker can exploit this to generate another certificate with the same digital signature, allowing an attacker to masquerade as the affected service.\n\nNote that this plugin reports all SSL certificate chains signed with SHA-1 that expire after January 1, 2017 as vulnerable. This is in accordance with Google's gradual sunsetting of the SHA-1 cryptographic hash algorithm.\n\nNote that certificates in the chain that are contained in the Nessus CA database (known_CA.inc) have been ignored.",
            "solution": "Contact the Certificate Authority to have the SSL certificate reissued.",
            "cve": "CVE-2004-2761",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://tools.ietf.org/html/rfc3279\nhttp://www.nessus.org/u?9bb87bf2\nhttp://www.nessus.org/u?e120eea1\nhttp://www.nessus.org/u?5d894816\nhttp://www.nessus.org/u?51db68aa\nhttp://www.nessus.org/u?9dc7bfba",
            "plugin_output": "The following certificates were part of the certificate chain sent by\nthe remote host, but contain hashes that are considered to be weak.\nSubject             : C=AN/ST=Some-State/O=Secure Connector\nSignature Algorithm : SHA-1 With RSA Encryption\nValid From          : Jan 10 14:31:13 2023 GMT\nValid To            : Jan 05 14:31:13 2043 GMT\nRaw PEM certificate :\n-----BEGIN CERTIFICATE-----\nMIIDTTCCAjWgAwIBAgIJAMUAbZsTsDKPMA0GCSqGSIb3DQEBBQUAMD0xCzAJBgNVBAYTAkFOMRMwEQYDVQQIDApTb21lLVN0YXRlMRkwFwYDVQQKDBBTZWN1cmUgQ29ubmVjdG9yMB4XDTIzMDExMDE0MzExM1oXDTQzMDEwNTE0MzExM1owPTELMAkGA1UEBhMCQU4xEzARBgNVBAgMClNvbWUtU3RhdGUxGTAXBgNVBAoMEFNlY3VyZSBDb25uZWN0b3IwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDW+EcRmSMdtb0JbVHtqR7583DHhwu9nA917EKlbKMGl6UFebnFYE7A0MVA+d2EXCR/mRh4YMNxahAZNP91z8EbBcVbDGPPa96RwmSxg9XQJaJlRcxjoWPC/M1GDn1koxA5TBSQvsqF30dwYUbZQtOWkepr+VfWsgH2gK3YeePwjdVVTakfpULltj3T9ZcvXva9fos3j0ifu1armOrx5gBEVJjpBOgZCePBu4DsK4512rhyhfx6/r0GCWmbydBmUmWyMi0zNjH++r3e0zzsnFKPQ9rjXxxv/LH0iYDwck8PiI5npEPTjpQsofUbJJrlgR2uiTPV/vOp8s4vhDR282uVAgMBAAGjUDBOMB0GA1UdDgQWBBSAqoSOhqO2D6yjw9fH4RK5ouqk5TAfBgNVHSMEGDAWgBSAqoSOhqO2D6yjw9fH4RK5ouqk5TAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUAA4IBAQDBxAq0kvxKqlzLQ6JgvZkngiwVPxHqb5lgSfWZeUaEaybDVdyaOxRQgLbOOyj/EQATN4QIeYeAH4jWaTG4Y3W+o4kg/aJYrdR6+4Gyzgq9lFK7mDvUh46jcEpvSnBY9tIbVCF5VQGOWwcV58mL3Xc4cJwFtVXDxbJstYiaorVLDy8nYUmFlhYpplnsCVUrA/Kr6mHs76jxFR9wyrVJaZo/DFa2nOzhi61TnnGtZLWWjVHPcEO0mtvdYr8JdFJpcCFWp6WP4YODjlfgemHInWAgL3nhC18NtSoCMyd56zmTSRKEeZ+nCQB+4OOLnLilFQgf3ycOi5XkXIQ4gww8boOZ\n-----END CERTIFICATE-----"
        },
        {
            "file_no": 0,
            "ip": "10.27.37.2",
            "system": "",
            "os": "other",
            "pluginid": "76474",
            "pluginname": "SNMP 'GETBULK' Reflection DDoS",
            "hostname": "",
            "port": "161",
            "protocol": "udp",
            "severity": "2",
            "description": "The remote SNMP daemon is responding with a large amount of data to a 'GETBULK' request with a larger than normal value for 'max-repetitions'. A remote attacker can use this SNMP server to conduct a reflected distributed denial of service attack on an arbitrary remote host.",
            "solution": "Disable the SNMP service on the remote host if you do not use it.\nOtherwise, restrict and monitor access to this service, and consider changing the default 'public' community string.",
            "cve": "CVE-2008-4309",
            "cvss3": "",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?8b551b5c",
            "plugin_output": "Nessus was able to determine the SNMP service can be abused in an SNMP\nReflection DDoS attack :\nRequest size  (bytes) : 42\nResponse size (bytes) : 2455"
        },
        {
            "file_no": 0,
            "ip": "10.27.37.2",
            "system": "",
            "os": "other",
            "pluginid": "41028",
            "pluginname": "SNMP Agent Default Community Name (public)",
            "hostname": "",
            "port": "161",
            "protocol": "udp",
            "severity": "3",
            "description": "It is possible to obtain the default community name of the remote SNMP server.\n\nAn attacker may use this information to gain more knowledge about the remote host, or to change the configuration of the remote system (if the default community allows such modifications).",
            "solution": "Disable the SNMP service on the remote host if you do not use it.\nEither filter incoming UDP packets going to this port, or change the default community string.",
            "cve": "CVE-1999-0517",
            "cvss3": "",
            "cvss2": "7.5",
            "see_also": "",
            "plugin_output": "The remote SNMP server replies to the following default community\nstring :\npublic"
        },
        {
            "file_no": 0,
            "ip": "10.27.37.1",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.37.1",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "80",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.37.1",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com\n|-Issuer  : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.37.1",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "80",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com\n|-Issuer  : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.36.22",
            "system": "VMware ESXi 7.0.3 build-23307199",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "9080",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=CA/DC=vsphere/DC=local/C=US/ST=California/O=acsi-sv-008.acercsi.com/OU=VMware Engineering"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.22",
            "system": "VMware ESXi 7.0.3 build-23307199",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "9080",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=CA/DC=vsphere/DC=local/C=US/ST=California/O=acsi-sv-008.acercsi.com/OU=VMware Engineering\n|-Issuer  : CN=CA/DC=vsphere/DC=local/C=US/ST=California/O=acsi-sv-008.acercsi.com/OU=VMware Engineering"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.22",
            "system": "VMware ESXi 7.0.3 build-23307199",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=California/L=Palo Alto/O=VMware/OU=VMware Engineering/CN=10.27.36.22/E=vmca@vmware.com\n|-Issuer  : CN=CA/DC=vsphere/DC=local/C=US/ST=California/O=acsi-sv-008.acercsi.com/OU=VMware Engineering"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.22",
            "system": "VMware ESXi 7.0.3 build-23307199",
            "os": "other",
            "pluginid": "201125",
            "pluginname": "VMware ESXi 7.0 / 8.0 Out-of-Bounds read (CVE-2024-37086)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of VMware ESXi installed on the remote host is prior to 7.0 Update 3q or 8.0 prior to 8.0 Update 3. It is, therefore, affected by an out-of-bounds read vulnerability as referenced in the VMSA-2024-0013 advisory:\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to VMware ESXi 7.0 Update 3p, 8.0 Update 1d, or 8.0 Update 2b or later.",
            "cve": "CVE-2024-37086",
            "cvss3": "6.8",
            "cvss2": "5.6",
            "see_also": "http://www.nessus.org/u?04fbf245",
            "plugin_output": "ESXi version    : VMware ESXi 7.0.3 build-23307199\nInstalled build : 23307199\nFixed build     : 7.0U3q 23794019"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.21",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.36.21",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.21",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.21",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.36.21/\nInstalled version : iDRAC9 with firmware 6.10.30.00.29\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.18",
            "system": "NVIDIA Mellanox",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "3128",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=10.27.36.18/C=US\n|-Issuer  : CN=CA/DC=vsphere/DC=local/C=US/ST=California/O=acsi-sv-008.acercsi.com/OU=VMware Engineering"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.18",
            "system": "NVIDIA Mellanox",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=10.27.36.18/C=US\n|-Issuer  : CN=CA/DC=vsphere/DC=local/C=US/ST=California/O=acsi-sv-008.acercsi.com/OU=VMware Engineering"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.18",
            "system": "NVIDIA Mellanox",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "1514",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=10.27.36.18/C=US\n|-Issuer  : CN=CA/DC=vsphere/DC=local/C=US/ST=California/O=acsi-sv-008.acercsi.com/OU=VMware Engineering"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.18",
            "system": "NVIDIA Mellanox",
            "os": "other",
            "pluginid": "207464",
            "pluginname": "VMware vCenter Server 7.x < 7.0 U3t / 8.x < 8.0.3 U3d Multiple Vulnerabilities (VMSA-2024-0019)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "4",
            "description": "The version of VMware vCenter Server installed on the remote host is 7.x prior to 7.0 U3t or 8.x prior to 8.0 U3d. It is, therefore, affected by multiple vulnerabilities as referenced in the VMSA-2024-0019 advisory:\n\n  - The vCenter Server contains a heap-overflow vulnerability in the implementation of the DCERPC protocol. A     malicious actor with network access to vCenter Server may trigger this vulnerability by sending a     specially crafted network packet potentially leading to remote code execution. (CVE-2024-38812)\n\n  - The vCenter Server contains a privilege escalation vulnerability. A malicious actor with network access to     vCenter Server may trigger this vulnerability to escalate privileges to root by sending a specially     crafted network packet. (CVE-2024-38813)\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to VMware vCenter Server 7.0 U3t, 8.0 U3d or later.",
            "cve": "CVE-2024-38812",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "http://www.nessus.org/u?2748da59",
            "plugin_output": "Installed version : 7.0 Build 24201990\nFixed version     : 7.0 Build 24322018 (U3t)"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.17",
            "system": "VMware ESXi 7.0.3 build-23307199",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8182",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=CA/DC=vsphere/DC=local/C=US/ST=California/O=acsi-sv-008.acercsi.com/OU=VMware Engineering"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.17",
            "system": "VMware ESXi 7.0.3 build-23307199",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8182",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=CA/DC=vsphere/DC=local/C=US/ST=California/O=acsi-sv-008.acercsi.com/OU=VMware Engineering\n|-Issuer  : CN=CA/DC=vsphere/DC=local/C=US/ST=California/O=acsi-sv-008.acercsi.com/OU=VMware Engineering"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.17",
            "system": "VMware ESXi 7.0.3 build-23307199",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=California/L=Palo Alto/O=VMware/OU=VMware Engineering/CN=10.27.36.17/E=vmca@vmware.com\n|-Issuer  : CN=CA/DC=vsphere/DC=local/C=US/ST=California/O=acsi-sv-008.acercsi.com/OU=VMware Engineering"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.17",
            "system": "VMware ESXi 7.0.3 build-23307199",
            "os": "other",
            "pluginid": "201125",
            "pluginname": "VMware ESXi 7.0 / 8.0 Out-of-Bounds read (CVE-2024-37086)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of VMware ESXi installed on the remote host is prior to 7.0 Update 3q or 8.0 prior to 8.0 Update 3. It is, therefore, affected by an out-of-bounds read vulnerability as referenced in the VMSA-2024-0013 advisory:\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to VMware ESXi 7.0 Update 3p, 8.0 Update 1d, or 8.0 Update 2b or later.",
            "cve": "CVE-2024-37086",
            "cvss3": "6.8",
            "cvss2": "5.6",
            "see_also": "http://www.nessus.org/u?04fbf245",
            "plugin_output": "ESXi version    : VMware ESXi 7.0.3 build-23307199\nInstalled build : 23307199\nFixed build     : 7.0U3q 23794019"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.15",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.36.15",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.15",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.15",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.36.15/\nInstalled version : iDRAC9 with firmware 5.00.10.10.01\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.15",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "162428",
            "pluginname": "Dell EMC iDRAC8 < 2.83.83.83 / Dell EMC iDRAC9 < 5.10.30.00 (DSA-2022-154)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is prior to 2.83.83.83/5.10.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-154 advisory.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.83.83.83 or later. Upgrade to Dell EMC iDRAC9 version 5.10.30.00 or later.",
            "cve": "CVE-2022-0778",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?a6cd5095",
            "plugin_output": "URL               : https://10.27.36.15/\nInstalled version : iDRAC9 with firmware 5.00.10.10.01\nFixed version     : iDRAC9 with firmware 5.10.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.15",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.36.15/\nInstalled version : iDRAC9 with firmware 5.00.10.10.01\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.14",
            "system": "VMware ESXi 7.0.3 build-23307199",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8182",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=CA/DC=vsphere/DC=local/C=US/ST=California/O=acsi-sv-008.acercsi.com/OU=VMware Engineering"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.14",
            "system": "VMware ESXi 7.0.3 build-23307199",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8182",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=CA/DC=vsphere/DC=local/C=US/ST=California/O=acsi-sv-008.acercsi.com/OU=VMware Engineering\n|-Issuer  : CN=CA/DC=vsphere/DC=local/C=US/ST=California/O=acsi-sv-008.acercsi.com/OU=VMware Engineering"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.14",
            "system": "VMware ESXi 7.0.3 build-23307199",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=California/L=Palo Alto/O=VMware/OU=VMware Engineering/CN=10.27.36.14/E=vmca@vmware.com\n|-Issuer  : CN=CA/DC=vsphere/DC=local/C=US/ST=California/O=acsi-sv-008.acercsi.com/OU=VMware Engineering"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.14",
            "system": "VMware ESXi 7.0.3 build-23307199",
            "os": "other",
            "pluginid": "201125",
            "pluginname": "VMware ESXi 7.0 / 8.0 Out-of-Bounds read (CVE-2024-37086)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of VMware ESXi installed on the remote host is prior to 7.0 Update 3q or 8.0 prior to 8.0 Update 3. It is, therefore, affected by an out-of-bounds read vulnerability as referenced in the VMSA-2024-0013 advisory:\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to VMware ESXi 7.0 Update 3p, 8.0 Update 1d, or 8.0 Update 2b or later.",
            "cve": "CVE-2024-37086",
            "cvss3": "6.8",
            "cvss2": "5.6",
            "see_also": "http://www.nessus.org/u?04fbf245",
            "plugin_output": "ESXi version    : VMware ESXi 7.0.3 build-23307199\nInstalled build : 23307199\nFixed build     : 7.0U3q 23794019"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.12",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.36.12",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.12",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.12",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.36.12/\nInstalled version : iDRAC9 with firmware 5.00.10.10.01\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.12",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "162428",
            "pluginname": "Dell EMC iDRAC8 < 2.83.83.83 / Dell EMC iDRAC9 < 5.10.30.00 (DSA-2022-154)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is prior to 2.83.83.83/5.10.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-154 advisory.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.83.83.83 or later. Upgrade to Dell EMC iDRAC9 version 5.10.30.00 or later.",
            "cve": "CVE-2022-0778",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?a6cd5095",
            "plugin_output": "URL               : https://10.27.36.12/\nInstalled version : iDRAC9 with firmware 5.00.10.10.01\nFixed version     : iDRAC9 with firmware 5.10.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.12",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.36.12/\nInstalled version : iDRAC9 with firmware 5.00.10.10.01\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.11",
            "system": "VMware ESXi 7.0.3 build-23307199",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "9080",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=CA/DC=vsphere/DC=local/C=US/ST=California/O=acsi-sv-008.acercsi.com/OU=VMware Engineering"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.11",
            "system": "VMware ESXi 7.0.3 build-23307199",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8182",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=CA/DC=vsphere/DC=local/C=US/ST=California/O=acsi-sv-008.acercsi.com/OU=VMware Engineering"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.11",
            "system": "VMware ESXi 7.0.3 build-23307199",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=California/L=Palo Alto/O=VMware/OU=VMware Engineering/CN=10.27.36.11/E=vmca@vmware.com\n|-Issuer  : CN=CA/DC=vsphere/DC=local/C=US/ST=California/O=acsi-sv-008.acercsi.com/OU=VMware Engineering"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.11",
            "system": "VMware ESXi 7.0.3 build-23307199",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "9080",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=CA/DC=vsphere/DC=local/C=US/ST=California/O=acsi-sv-008.acercsi.com/OU=VMware Engineering\n|-Issuer  : CN=CA/DC=vsphere/DC=local/C=US/ST=California/O=acsi-sv-008.acercsi.com/OU=VMware Engineering"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.11",
            "system": "VMware ESXi 7.0.3 build-23307199",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8182",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=CA/DC=vsphere/DC=local/C=US/ST=California/O=acsi-sv-008.acercsi.com/OU=VMware Engineering\n|-Issuer  : CN=CA/DC=vsphere/DC=local/C=US/ST=California/O=acsi-sv-008.acercsi.com/OU=VMware Engineering"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.11",
            "system": "VMware ESXi 7.0.3 build-23307199",
            "os": "other",
            "pluginid": "201125",
            "pluginname": "VMware ESXi 7.0 / 8.0 Out-of-Bounds read (CVE-2024-37086)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of VMware ESXi installed on the remote host is prior to 7.0 Update 3q or 8.0 prior to 8.0 Update 3. It is, therefore, affected by an out-of-bounds read vulnerability as referenced in the VMSA-2024-0013 advisory:\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to VMware ESXi 7.0 Update 3p, 8.0 Update 1d, or 8.0 Update 2b or later.",
            "cve": "CVE-2024-37086",
            "cvss3": "6.8",
            "cvss2": "5.6",
            "see_also": "http://www.nessus.org/u?04fbf245",
            "plugin_output": "ESXi version    : VMware ESXi 7.0.3 build-23307199\nInstalled build : 23307199\nFixed build     : 7.0U3q 23794019"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.9",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.36.9",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.9",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.9",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.36.9/\nInstalled version : iDRAC9 with firmware 5.00.10.10.01\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.9",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "162428",
            "pluginname": "Dell EMC iDRAC8 < 2.83.83.83 / Dell EMC iDRAC9 < 5.10.30.00 (DSA-2022-154)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is prior to 2.83.83.83/5.10.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-154 advisory.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.83.83.83 or later. Upgrade to Dell EMC iDRAC9 version 5.10.30.00 or later.",
            "cve": "CVE-2022-0778",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?a6cd5095",
            "plugin_output": "URL               : https://10.27.36.9/\nInstalled version : iDRAC9 with firmware 5.00.10.10.01\nFixed version     : iDRAC9 with firmware 5.10.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.9",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.36.9/\nInstalled version : iDRAC9 with firmware 5.00.10.10.01\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.8",
            "system": "HPE MSA 2052 SAN Controller",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=CO/O=DELL-EMC/OU=ME4/CN=DellEMCF235E3B"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.8",
            "system": "HPE MSA 2052 SAN Controller",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=CO/O=DELL-EMC/OU=ME4/CN=DellEMCF235E3B\n|-Issuer  : C=US/ST=CO/O=DELL-EMC/OU=ME4/CN=DellEMCF235E3B"
        },
        {
            "file_no": 0,
            "ip": "10.27.36.8",
            "system": "HPE MSA 2052 SAN Controller",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -28799 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.36.4",
            "system": "HPE MSA 2052 SAN Controller",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -28800 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.36.3",
            "system": "EthernetBoard OkiLAN 8100e",
            "os": "other",
            "pluginid": "51368",
            "pluginname": "iSCSI Unauthenticated Target Detection",
            "hostname": "",
            "port": "3260",
            "protocol": "tcp",
            "severity": "3",
            "description": "One or more of the iSCSI (Internet Small Computer Systems Interface) targets on the remote host are configured not to use an authentication mechanism, potentially allowing unauthorized access to the targets.",
            "solution": "Configure authentication on the target to restrict access to authorized initiators.",
            "cve": "",
            "cvss3": "",
            "cvss2": "7.5",
            "see_also": "http://www.faqs.org/rfcs/rfc3720.html\nhttps://en.wikipedia.org/wiki/ISCSI",
            "plugin_output": "The following iSCSI targets allow unauthenticated access :\n-iqn.1988-11.com.dell:01.array.bc305bf235e3"
        },
        {
            "file_no": 0,
            "ip": "10.27.35.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.35.19",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.35.18",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "175115",
            "pluginname": "Apache CouchDB < 3.2.3 / 3.3.x < 3.3.2 Information Disclosure",
            "hostname": "",
            "port": "5984",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its banner, the version of CouchDB running on the remote host is prior to 3.2.3 or 3.3.x prior to 3.3,2.\nIt is, therefore, affected by an information disclosure vulnerability. Design documents with matching document IDs, from databases on the same cluster, may share a mutable Javascript environment when using specific design document functions.\n\nNote that Nessus did not actually test for these flaws but instead, has relied on the version in CouchDB's banner.",
            "solution": "Upgrade to CouchDB 3.2.3, 3.3.2 or later.",
            "cve": "CVE-2023-26268",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "https://docs.couchdb.org/en/latest/cve/2023-26268.html",
            "plugin_output": "URL               : http://10.27.35.18:5984/\nInstalled version : 3.1.0\nFixed version     : 3.2.3"
        },
        {
            "file_no": 0,
            "ip": "10.27.35.18",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "182208",
            "pluginname": "Apache CouchDB < 3.1.2 Privilege Escalation",
            "hostname": "",
            "port": "5984",
            "protocol": "tcp",
            "severity": "3",
            "description": "According to its banner, the version of CouchDB running on the remote host is prior 3.1,2. It is, therefore, affected by a privilege escalation vulnerability. A malicious user with permission to create documents in a database is able to attach a HTML attachment to a document. If a CouchDB admin opens that attachment in a browser, e.g. via the CouchDB admin interface Fauxton, any JavaScript code embedded in that HTML attachment will be executed within the security context of that admin. A similar route is available with the already deprecated _show and _list functionality. This privilege escalation vulnerability allows an attacker to add or remove data in any database or make configuration changes. \n\nNote that Nessus did not actually test for these flaws but instead, has relied on the version in CouchDB's banner.",
            "solution": "Upgrade to CouchDB 3.1.2 and apply the recommended settings, or upgrade to 3.2.0 or later.",
            "cve": "CVE-2021-38295",
            "cvss3": "7.3",
            "cvss2": "6.0",
            "see_also": "https://docs.couchdb.org/en/stable/cve/2021-38295.html",
            "plugin_output": "URL               : http://10.27.35.18:5984/\nInstalled version : 3.1.0\nFixed version     : See vendor advisory"
        },
        {
            "file_no": 0,
            "ip": "10.27.35.18",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "186916",
            "pluginname": "Apache CouchDB < 3.3.3 Privilege Escalation",
            "hostname": "",
            "port": "5984",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its banner, the version of CouchDB running on the remote host is prior to 3.3.3. It is, therefore, affected by a privilege escalation vulnerability:\n\n  - Design document functions which receive a user http request object may expose authorization or session cookie     headers of the user who accesses the document. (CVE-2023-45725)\n\nNote that Nessus did not actually test for these flaws but instead, has relied on the version in CouchDB's banner.",
            "solution": "Upgrade to CouchDB 3.3.3 or later.",
            "cve": "CVE-2023-45725",
            "cvss3": "5.7",
            "cvss2": "6.8",
            "see_also": "https://docs.couchdb.org/en/stable/cve/2023-45725.html",
            "plugin_output": "URL               : http://10.27.35.18:5984/\nInstalled version : 3.1.0\nFixed version     : 3.3.3"
        },
        {
            "file_no": 0,
            "ip": "10.27.35.18",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.35.17",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=Acer eDC/OU=SAFE3.0/E=johnny.liao@acer.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.35.17",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8000",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=Acer eDC/OU=SAFE3.0/E=johnny.liao@acer.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.35.17",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=Acer eDC/OU=SAFE3.0/E=johnny.liao@acer.com\n|-Issuer  : C=TW/ST=Taiwan/L=Taipei/O=Acer eDC/OU=SAFE3.0/E=johnny.liao@acer.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.35.17",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8000",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=Acer eDC/OU=SAFE3.0/E=johnny.liao@acer.com\n|-Issuer  : C=TW/ST=Taiwan/L=Taipei/O=Acer eDC/OU=SAFE3.0/E=johnny.liao@acer.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.35.17",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 1053 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.35.15",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "87733",
            "pluginname": "AMQP Cleartext Authentication",
            "hostname": "",
            "port": "5672",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote Advanced Message Queuing Protocol (AMQP) service supports one or more authentication mechanisms that allow credentials to be sent in the clear.",
            "solution": "Disable cleartext authentication mechanisms in the AMQP configuration.",
            "cve": "",
            "cvss3": "",
            "cvss2": "4.3",
            "see_also": "",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.35.15",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.35.14",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Taiwan/L=Taipei City/O=aceredc/OU=K2E630/CN=10.27.35.14"
        },
        {
            "file_no": 0,
            "ip": "10.27.35.14",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taiwan/L=Taipei City/O=aceredc/OU=K2E630/CN=10.27.35.14\n|-Issuer  : C=TW/ST=Taiwan/L=Taipei City/O=aceredc/OU=K2E630/CN=10.27.35.14"
        },
        {
            "file_no": 0,
            "ip": "10.27.35.14",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 264 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.35.13",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.35.12",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.35.11",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.35.10",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.35.9",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.35.8",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.35.7",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.35.5",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.35.4",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.35.2",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.35.1",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.34.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.34.1",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.34.1",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.34.1",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.34.1",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.34.1",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.34.1",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.34.1",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "58453",
            "pluginname": "Terminal Services Doesn't Use Network Level Authentication (NLA) Only",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote Terminal Services is not configured to use Network Level Authentication (NLA) only. NLA uses the Credential Security Support Provider (CredSSP) protocol to perform strong server authentication either through TLS/SSL or Kerberos mechanisms, which protect against man-in-the-middle attacks. In addition to improving authentication, NLA also helps protect the remote computer from malicious users and software by completing user authentication before a full RDP connection is established.",
            "solution": "Enable Network Level Authentication (NLA) on the remote RDP server. This is generally done on the 'Remote' tab of the 'System' settings on Windows.",
            "cve": "",
            "cvss3": "4.0",
            "cvss2": "4.3",
            "see_also": "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc732713(v=ws.11)\nhttp://www.nessus.org/u?e2628096",
            "plugin_output": "Nessus was able to negotiate non-NLA (Network Level Authentication) security."
        },
        {
            "file_no": 0,
            "ip": "10.27.34.1",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=acsi-sw-090.acercsi.local"
        },
        {
            "file_no": 0,
            "ip": "10.27.34.1",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=Cloudbase-Init WinRM"
        },
        {
            "file_no": 0,
            "ip": "10.27.34.1",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=acsi-sw-090.acercsi.local\n|-Issuer  : CN=acsi-sw-090.acercsi.local"
        },
        {
            "file_no": 0,
            "ip": "10.27.34.1",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=Cloudbase-Init WinRM\n|-Issuer  : CN=Cloudbase-Init WinRM"
        },
        {
            "file_no": 0,
            "ip": "10.27.34.1",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "35291",
            "pluginname": "SSL Certificate Signed Using Weak Hashing Algorithm",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote service uses an SSL certificate chain that has been signed using a cryptographically weak hashing algorithm (e.g. MD2, MD4, MD5, or SHA1). These signature algorithms are known to be vulnerable to collision attacks. An attacker can exploit this to generate another certificate with the same digital signature, allowing an attacker to masquerade as the affected service.\n\nNote that this plugin reports all SSL certificate chains signed with SHA-1 that expire after January 1, 2017 as vulnerable. This is in accordance with Google's gradual sunsetting of the SHA-1 cryptographic hash algorithm.\n\nNote that certificates in the chain that are contained in the Nessus CA database (known_CA.inc) have been ignored.",
            "solution": "Contact the Certificate Authority to have the SSL certificate reissued.",
            "cve": "CVE-2004-2761",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://tools.ietf.org/html/rfc3279\nhttp://www.nessus.org/u?9bb87bf2\nhttp://www.nessus.org/u?e120eea1\nhttp://www.nessus.org/u?5d894816\nhttp://www.nessus.org/u?51db68aa\nhttp://www.nessus.org/u?9dc7bfba",
            "plugin_output": "The following certificates were part of the certificate chain sent by\nthe remote host, but contain hashes that are considered to be weak.\nSubject             : CN=Cloudbase-Init WinRM\nSignature Algorithm : SHA-1 With RSA Encryption\nValid From          : Sep 08 07:43:33 2020 GMT\nValid To            : Sep 07 07:43:33 2030 GMT\nRaw PEM certificate :\n-----BEGIN CERTIFICATE-----\nMIICxjCCAa6gAwIBAgIQaTn6T4uTgrhL4UX1xNwY6TANBgkqhkiG9w0BAQUFADAfMR0wGwYDVQQDExRDbG91ZGJhc2UtSW5pdCBXaW5STTAeFw0yMDA5MDgwNzQzMzNaFw0zMDA5MDcwNzQzMzNaMB8xHTAbBgNVBAMTFENsb3VkYmFzZS1Jbml0IFdpblJNMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvULtdLsobzpRry4CJjTq5XAUBrKwVstB/b3RfFXYxlmY9Li8hd+GLrtbVTyu6W7L41YrzZgGbKhe8awUY8qTQJqc5MHy/kb/Hm4edOlufzcZTB4R9/fEhdYWM5cs0rfzAAKYVaT7P3Ca1mwknJ99edu0/xI+GQxsEI8yekytEGZbo/sfl82g+qDHnJCLLWyGW977nQ6gScZ2PluobBMt2fAehb5afssVoH4MMNIaaWqXVoIg+mxUq/DL3/EQieGAhpSvZuysjx4Us1xWxkPSLuSldX7nT4VhfSrN0otj5ORPHPur+7ypW6pdzAVSAKbzuNEVtqGjd+tNAqc+I/QmbQIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQBeG12omrbftm9A1qezQDtVaTtOXOUKhn2PKBaQHkgdZLhJJIlITTaumojLZu/rjiA0WWd5f6GW9yxjnOCOIn/iQk63u6BTk4uOO+e8OBXUgol4FkAAL8BjBEHSpZcrF0+7uePXvmMxgS/TdVUJ5AkVGddgnYdL95etKlfmBl5kry1C0QQ43fddykPoXUhH4HHkRliiomiinxcCud6EKSu7RA7ccwedcqNbbvgox9S2yMMyeYK1DVq7V13LOTek7HvJRYMs9ctaZcpbvwuix/r8PrhnLXovBeesqVP90LZEgCqkhOU5Qg99UVc/7cohLLVrRnQWP2ImxyAx4w+ypSyb\n-----END CERTIFICATE-----"
        },
        {
            "file_no": 0,
            "ip": "10.27.34.1",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The ICMP timestamps seem to be in little endian format (not in network format)\nThe difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.33.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.32.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.32.3",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "201848",
            "pluginname": "Apache Tomcat 9.0.0.M1 < 9.0.90",
            "hostname": "",
            "port": "8082",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Tomcat installed on the remote host is prior to 9.0.90. It is, therefore, affected by a vulnerability as referenced in the fixed_in_apache_tomcat_9.0.90_security-9 advisory.\n\n  - Improper Handling of Exceptional Conditions, Uncontrolled Resource Consumption vulnerability in Apache     Tomcat. When processing an HTTP/2 stream, Tomcat did not handle some cases of excessive HTTP headers     correctly. This led to a miscounting of active HTTP/2 streams which in turn led to the use of an incorrect     infinite timeout which allowed connections to remain open which should have been closed. This issue     affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M20, from 10.1.0-M1 through 10.1.24, from 9.0.0-M1     through 9.0.89. Users are recommended to upgrade to version 11.0.0-M21, 10.1.25 or 9.0.90, which fixes the     issue. (CVE-2024-34750)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Apache Tomcat version 9.0.90 or later.",
            "cve": "CVE-2024-34750",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?c0d803ed\nhttp://www.nessus.org/u?9c97b7d7",
            "plugin_output": "URL               : http://10.27.32.3:8082/\nInstalled version : 9.0.86\nFixed version     : 9.0.90"
        },
        {
            "file_no": 0,
            "ip": "10.27.32.3",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "12085",
            "pluginname": "Apache Tomcat Default Files",
            "hostname": "",
            "port": "8082",
            "protocol": "tcp",
            "severity": "2",
            "description": "The default error page, default index page, example JSPs and/or example servlets are installed on the remote Apache Tomcat server. These files should be removed as they may help an attacker uncover information about the remote Tomcat install or host itself.",
            "solution": "Delete the default index page and remove the example JSP and servlets. Follow the Tomcat or OWASP instructions to replace or modify the default error page.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?4cb3b4dd\nhttps://www.owasp.org/index.php/Securing_tomcat",
            "plugin_output": "The server is not configured to return a custom page in the event of a client requesting a non-existent resource.\nThis may result in a potential disclosure of sensitive information about the server to attackers."
        },
        {
            "file_no": 0,
            "ip": "10.27.32.3",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.32.2",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "11714",
            "pluginname": "Nonexistent Page (404) Physical Path Disclosure",
            "hostname": "",
            "port": "8080",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote web server reveals the physical path of the webroot when a nonexistent page is requested.\n\nWhile printing errors to the output is useful for debugging applications, this feature should be disabled on production servers.",
            "solution": "Upgrade the web server to the latest version. Alternatively, reconfigure the web server to disable debug reporting.",
            "cve": "CVE-2001-1372",
            "cvss3": "",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?a3e58d0b\nhttp://www.nessus.org/u?9c4d1560\nhttp://www.nessus.org/u?67b9e782",
            "plugin_output": "URL                 : http://10.27.32.2:8080/niet1561777910\nPath disclosed      : /var/www/ozcloud/InspireOzCloud_Web/InspireOzCloud_Web/wsgi.py/\nResponse snippet    :\n------------------------------ snip ------------------------------\n<tr>\n<td>PATH_TRANSLATED</td>\n<td class=\"code\"><pre>&#x27;/var/www/ozcloud/InspireOzCloud_Web/InspireOzCloud_Web/wsgi.py/niet1561777910&#x27;</pre></td>\n</tr>\n------------------------------ snip ------------------------------"
        },
        {
            "file_no": 0,
            "ip": "10.27.32.2",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -15 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.32.1",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -4 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.31.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.30.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.30.102",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.30.102",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.30.102",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.30.102",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "161800",
            "pluginname": "Dell EMC iDRAC9 < 5.00.00.00 (DSA-2021-177)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 5.00.00.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2021-177 advisory:\n\n  - iDRAC9 versions prior to 5.00.00.00 contain an improper input validation vulnerability. An unauthenticated     remote attacker may potentially exploit this vulnerability by sending a specially crafted malicious     request to crash the webserver or cause information disclosure. (CVE-2021-36300)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 5.00.00.00 or later.",
            "cve": "CVE-2021-36300",
            "cvss3": "8.2",
            "cvss2": "6.4",
            "see_also": "http://www.nessus.org/u?13d440ac",
            "plugin_output": "URL               : https://10.27.30.102/\nInstalled version : iDRAC9 with firmware 4.40.40.00.26\nFixed version     : iDRAC9 with firmware 5.00.00.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.30.102",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.30.102/\nInstalled version : iDRAC9 with firmware 4.40.40.00.26\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.30.102",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "162428",
            "pluginname": "Dell EMC iDRAC8 < 2.83.83.83 / Dell EMC iDRAC9 < 5.10.30.00 (DSA-2022-154)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is prior to 2.83.83.83/5.10.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-154 advisory.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.83.83.83 or later. Upgrade to Dell EMC iDRAC9 version 5.10.30.00 or later.",
            "cve": "CVE-2022-0778",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?a6cd5095",
            "plugin_output": "URL               : https://10.27.30.102/\nInstalled version : iDRAC9 with firmware 4.40.40.00.26\nFixed version     : iDRAC9 with firmware 5.10.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.30.102",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.30.102/\nInstalled version : iDRAC9 with firmware 4.40.40.00.26\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.30.101",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.30.101",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.30.101",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.30.101",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.30.101",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.30.101",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.30.101",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "161800",
            "pluginname": "Dell EMC iDRAC9 < 5.00.00.00 (DSA-2021-177)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 5.00.00.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2021-177 advisory:\n\n  - iDRAC9 versions prior to 5.00.00.00 contain an improper input validation vulnerability. An unauthenticated     remote attacker may potentially exploit this vulnerability by sending a specially crafted malicious     request to crash the webserver or cause information disclosure. (CVE-2021-36300)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 5.00.00.00 or later.",
            "cve": "CVE-2021-36300",
            "cvss3": "8.2",
            "cvss2": "6.4",
            "see_also": "http://www.nessus.org/u?13d440ac",
            "plugin_output": "URL               : https://10.27.30.101/\nInstalled version : iDRAC9 with firmware 4.40.40.00.26\nFixed version     : iDRAC9 with firmware 5.00.00.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.30.101",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.30.101/\nInstalled version : iDRAC9 with firmware 4.40.40.00.26\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.30.101",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "162428",
            "pluginname": "Dell EMC iDRAC8 < 2.83.83.83 / Dell EMC iDRAC9 < 5.10.30.00 (DSA-2022-154)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is prior to 2.83.83.83/5.10.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-154 advisory.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.83.83.83 or later. Upgrade to Dell EMC iDRAC9 version 5.10.30.00 or later.",
            "cve": "CVE-2022-0778",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?a6cd5095",
            "plugin_output": "URL               : https://10.27.30.101/\nInstalled version : iDRAC9 with firmware 4.40.40.00.26\nFixed version     : iDRAC9 with firmware 5.10.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.30.101",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.30.101/\nInstalled version : iDRAC9 with firmware 4.40.40.00.26\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.29.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.29.102",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.29.102",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.29.102",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.29.102",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.29.102",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.29.102",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.29.102",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "161800",
            "pluginname": "Dell EMC iDRAC9 < 5.00.00.00 (DSA-2021-177)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 5.00.00.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2021-177 advisory:\n\n  - iDRAC9 versions prior to 5.00.00.00 contain an improper input validation vulnerability. An unauthenticated     remote attacker may potentially exploit this vulnerability by sending a specially crafted malicious     request to crash the webserver or cause information disclosure. (CVE-2021-36300)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 5.00.00.00 or later.",
            "cve": "CVE-2021-36300",
            "cvss3": "8.2",
            "cvss2": "6.4",
            "see_also": "http://www.nessus.org/u?13d440ac",
            "plugin_output": "URL               : https://10.27.29.102/\nInstalled version : iDRAC9 with firmware 4.40.40.00.26\nFixed version     : iDRAC9 with firmware 5.00.00.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.29.102",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.29.102/\nInstalled version : iDRAC9 with firmware 4.40.40.00.26\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.29.102",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "162428",
            "pluginname": "Dell EMC iDRAC8 < 2.83.83.83 / Dell EMC iDRAC9 < 5.10.30.00 (DSA-2022-154)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is prior to 2.83.83.83/5.10.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-154 advisory.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.83.83.83 or later. Upgrade to Dell EMC iDRAC9 version 5.10.30.00 or later.",
            "cve": "CVE-2022-0778",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?a6cd5095",
            "plugin_output": "URL               : https://10.27.29.102/\nInstalled version : iDRAC9 with firmware 4.40.40.00.26\nFixed version     : iDRAC9 with firmware 5.10.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.29.102",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.29.102/\nInstalled version : iDRAC9 with firmware 4.40.40.00.26\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.29.101",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.29.101",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.29.101",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.29.101",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.29.101",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.29.101",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.29.101",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "161800",
            "pluginname": "Dell EMC iDRAC9 < 5.00.00.00 (DSA-2021-177)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 5.00.00.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2021-177 advisory:\n\n  - iDRAC9 versions prior to 5.00.00.00 contain an improper input validation vulnerability. An unauthenticated     remote attacker may potentially exploit this vulnerability by sending a specially crafted malicious     request to crash the webserver or cause information disclosure. (CVE-2021-36300)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 5.00.00.00 or later.",
            "cve": "CVE-2021-36300",
            "cvss3": "8.2",
            "cvss2": "6.4",
            "see_also": "http://www.nessus.org/u?13d440ac",
            "plugin_output": "URL               : https://10.27.29.101/\nInstalled version : iDRAC9 with firmware 4.40.40.00.26\nFixed version     : iDRAC9 with firmware 5.00.00.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.29.101",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.29.101/\nInstalled version : iDRAC9 with firmware 4.40.40.00.26\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.29.101",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "162428",
            "pluginname": "Dell EMC iDRAC8 < 2.83.83.83 / Dell EMC iDRAC9 < 5.10.30.00 (DSA-2022-154)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is prior to 2.83.83.83/5.10.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-154 advisory.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.83.83.83 or later. Upgrade to Dell EMC iDRAC9 version 5.10.30.00 or later.",
            "cve": "CVE-2022-0778",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?a6cd5095",
            "plugin_output": "URL               : https://10.27.29.101/\nInstalled version : iDRAC9 with firmware 4.40.40.00.26\nFixed version     : iDRAC9 with firmware 5.10.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.29.101",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.29.101/\nInstalled version : iDRAC9 with firmware 4.40.40.00.26\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.28.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.28.102",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.28.102",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.28.102",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.28.102",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.28.102",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.28.102",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.28.102",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "161800",
            "pluginname": "Dell EMC iDRAC9 < 5.00.00.00 (DSA-2021-177)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 5.00.00.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2021-177 advisory:\n\n  - iDRAC9 versions prior to 5.00.00.00 contain an improper input validation vulnerability. An unauthenticated     remote attacker may potentially exploit this vulnerability by sending a specially crafted malicious     request to crash the webserver or cause information disclosure. (CVE-2021-36300)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 5.00.00.00 or later.",
            "cve": "CVE-2021-36300",
            "cvss3": "8.2",
            "cvss2": "6.4",
            "see_also": "http://www.nessus.org/u?13d440ac",
            "plugin_output": "URL               : https://10.27.28.102/\nInstalled version : iDRAC9 with firmware 4.40.40.00.26\nFixed version     : iDRAC9 with firmware 5.00.00.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.28.102",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.28.102/\nInstalled version : iDRAC9 with firmware 4.40.40.00.26\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.28.102",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.28.102/\nInstalled version : iDRAC9 with firmware 4.40.40.00.26\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.28.102",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "162428",
            "pluginname": "Dell EMC iDRAC8 < 2.83.83.83 / Dell EMC iDRAC9 < 5.10.30.00 (DSA-2022-154)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is prior to 2.83.83.83/5.10.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-154 advisory.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.83.83.83 or later. Upgrade to Dell EMC iDRAC9 version 5.10.30.00 or later.",
            "cve": "CVE-2022-0778",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?a6cd5095",
            "plugin_output": "URL               : https://10.27.28.102/\nInstalled version : iDRAC9 with firmware 4.40.40.00.26\nFixed version     : iDRAC9 with firmware 5.10.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.28.101",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.28.101",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.28.101",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.28.101",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.28.101",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.28.101",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.28.101",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "161800",
            "pluginname": "Dell EMC iDRAC9 < 5.00.00.00 (DSA-2021-177)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 5.00.00.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2021-177 advisory:\n\n  - iDRAC9 versions prior to 5.00.00.00 contain an improper input validation vulnerability. An unauthenticated     remote attacker may potentially exploit this vulnerability by sending a specially crafted malicious     request to crash the webserver or cause information disclosure. (CVE-2021-36300)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 5.00.00.00 or later.",
            "cve": "CVE-2021-36300",
            "cvss3": "8.2",
            "cvss2": "6.4",
            "see_also": "http://www.nessus.org/u?13d440ac",
            "plugin_output": "URL               : https://10.27.28.101/\nInstalled version : iDRAC9 with firmware 4.40.40.00.26\nFixed version     : iDRAC9 with firmware 5.00.00.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.28.101",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.28.101/\nInstalled version : iDRAC9 with firmware 4.40.40.00.26\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.28.101",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "162428",
            "pluginname": "Dell EMC iDRAC8 < 2.83.83.83 / Dell EMC iDRAC9 < 5.10.30.00 (DSA-2022-154)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is prior to 2.83.83.83/5.10.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-154 advisory.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.83.83.83 or later. Upgrade to Dell EMC iDRAC9 version 5.10.30.00 or later.",
            "cve": "CVE-2022-0778",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?a6cd5095",
            "plugin_output": "URL               : https://10.27.28.101/\nInstalled version : iDRAC9 with firmware 4.40.40.00.26\nFixed version     : iDRAC9 with firmware 5.10.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.28.101",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.28.101/\nInstalled version : iDRAC9 with firmware 4.40.40.00.26\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.27.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.27.105",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.27.105",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.27.105",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.27.105",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.27.105/\nInstalled version : iDRAC9 with firmware 6.10.30.20.03\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.27.5",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=Acer eDC/OU=SAFE3.0/E=johnny.liao@acer.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.27.5",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8000",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=Acer eDC/OU=SAFE3.0/E=johnny.liao@acer.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.27.5",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "9200",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=Elasticsearch security auto-configuration HTTP CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.27.5",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=Acer eDC/OU=SAFE3.0/E=johnny.liao@acer.com\n|-Issuer  : C=TW/ST=Taiwan/L=Taipei/O=Acer eDC/OU=SAFE3.0/E=johnny.liao@acer.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.27.5",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8000",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=Acer eDC/OU=SAFE3.0/E=johnny.liao@acer.com\n|-Issuer  : C=TW/ST=Taiwan/L=Taipei/O=Acer eDC/OU=SAFE3.0/E=johnny.liao@acer.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.27.5",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "9200",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=Elasticsearch security auto-configuration HTTP CA\n|-Issuer  : CN=Elasticsearch security auto-configuration HTTP CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.27.5",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -50 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.27.4",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=Acer eDC/OU=SAFE3.0/E=johnny.liao@acer.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.27.4",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8000",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=Acer eDC/OU=SAFE3.0/E=johnny.liao@acer.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.27.4",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "9200",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=Elasticsearch security auto-configuration HTTP CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.27.4",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=Acer eDC/OU=SAFE3.0/E=johnny.liao@acer.com\n|-Issuer  : C=TW/ST=Taiwan/L=Taipei/O=Acer eDC/OU=SAFE3.0/E=johnny.liao@acer.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.27.4",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8000",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=Acer eDC/OU=SAFE3.0/E=johnny.liao@acer.com\n|-Issuer  : C=TW/ST=Taiwan/L=Taipei/O=Acer eDC/OU=SAFE3.0/E=johnny.liao@acer.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.27.4",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "9200",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=Elasticsearch security auto-configuration HTTP CA\n|-Issuer  : CN=Elasticsearch security auto-configuration HTTP CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.27.4",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -49 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.27.3",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=Acer eDC/OU=SAFE3.0/E=johnny.liao@acer.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.27.3",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8000",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=Acer eDC/OU=SAFE3.0/E=johnny.liao@acer.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.27.3",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "9200",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=Elasticsearch security auto-configuration HTTP CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.27.3",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=Acer eDC/OU=SAFE3.0/E=johnny.liao@acer.com\n|-Issuer  : C=TW/ST=Taiwan/L=Taipei/O=Acer eDC/OU=SAFE3.0/E=johnny.liao@acer.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.27.3",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8000",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=Acer eDC/OU=SAFE3.0/E=johnny.liao@acer.com\n|-Issuer  : C=TW/ST=Taiwan/L=Taipei/O=Acer eDC/OU=SAFE3.0/E=johnny.liao@acer.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.27.3",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "9200",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=Elasticsearch security auto-configuration HTTP CA\n|-Issuer  : CN=Elasticsearch security auto-configuration HTTP CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.27.3",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -49 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.27.2",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "45411",
            "pluginname": "SSL Certificate with Wrong Hostname",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The 'commonName' (CN) attribute of the SSL certificate presented for this service is for a different machine.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The identities known by Nessus are :\n10.27.27.2\n10.27.27.2\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.27.2",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "45411",
            "pluginname": "SSL Certificate with Wrong Hostname",
            "hostname": "",
            "port": "5001",
            "protocol": "tcp",
            "severity": "2",
            "description": "The 'commonName' (CN) attribute of the SSL certificate presented for this service is for a different machine.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The identities known by Nessus are :\n10.27.27.2\n10.27.27.2\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.27.2",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "45410",
            "pluginname": "SSL Certificate 'commonName' Mismatch",
            "hostname": "\nacsi-nas05-272\n",
            "port": "443",
            "protocol": "tcp",
            "severity": "0",
            "description": "The service running on the remote host presents an SSL certificate for which the 'commonName' (CN) attribute does not match the hostname on which the service listens.",
            "solution": "If the machine has several names, make sure that users connect to the service through the DNS hostname that matches the common name in the certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "",
            "plugin_output": "The host name known by Nessus is :\nacsi-nas05-272\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.27.2",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/L=Taipel/O=Synology Inc./CN=synology\n|-Issuer  : C=TW/L=Taipel/O=Synology Inc./CN=Synology Inc. CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.27.2",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5001",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/L=Taipel/O=Synology Inc./CN=synology\n|-Issuer  : C=TW/L=Taipel/O=Synology Inc./CN=Synology Inc. CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.27.2",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "45410",
            "pluginname": "SSL Certificate 'commonName' Mismatch",
            "hostname": "\nacsi-nas05-272\n",
            "port": "5001",
            "protocol": "tcp",
            "severity": "0",
            "description": "The service running on the remote host presents an SSL certificate for which the 'commonName' (CN) attribute does not match the hostname on which the service listens.",
            "solution": "If the machine has several names, make sure that users connect to the service through the DNS hostname that matches the common name in the certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "",
            "plugin_output": "The host name known by Nessus is :\nacsi-nas05-272\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.27.2",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "57608",
            "pluginname": "SMB Signing not required",
            "hostname": "",
            "port": "445",
            "protocol": "tcp",
            "severity": "2",
            "description": "Signing is not required on the remote SMB server. An unauthenticated, remote attacker can exploit this to conduct man-in-the-middle attacks against the SMB server.",
            "solution": "Enforce message signing in the host's configuration. On Windows, this is found in the policy setting 'Microsoft network server: Digitally sign communications (always)'. On Samba, the setting is called 'server signing'. See the 'see also' links for further details.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?df39b8b3\nhttp://technet.microsoft.com/en-us/library/cc731957.aspx\nhttp://www.nessus.org/u?74b80723\nhttps://www.samba.org/samba/docs/current/man-html/smb.conf.5.html\nhttp://www.nessus.org/u?a3cac4ea",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.27.2",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.27.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "45411",
            "pluginname": "SSL Certificate with Wrong Hostname",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The 'commonName' (CN) attribute of the SSL certificate presented for this service is for a different machine.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The identities known by Nessus are :\n10.27.27.1\n192.168.101.3\n10.27.27.1\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.27.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "45411",
            "pluginname": "SSL Certificate with Wrong Hostname",
            "hostname": "",
            "port": "5001",
            "protocol": "tcp",
            "severity": "2",
            "description": "The 'commonName' (CN) attribute of the SSL certificate presented for this service is for a different machine.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The identities known by Nessus are :\n10.27.27.1\n192.168.101.3\n10.27.27.1\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.27.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "45410",
            "pluginname": "SSL Certificate 'commonName' Mismatch",
            "hostname": "\nacsi-nas04-271\n",
            "port": "443",
            "protocol": "tcp",
            "severity": "0",
            "description": "The service running on the remote host presents an SSL certificate for which the 'commonName' (CN) attribute does not match the hostname on which the service listens.",
            "solution": "If the machine has several names, make sure that users connect to the service through the DNS hostname that matches the common name in the certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "",
            "plugin_output": "The host name known by Nessus is :\nacsi-nas04-271\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.27.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/L=Taipel/O=Synology Inc./CN=synology\n|-Issuer  : C=TW/L=Taipel/O=Synology Inc./CN=Synology Inc. CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.27.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5001",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/L=Taipel/O=Synology Inc./CN=synology\n|-Issuer  : C=TW/L=Taipel/O=Synology Inc./CN=Synology Inc. CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.27.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "45410",
            "pluginname": "SSL Certificate 'commonName' Mismatch",
            "hostname": "\nacsi-nas04-271\n",
            "port": "5001",
            "protocol": "tcp",
            "severity": "0",
            "description": "The service running on the remote host presents an SSL certificate for which the 'commonName' (CN) attribute does not match the hostname on which the service listens.",
            "solution": "If the machine has several names, make sure that users connect to the service through the DNS hostname that matches the common name in the certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "",
            "plugin_output": "The host name known by Nessus is :\nacsi-nas04-271\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.27.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "57608",
            "pluginname": "SMB Signing not required",
            "hostname": "",
            "port": "445",
            "protocol": "tcp",
            "severity": "2",
            "description": "Signing is not required on the remote SMB server. An unauthenticated, remote attacker can exploit this to conduct man-in-the-middle attacks against the SMB server.",
            "solution": "Enforce message signing in the host's configuration. On Windows, this is found in the policy setting 'Microsoft network server: Digitally sign communications (always)'. On Samba, the setting is called 'server signing'. See the 'see also' links for further details.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?df39b8b3\nhttp://technet.microsoft.com/en-us/library/cc731957.aspx\nhttp://www.nessus.org/u?74b80723\nhttps://www.samba.org/samba/docs/current/man-html/smb.conf.5.html\nhttp://www.nessus.org/u?a3cac4ea",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.27.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.26.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.26.18",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.26.17",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.26.16",
            "system": "CISCO IOS 15\nCISCO IOS 12\nCisco IOS XE\nCISCO PIX",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.26.15",
            "system": "CISCO IOS 15\nCISCO IOS 12\nCisco IOS XE\nCISCO PIX",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "This host returns non-standard timestamps (high bit is set)"
        },
        {
            "file_no": 0,
            "ip": "10.27.26.13",
            "system": "CISCO IOS 15\nCISCO IOS 12\nCisco IOS XE\nCISCO PIX",
            "os": "linux",
            "pluginid": "97861",
            "pluginname": "Network Time Protocol (NTP) Mode 6 Scanner",
            "hostname": "",
            "port": "123",
            "protocol": "udp",
            "severity": "2",
            "description": "The remote NTP server responds to mode 6 queries. Devices that respond to these queries have the potential to be used in NTP amplification attacks. An unauthenticated, remote attacker could potentially exploit this, via a specially crafted mode 6 query, to cause a reflected denial of service condition.",
            "solution": "Restrict NTP mode 6 queries.",
            "cve": "",
            "cvss3": "5.8",
            "cvss2": "5.0",
            "see_also": "https://ntpscan.shadowserver.org",
            "plugin_output": "Nessus elicited the following response from the remote\nhost by sending an NTP mode 6 query :\n'version=\"4\", processor=\"unknown\", system=\"UNIX\", leap=0, stratum=3,\nprecision=-21, rootdelay=, rootdisp=, refid=211.79.200.245,\nreftime=0xEB0E708E.706426B2, clock=0xEB0E792B.8C6CB185, peer=49206,\ntc=10, mintc=3, offset=, frequency=, sys_jitter=, clk_jitter=,\nclk_wander='"
        },
        {
            "file_no": 0,
            "ip": "10.27.26.13",
            "system": "CISCO IOS 15\nCISCO IOS 12\nCisco IOS XE\nCISCO PIX",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.26.12",
            "system": "CISCO Nexus Operating System (NX-OS)",
            "os": "other",
            "pluginid": "187201",
            "pluginname": "OpenSSH < 9.6 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple vulnerabilities as referenced in the release-9.6 advisory.\n\n  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by     Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of     the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the     commencement of encryption, and deleting an equal number of consecutive messages immediately after     encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While     cryptographically novel, the security impact of this attack is fortunately very limited as it only allows     deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user     user authentication from proceeding and results in a stuck connection. The most serious identified impact     is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing     the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.\n    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this     protocol weakness through a new strict KEX protocol extension that will be automatically enabled when     both the client and server support it. This extension makes two changes to the SSH transport protocol to     improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the     connection if any unnecessary or unexpected message is received during key exchange (including messages     that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability     from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of     each key exchange, preventing previously inserted messages from being able to make persistent changes to     the sequence number across completion of a key exchange. Either of these changes should be sufficient to     thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source     distribition. (CVE-2023-48795)\n\n  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the     PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular     private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)\n\n  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a     ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h     or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could     potentially perform command injection depending on what quoting was present in the user-supplied     ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository     could contain a submodule with shell characters in its user/hostname. Git does not ban shell     metacharacters in user or host names when checking out repositories from untrusted sources. Although we     believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially     across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters     from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be     effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters     potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject     to these restrictions, allowing configurations that use strange names to continue to be used, under the     assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSH version 9.6 or later.",
            "cve": "CVE-2023-48795",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.openssh.com/txt/release-9.6",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_8.3 PKIX[12.5.1]\nInstalled version : 8.3\nFixed version     : 9.6p1 / 9.6"
        },
        {
            "file_no": 0,
            "ip": "10.27.26.11",
            "system": "CISCO Nexus Operating System (NX-OS)",
            "os": "other",
            "pluginid": "187201",
            "pluginname": "OpenSSH < 9.6 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple vulnerabilities as referenced in the release-9.6 advisory.\n\n  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by     Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of     the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the     commencement of encryption, and deleting an equal number of consecutive messages immediately after     encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While     cryptographically novel, the security impact of this attack is fortunately very limited as it only allows     deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user     user authentication from proceeding and results in a stuck connection. The most serious identified impact     is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing     the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.\n    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this     protocol weakness through a new strict KEX protocol extension that will be automatically enabled when     both the client and server support it. This extension makes two changes to the SSH transport protocol to     improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the     connection if any unnecessary or unexpected message is received during key exchange (including messages     that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability     from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of     each key exchange, preventing previously inserted messages from being able to make persistent changes to     the sequence number across completion of a key exchange. Either of these changes should be sufficient to     thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source     distribition. (CVE-2023-48795)\n\n  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the     PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular     private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)\n\n  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a     ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h     or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could     potentially perform command injection depending on what quoting was present in the user-supplied     ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository     could contain a submodule with shell characters in its user/hostname. Git does not ban shell     metacharacters in user or host names when checking out repositories from untrusted sources. Although we     believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially     across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters     from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be     effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters     potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject     to these restrictions, allowing configurations that use strange names to continue to be used, under the     assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSH version 9.6 or later.",
            "cve": "CVE-2023-48795",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.openssh.com/txt/release-9.6",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_8.3 PKIX[12.5.1]\nInstalled version : 8.3\nFixed version     : 9.6p1 / 9.6"
        },
        {
            "file_no": 0,
            "ip": "10.27.26.9",
            "system": "HP Switch",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 13962 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.26.7",
            "system": "Photon OS",
            "os": "other",
            "pluginid": "42263",
            "pluginname": "Unencrypted Telnet Server",
            "hostname": "",
            "port": "23",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host is running a Telnet server over an unencrypted channel.\n\nUsing Telnet over an unencrypted channel is not recommended as logins, passwords, and commands are transferred in cleartext. This allows a remote, man-in-the-middle attacker to eavesdrop on a Telnet session to obtain credentials or other sensitive information and to modify traffic exchanged between a client and server.\n\nSSH is preferred over Telnet since it protects credentials from eavesdropping and can tunnel additional data streams such as an X11 session.",
            "solution": "Disable the Telnet service and use SSH instead.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "5.8",
            "see_also": "",
            "plugin_output": "Nessus collected the following banner from the remote Telnet server :\n------------------------------ snip ------------------------------\nLogin:\n------------------------------ snip ------------------------------"
        },
        {
            "file_no": 0,
            "ip": "10.27.26.7",
            "system": "Photon OS",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -30377 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.26.5",
            "system": "CISCO IOS 15\nCISCO IOS 12\nCisco IOS XE\nCISCO PIX",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.26.4",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.26.3",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.25.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.25.3",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "45411",
            "pluginname": "SSL Certificate with Wrong Hostname",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The 'commonName' (CN) attribute of the SSL certificate presented for this service is for a different machine.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The identities known by Nessus are :\n10.27.25.3\n192.168.8.243\n10.27.25.3\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.25.3",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "45411",
            "pluginname": "SSL Certificate with Wrong Hostname",
            "hostname": "",
            "port": "5001",
            "protocol": "tcp",
            "severity": "2",
            "description": "The 'commonName' (CN) attribute of the SSL certificate presented for this service is for a different machine.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The identities known by Nessus are :\n10.27.25.3\n192.168.8.243\n10.27.25.3\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.25.3",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "45410",
            "pluginname": "SSL Certificate 'commonName' Mismatch",
            "hostname": "\nacsi-nas-08-253\n",
            "port": "443",
            "protocol": "tcp",
            "severity": "0",
            "description": "The service running on the remote host presents an SSL certificate for which the 'commonName' (CN) attribute does not match the hostname on which the service listens.",
            "solution": "If the machine has several names, make sure that users connect to the service through the DNS hostname that matches the common name in the certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "",
            "plugin_output": "The host name known by Nessus is :\nacsi-nas-08-253\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.25.3",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/L=Taipel/O=Synology Inc./CN=synology\n|-Issuer  : C=TW/L=Taipel/O=Synology Inc./CN=Synology Inc. CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.25.3",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5001",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/L=Taipel/O=Synology Inc./CN=synology\n|-Issuer  : C=TW/L=Taipel/O=Synology Inc./CN=Synology Inc. CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.25.3",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "45410",
            "pluginname": "SSL Certificate 'commonName' Mismatch",
            "hostname": "\nacsi-nas-08-253\n",
            "port": "5001",
            "protocol": "tcp",
            "severity": "0",
            "description": "The service running on the remote host presents an SSL certificate for which the 'commonName' (CN) attribute does not match the hostname on which the service listens.",
            "solution": "If the machine has several names, make sure that users connect to the service through the DNS hostname that matches the common name in the certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "",
            "plugin_output": "The host name known by Nessus is :\nacsi-nas-08-253\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.25.3",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "57608",
            "pluginname": "SMB Signing not required",
            "hostname": "",
            "port": "445",
            "protocol": "tcp",
            "severity": "2",
            "description": "Signing is not required on the remote SMB server. An unauthenticated, remote attacker can exploit this to conduct man-in-the-middle attacks against the SMB server.",
            "solution": "Enforce message signing in the host's configuration. On Windows, this is found in the policy setting 'Microsoft network server: Digitally sign communications (always)'. On Samba, the setting is called 'server signing'. See the 'see also' links for further details.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?df39b8b3\nhttp://technet.microsoft.com/en-us/library/cc731957.aspx\nhttp://www.nessus.org/u?74b80723\nhttps://www.samba.org/samba/docs/current/man-html/smb.conf.5.html\nhttp://www.nessus.org/u?a3cac4ea",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.25.3",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.25.2",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "45411",
            "pluginname": "SSL Certificate with Wrong Hostname",
            "hostname": "",
            "port": "5001",
            "protocol": "tcp",
            "severity": "2",
            "description": "The 'commonName' (CN) attribute of the SSL certificate presented for this service is for a different machine.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The identities known by Nessus are :\n10.27.25.2\n192.168.8.242\n10.27.25.2\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.25.2",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "45411",
            "pluginname": "SSL Certificate with Wrong Hostname",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The 'commonName' (CN) attribute of the SSL certificate presented for this service is for a different machine.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The identities known by Nessus are :\n10.27.25.2\n192.168.8.242\n10.27.25.2\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.25.2",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "45410",
            "pluginname": "SSL Certificate 'commonName' Mismatch",
            "hostname": "\nacsi-nas-07-252\n",
            "port": "5001",
            "protocol": "tcp",
            "severity": "0",
            "description": "The service running on the remote host presents an SSL certificate for which the 'commonName' (CN) attribute does not match the hostname on which the service listens.",
            "solution": "If the machine has several names, make sure that users connect to the service through the DNS hostname that matches the common name in the certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "",
            "plugin_output": "The host name known by Nessus is :\nacsi-nas-07-252\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.25.2",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "45410",
            "pluginname": "SSL Certificate 'commonName' Mismatch",
            "hostname": "\nacsi-nas-07-252\n",
            "port": "443",
            "protocol": "tcp",
            "severity": "0",
            "description": "The service running on the remote host presents an SSL certificate for which the 'commonName' (CN) attribute does not match the hostname on which the service listens.",
            "solution": "If the machine has several names, make sure that users connect to the service through the DNS hostname that matches the common name in the certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "",
            "plugin_output": "The host name known by Nessus is :\nacsi-nas-07-252\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.25.2",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5001",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/L=Taipel/O=Synology Inc./CN=synology\n|-Issuer  : C=TW/L=Taipel/O=Synology Inc./CN=Synology Inc. CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.25.2",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/L=Taipel/O=Synology Inc./CN=synology\n|-Issuer  : C=TW/L=Taipel/O=Synology Inc./CN=Synology Inc. CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.25.2",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "57608",
            "pluginname": "SMB Signing not required",
            "hostname": "",
            "port": "445",
            "protocol": "tcp",
            "severity": "2",
            "description": "Signing is not required on the remote SMB server. An unauthenticated, remote attacker can exploit this to conduct man-in-the-middle attacks against the SMB server.",
            "solution": "Enforce message signing in the host's configuration. On Windows, this is found in the policy setting 'Microsoft network server: Digitally sign communications (always)'. On Samba, the setting is called 'server signing'. See the 'see also' links for further details.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?df39b8b3\nhttp://technet.microsoft.com/en-us/library/cc731957.aspx\nhttp://www.nessus.org/u?74b80723\nhttps://www.samba.org/samba/docs/current/man-html/smb.conf.5.html\nhttp://www.nessus.org/u?a3cac4ea",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.25.2",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "187201",
            "pluginname": "OpenSSH < 9.6 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple vulnerabilities as referenced in the release-9.6 advisory.\n\n  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by     Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of     the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the     commencement of encryption, and deleting an equal number of consecutive messages immediately after     encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While     cryptographically novel, the security impact of this attack is fortunately very limited as it only allows     deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user     user authentication from proceeding and results in a stuck connection. The most serious identified impact     is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing     the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.\n    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this     protocol weakness through a new strict KEX protocol extension that will be automatically enabled when     both the client and server support it. This extension makes two changes to the SSH transport protocol to     improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the     connection if any unnecessary or unexpected message is received during key exchange (including messages     that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability     from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of     each key exchange, preventing previously inserted messages from being able to make persistent changes to     the sequence number across completion of a key exchange. Either of these changes should be sufficient to     thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source     distribition. (CVE-2023-48795)\n\n  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the     PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular     private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)\n\n  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a     ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h     or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could     potentially perform command injection depending on what quoting was present in the user-supplied     ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository     could contain a submodule with shell characters in its user/hostname. Git does not ban shell     metacharacters in user or host names when checking out repositories from untrusted sources. Although we     believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially     across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters     from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be     effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters     potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject     to these restrictions, allowing configurations that use strange names to continue to be used, under the     assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSH version 9.6 or later.",
            "cve": "CVE-2023-48795",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.openssh.com/txt/release-9.6",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_8.2\nInstalled version : 8.2\nFixed version     : 9.6p1 / 9.6"
        },
        {
            "file_no": 0,
            "ip": "10.27.25.2",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1210 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.25.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "45411",
            "pluginname": "SSL Certificate with Wrong Hostname",
            "hostname": "",
            "port": "5001",
            "protocol": "tcp",
            "severity": "2",
            "description": "The 'commonName' (CN) attribute of the SSL certificate presented for this service is for a different machine.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The identities known by Nessus are :\n10.27.25.1\n192.168.101.4\n192.168.8.241\n10.27.25.1\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.25.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "45411",
            "pluginname": "SSL Certificate with Wrong Hostname",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The 'commonName' (CN) attribute of the SSL certificate presented for this service is for a different machine.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The identities known by Nessus are :\n10.27.25.1\n192.168.101.4\n192.168.8.241\n10.27.25.1\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.25.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "45410",
            "pluginname": "SSL Certificate 'commonName' Mismatch",
            "hostname": "\nacsi-nas-06-251\n",
            "port": "5001",
            "protocol": "tcp",
            "severity": "0",
            "description": "The service running on the remote host presents an SSL certificate for which the 'commonName' (CN) attribute does not match the hostname on which the service listens.",
            "solution": "If the machine has several names, make sure that users connect to the service through the DNS hostname that matches the common name in the certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "",
            "plugin_output": "The host name known by Nessus is :\nacsi-nas-06-251\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.25.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5001",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/L=Taipel/O=Synology Inc./CN=synology\n|-Issuer  : C=TW/L=Taipel/O=Synology Inc./CN=Synology Inc. CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.25.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/L=Taipel/O=Synology Inc./CN=synology\n|-Issuer  : C=TW/L=Taipel/O=Synology Inc./CN=Synology Inc. CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.25.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "45410",
            "pluginname": "SSL Certificate 'commonName' Mismatch",
            "hostname": "\nacsi-nas-06-251\n",
            "port": "443",
            "protocol": "tcp",
            "severity": "0",
            "description": "The service running on the remote host presents an SSL certificate for which the 'commonName' (CN) attribute does not match the hostname on which the service listens.",
            "solution": "If the machine has several names, make sure that users connect to the service through the DNS hostname that matches the common name in the certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "",
            "plugin_output": "The host name known by Nessus is :\nacsi-nas-06-251\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.25.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "57608",
            "pluginname": "SMB Signing not required",
            "hostname": "",
            "port": "445",
            "protocol": "tcp",
            "severity": "2",
            "description": "Signing is not required on the remote SMB server. An unauthenticated, remote attacker can exploit this to conduct man-in-the-middle attacks against the SMB server.",
            "solution": "Enforce message signing in the host's configuration. On Windows, this is found in the policy setting 'Microsoft network server: Digitally sign communications (always)'. On Samba, the setting is called 'server signing'. See the 'see also' links for further details.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?df39b8b3\nhttp://technet.microsoft.com/en-us/library/cc731957.aspx\nhttp://www.nessus.org/u?74b80723\nhttps://www.samba.org/samba/docs/current/man-html/smb.conf.5.html\nhttp://www.nessus.org/u?a3cac4ea",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.25.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.24.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.24.4",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "45411",
            "pluginname": "SSL Certificate with Wrong Hostname",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The 'commonName' (CN) attribute of the SSL certificate presented for this service is for a different machine.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The identities known by Nessus are :\n10.27.24.4\n10.27.24.4\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.4",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "45411",
            "pluginname": "SSL Certificate with Wrong Hostname",
            "hostname": "",
            "port": "5001",
            "protocol": "tcp",
            "severity": "2",
            "description": "The 'commonName' (CN) attribute of the SSL certificate presented for this service is for a different machine.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The identities known by Nessus are :\n10.27.24.4\n10.27.24.4\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.4",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "45410",
            "pluginname": "SSL Certificate 'commonName' Mismatch",
            "hostname": "\nacsi-nas03-244\n",
            "port": "443",
            "protocol": "tcp",
            "severity": "0",
            "description": "The service running on the remote host presents an SSL certificate for which the 'commonName' (CN) attribute does not match the hostname on which the service listens.",
            "solution": "If the machine has several names, make sure that users connect to the service through the DNS hostname that matches the common name in the certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "",
            "plugin_output": "The host name known by Nessus is :\nacsi-nas03-244\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.4",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/L=Taipel/O=Synology Inc./CN=synology\n|-Issuer  : C=TW/L=Taipel/O=Synology Inc./CN=Synology Inc. CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.4",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5001",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/L=Taipel/O=Synology Inc./CN=synology\n|-Issuer  : C=TW/L=Taipel/O=Synology Inc./CN=Synology Inc. CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.4",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "45410",
            "pluginname": "SSL Certificate 'commonName' Mismatch",
            "hostname": "\nacsi-nas03-244\n",
            "port": "5001",
            "protocol": "tcp",
            "severity": "0",
            "description": "The service running on the remote host presents an SSL certificate for which the 'commonName' (CN) attribute does not match the hostname on which the service listens.",
            "solution": "If the machine has several names, make sure that users connect to the service through the DNS hostname that matches the common name in the certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "",
            "plugin_output": "The host name known by Nessus is :\nacsi-nas03-244\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.4",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "57608",
            "pluginname": "SMB Signing not required",
            "hostname": "",
            "port": "445",
            "protocol": "tcp",
            "severity": "2",
            "description": "Signing is not required on the remote SMB server. An unauthenticated, remote attacker can exploit this to conduct man-in-the-middle attacks against the SMB server.",
            "solution": "Enforce message signing in the host's configuration. On Windows, this is found in the policy setting 'Microsoft network server: Digitally sign communications (always)'. On Samba, the setting is called 'server signing'. See the 'see also' links for further details.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?df39b8b3\nhttp://technet.microsoft.com/en-us/library/cc731957.aspx\nhttp://www.nessus.org/u?74b80723\nhttps://www.samba.org/samba/docs/current/man-html/smb.conf.5.html\nhttp://www.nessus.org/u?a3cac4ea",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.24.4",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "187201",
            "pluginname": "OpenSSH < 9.6 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple vulnerabilities as referenced in the release-9.6 advisory.\n\n  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by     Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of     the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the     commencement of encryption, and deleting an equal number of consecutive messages immediately after     encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While     cryptographically novel, the security impact of this attack is fortunately very limited as it only allows     deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user     user authentication from proceeding and results in a stuck connection. The most serious identified impact     is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing     the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.\n    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this     protocol weakness through a new strict KEX protocol extension that will be automatically enabled when     both the client and server support it. This extension makes two changes to the SSH transport protocol to     improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the     connection if any unnecessary or unexpected message is received during key exchange (including messages     that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability     from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of     each key exchange, preventing previously inserted messages from being able to make persistent changes to     the sequence number across completion of a key exchange. Either of these changes should be sufficient to     thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source     distribition. (CVE-2023-48795)\n\n  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the     PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular     private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)\n\n  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a     ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h     or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could     potentially perform command injection depending on what quoting was present in the user-supplied     ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository     could contain a submodule with shell characters in its user/hostname. Git does not ban shell     metacharacters in user or host names when checking out repositories from untrusted sources. Although we     believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially     across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters     from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be     effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters     potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject     to these restrictions, allowing configurations that use strange names to continue to be used, under the     assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSH version 9.6 or later.",
            "cve": "CVE-2023-48795",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.openssh.com/txt/release-9.6",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_8.2\nInstalled version : 8.2\nFixed version     : 9.6p1 / 9.6"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.4",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.24.3",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "45411",
            "pluginname": "SSL Certificate with Wrong Hostname",
            "hostname": "",
            "port": "389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The 'commonName' (CN) attribute of the SSL certificate presented for this service is for a different machine.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The identities known by Nessus are :\n10.27.24.3\n10.27.24.3\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.3",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "45411",
            "pluginname": "SSL Certificate with Wrong Hostname",
            "hostname": "",
            "port": "5006",
            "protocol": "tcp",
            "severity": "2",
            "description": "The 'commonName' (CN) attribute of the SSL certificate presented for this service is for a different machine.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The identities known by Nessus are :\n10.27.24.3\n10.27.24.3\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.3",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "45411",
            "pluginname": "SSL Certificate with Wrong Hostname",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The 'commonName' (CN) attribute of the SSL certificate presented for this service is for a different machine.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The identities known by Nessus are :\n10.27.24.3\n10.27.24.3\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.3",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "45411",
            "pluginname": "SSL Certificate with Wrong Hostname",
            "hostname": "",
            "port": "636",
            "protocol": "tcp",
            "severity": "2",
            "description": "The 'commonName' (CN) attribute of the SSL certificate presented for this service is for a different machine.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The identities known by Nessus are :\n10.27.24.3\n10.27.24.3\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.3",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "45411",
            "pluginname": "SSL Certificate with Wrong Hostname",
            "hostname": "",
            "port": "5001",
            "protocol": "tcp",
            "severity": "2",
            "description": "The 'commonName' (CN) attribute of the SSL certificate presented for this service is for a different machine.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The identities known by Nessus are :\n10.27.24.3\n10.27.24.3\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.3",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "45410",
            "pluginname": "SSL Certificate 'commonName' Mismatch",
            "hostname": "\nacsi_file\n",
            "port": "389",
            "protocol": "tcp",
            "severity": "0",
            "description": "The service running on the remote host presents an SSL certificate for which the 'commonName' (CN) attribute does not match the hostname on which the service listens.",
            "solution": "If the machine has several names, make sure that users connect to the service through the DNS hostname that matches the common name in the certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "",
            "plugin_output": "The host name known by Nessus is :\nacsi_file\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.3",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "45410",
            "pluginname": "SSL Certificate 'commonName' Mismatch",
            "hostname": "\nacsi_file\n",
            "port": "5006",
            "protocol": "tcp",
            "severity": "0",
            "description": "The service running on the remote host presents an SSL certificate for which the 'commonName' (CN) attribute does not match the hostname on which the service listens.",
            "solution": "If the machine has several names, make sure that users connect to the service through the DNS hostname that matches the common name in the certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "",
            "plugin_output": "The host name known by Nessus is :\nacsi_file\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.3",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "45410",
            "pluginname": "SSL Certificate 'commonName' Mismatch",
            "hostname": "\nacsi_file\n",
            "port": "443",
            "protocol": "tcp",
            "severity": "0",
            "description": "The service running on the remote host presents an SSL certificate for which the 'commonName' (CN) attribute does not match the hostname on which the service listens.",
            "solution": "If the machine has several names, make sure that users connect to the service through the DNS hostname that matches the common name in the certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "",
            "plugin_output": "The host name known by Nessus is :\nacsi_file\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.3",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "45410",
            "pluginname": "SSL Certificate 'commonName' Mismatch",
            "hostname": "\nacsi_file\n",
            "port": "636",
            "protocol": "tcp",
            "severity": "0",
            "description": "The service running on the remote host presents an SSL certificate for which the 'commonName' (CN) attribute does not match the hostname on which the service listens.",
            "solution": "If the machine has several names, make sure that users connect to the service through the DNS hostname that matches the common name in the certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "",
            "plugin_output": "The host name known by Nessus is :\nacsi_file\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.3",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/L=Taipel/O=Synology Inc./CN=synology\n|-Issuer  : C=TW/L=Taipel/O=Synology Inc./CN=Synology Inc. CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.3",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5006",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/L=Taipel/O=Synology Inc./CN=synology\n|-Issuer  : C=TW/L=Taipel/O=Synology Inc./CN=Synology Inc. CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.3",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/L=Taipel/O=Synology Inc./CN=synology\n|-Issuer  : C=TW/L=Taipel/O=Synology Inc./CN=Synology Inc. CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.3",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "636",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/L=Taipel/O=Synology Inc./CN=synology\n|-Issuer  : C=TW/L=Taipel/O=Synology Inc./CN=Synology Inc. CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.3",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5001",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/L=Taipel/O=Synology Inc./CN=synology\n|-Issuer  : C=TW/L=Taipel/O=Synology Inc./CN=Synology Inc. CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.3",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "45410",
            "pluginname": "SSL Certificate 'commonName' Mismatch",
            "hostname": "\nacsi_file\n",
            "port": "5001",
            "protocol": "tcp",
            "severity": "0",
            "description": "The service running on the remote host presents an SSL certificate for which the 'commonName' (CN) attribute does not match the hostname on which the service listens.",
            "solution": "If the machine has several names, make sure that users connect to the service through the DNS hostname that matches the common name in the certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "",
            "plugin_output": "The host name known by Nessus is :\nacsi_file\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.3",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.24.2",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.24.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "45411",
            "pluginname": "SSL Certificate with Wrong Hostname",
            "hostname": "",
            "port": "389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The 'commonName' (CN) attribute of the SSL certificate presented for this service is for a different machine.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The identities known by Nessus are :\n10.27.24.3\n10.27.24.1\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "45411",
            "pluginname": "SSL Certificate with Wrong Hostname",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The 'commonName' (CN) attribute of the SSL certificate presented for this service is for a different machine.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The identities known by Nessus are :\n10.27.24.3\n10.27.24.1\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "45411",
            "pluginname": "SSL Certificate with Wrong Hostname",
            "hostname": "",
            "port": "636",
            "protocol": "tcp",
            "severity": "2",
            "description": "The 'commonName' (CN) attribute of the SSL certificate presented for this service is for a different machine.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The identities known by Nessus are :\n10.27.24.3\n10.27.24.1\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "45411",
            "pluginname": "SSL Certificate with Wrong Hostname",
            "hostname": "",
            "port": "5006",
            "protocol": "tcp",
            "severity": "2",
            "description": "The 'commonName' (CN) attribute of the SSL certificate presented for this service is for a different machine.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The identities known by Nessus are :\n10.27.24.3\n10.27.24.1\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "45411",
            "pluginname": "SSL Certificate with Wrong Hostname",
            "hostname": "",
            "port": "5001",
            "protocol": "tcp",
            "severity": "2",
            "description": "The 'commonName' (CN) attribute of the SSL certificate presented for this service is for a different machine.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The identities known by Nessus are :\n10.27.24.3\n10.27.24.1\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "45410",
            "pluginname": "SSL Certificate 'commonName' Mismatch",
            "hostname": "\nacsi_file\n",
            "port": "389",
            "protocol": "tcp",
            "severity": "0",
            "description": "The service running on the remote host presents an SSL certificate for which the 'commonName' (CN) attribute does not match the hostname on which the service listens.",
            "solution": "If the machine has several names, make sure that users connect to the service through the DNS hostname that matches the common name in the certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "",
            "plugin_output": "The host name known by Nessus is :\nacsi_file\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "45410",
            "pluginname": "SSL Certificate 'commonName' Mismatch",
            "hostname": "\nacsi_file\n",
            "port": "443",
            "protocol": "tcp",
            "severity": "0",
            "description": "The service running on the remote host presents an SSL certificate for which the 'commonName' (CN) attribute does not match the hostname on which the service listens.",
            "solution": "If the machine has several names, make sure that users connect to the service through the DNS hostname that matches the common name in the certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "",
            "plugin_output": "The host name known by Nessus is :\nacsi_file\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "45410",
            "pluginname": "SSL Certificate 'commonName' Mismatch",
            "hostname": "\nacsi_file\n",
            "port": "636",
            "protocol": "tcp",
            "severity": "0",
            "description": "The service running on the remote host presents an SSL certificate for which the 'commonName' (CN) attribute does not match the hostname on which the service listens.",
            "solution": "If the machine has several names, make sure that users connect to the service through the DNS hostname that matches the common name in the certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "",
            "plugin_output": "The host name known by Nessus is :\nacsi_file\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "45410",
            "pluginname": "SSL Certificate 'commonName' Mismatch",
            "hostname": "\nacsi_file\n",
            "port": "5006",
            "protocol": "tcp",
            "severity": "0",
            "description": "The service running on the remote host presents an SSL certificate for which the 'commonName' (CN) attribute does not match the hostname on which the service listens.",
            "solution": "If the machine has several names, make sure that users connect to the service through the DNS hostname that matches the common name in the certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "",
            "plugin_output": "The host name known by Nessus is :\nacsi_file\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/L=Taipel/O=Synology Inc./CN=synology\n|-Issuer  : C=TW/L=Taipel/O=Synology Inc./CN=Synology Inc. CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/L=Taipel/O=Synology Inc./CN=synology\n|-Issuer  : C=TW/L=Taipel/O=Synology Inc./CN=Synology Inc. CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "636",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/L=Taipel/O=Synology Inc./CN=synology\n|-Issuer  : C=TW/L=Taipel/O=Synology Inc./CN=Synology Inc. CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5006",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/L=Taipel/O=Synology Inc./CN=synology\n|-Issuer  : C=TW/L=Taipel/O=Synology Inc./CN=Synology Inc. CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5001",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/L=Taipel/O=Synology Inc./CN=synology\n|-Issuer  : C=TW/L=Taipel/O=Synology Inc./CN=Synology Inc. CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "45410",
            "pluginname": "SSL Certificate 'commonName' Mismatch",
            "hostname": "\nacsi_file\n",
            "port": "5001",
            "protocol": "tcp",
            "severity": "0",
            "description": "The service running on the remote host presents an SSL certificate for which the 'commonName' (CN) attribute does not match the hostname on which the service listens.",
            "solution": "If the machine has several names, make sure that users connect to the service through the DNS hostname that matches the common name in the certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "",
            "plugin_output": "The host name known by Nessus is :\nacsi_file\nThe Common Name in the certificate is :\nsynology\nThe Subject Alternate Name in the certificate is :\nsynology"
        },
        {
            "file_no": 0,
            "ip": "10.27.24.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.23.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.23.1",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Some-State/O=ACSI"
        },
        {
            "file_no": 0,
            "ip": "10.27.23.1",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Some-State/O=ACSI\n|-Issuer  : C=TW/ST=Some-State/O=ACSI"
        },
        {
            "file_no": 0,
            "ip": "10.27.23.1",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.22.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.22.7",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 7 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.22.4",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 44 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.22.3",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.21.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.21.2",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "57608",
            "pluginname": "SMB Signing not required",
            "hostname": "",
            "port": "445",
            "protocol": "tcp",
            "severity": "2",
            "description": "Signing is not required on the remote SMB server. An unauthenticated, remote attacker can exploit this to conduct man-in-the-middle attacks against the SMB server.",
            "solution": "Enforce message signing in the host's configuration. On Windows, this is found in the policy setting 'Microsoft network server: Digitally sign communications (always)'. On Samba, the setting is called 'server signing'. See the 'see also' links for further details.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?df39b8b3\nhttp://technet.microsoft.com/en-us/library/cc731957.aspx\nhttp://www.nessus.org/u?74b80723\nhttps://www.samba.org/samba/docs/current/man-html/smb.conf.5.html\nhttp://www.nessus.org/u?a3cac4ea",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.21.1",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.21.1",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.21.1",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.21.1",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.19.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.19.1",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.18.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.18.1",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Some-State/O=ACSI"
        },
        {
            "file_no": 0,
            "ip": "10.27.18.1",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Some-State/O=ACSI\n|-Issuer  : C=TW/ST=Some-State/O=ACSI"
        },
        {
            "file_no": 0,
            "ip": "10.27.18.1",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.17.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.17.1",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Taipei/L=J/O=ACSI/OU=PROJECT/CN=soc@support.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.17.1",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Some-State/O=ACSI"
        },
        {
            "file_no": 0,
            "ip": "10.27.17.1",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taipei/L=J/O=ACSI/OU=PROJECT/CN=soc@support.com\n|-Issuer  : C=TW/ST=Taipei/L=J/O=ACSI/OU=PROJECT/CN=soc@support.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.17.1",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Some-State/O=ACSI\n|-Issuer  : C=TW/ST=Some-State/O=ACSI"
        },
        {
            "file_no": 0,
            "ip": "10.27.17.1",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.16.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.16.2",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.15.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.15.3",
            "system": "Arista EOS",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.15.3",
            "system": "Arista EOS",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.15.3",
            "system": "Arista EOS",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=kms-acsi.acercsi.com\n|-Issuer  : C=GB/ST=Greater Manchester/L=Salford/O=Sectigo Limited/CN=Sectigo RSA Domain Validation Secure Server CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.15.3",
            "system": "Arista EOS",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.14.101",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-6QWDX53/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.14.101",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-6QWDX53/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-6QWDX53/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.14.1",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.14.1",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.14.1",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=tw/ST=tw/L=tw/O=acsi/OU=acsi/CN=acsi-sl-111"
        },
        {
            "file_no": 0,
            "ip": "10.27.14.1",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=tw/ST=tw/L=tw/O=acsi/OU=acsi/CN=acsi-sl-111\n|-Issuer  : C=tw/ST=tw/L=tw/O=acsi/OU=acsi/CN=acsi-sl-111"
        },
        {
            "file_no": 0,
            "ip": "10.27.13.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.13.3",
            "system": "Linux Kernel 2.2\nLinux Kernel 2.4\nLinux Kernel 2.6",
            "os": "linux",
            "pluginid": "17154",
            "pluginname": "HTTP Proxy CONNECT Loop DoS",
            "hostname": "",
            "port": "3128",
            "protocol": "tcp",
            "severity": "2",
            "description": "The proxy allows the users to perform repeated CONNECT requests to itself. \n\nThis allow anybody to saturate the proxy CPU, memory or file descriptors. \n\n** Note that if the proxy limits the number of connections\n** from a single IP (e.g. acl maxconn with Squid), it is \n** protected against saturation and you may ignore this alert.",
            "solution": "Reconfigure your proxy so that it refuses CONNECT requests to itself.",
            "cve": "",
            "cvss3": "",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.13.3",
            "system": "Linux Kernel 2.2\nLinux Kernel 2.4\nLinux Kernel 2.6",
            "os": "linux",
            "pluginid": "10194",
            "pluginname": "HTTP Proxy POST Request Relaying",
            "hostname": "",
            "port": "3128",
            "protocol": "tcp",
            "severity": "2",
            "description": "The proxy allows the users to perform POST requests such as\n\n\tPOST http://cvs.nessus.org:21\n\nwithout any Content-length tag.\n\nThis request may give an attacker the ability to have an interactive session.\n\nThis problem may allow attackers to go through your firewall, by connecting to sensitive ports like 23 (telnet) using your proxy, or it can allow internal users to bypass the firewall rules and connect to ports they should not be allowed to.\n\nIn addition to that, your proxy may be used to perform attacks against other networks.",
            "solution": "Reconfigure your proxy so that only the users of the internal network can use it, and so that it can not connect to dangerous ports (1-1024).",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.13.3",
            "system": "Linux Kernel 2.2\nLinux Kernel 2.4\nLinux Kernel 2.6",
            "os": "linux",
            "pluginid": "10194",
            "pluginname": "HTTP Proxy POST Request Relaying",
            "hostname": "",
            "port": "3129",
            "protocol": "tcp",
            "severity": "2",
            "description": "The proxy allows the users to perform POST requests such as\n\n\tPOST http://cvs.nessus.org:21\n\nwithout any Content-length tag.\n\nThis request may give an attacker the ability to have an interactive session.\n\nThis problem may allow attackers to go through your firewall, by connecting to sensitive ports like 23 (telnet) using your proxy, or it can allow internal users to bypass the firewall rules and connect to ports they should not be allowed to.\n\nIn addition to that, your proxy may be used to perform attacks against other networks.",
            "solution": "Reconfigure your proxy so that only the users of the internal network can use it, and so that it can not connect to dangerous ports (1-1024).",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.13.3",
            "system": "Linux Kernel 2.2\nLinux Kernel 2.4\nLinux Kernel 2.6",
            "os": "linux",
            "pluginid": "10193",
            "pluginname": "HTTP Proxy Arbitrary Site/Port Relaying",
            "hostname": "",
            "port": "3128",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote proxy, allows everyone to perform requests against arbitrary ports, such as :\n\n'GET http://cvs.nessus.org:110'. \n\nThis problem may allow attackers to go through your firewall, by connecting to sensitive ports like 25 (sendmail) using the proxy. In addition to that, it might be used to perform attacks against other networks.",
            "solution": "Set up ACLs in place to prevent your proxy from accepting to connect to non-authorized ports.",
            "cve": "",
            "cvss3": "",
            "cvss2": "6.8",
            "see_also": "",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.13.3",
            "system": "Linux Kernel 2.2\nLinux Kernel 2.4\nLinux Kernel 2.6",
            "os": "linux",
            "pluginid": "10193",
            "pluginname": "HTTP Proxy Arbitrary Site/Port Relaying",
            "hostname": "",
            "port": "3129",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote proxy, allows everyone to perform requests against arbitrary ports, such as :\n\n'GET http://cvs.nessus.org:110'. \n\nThis problem may allow attackers to go through your firewall, by connecting to sensitive ports like 25 (sendmail) using the proxy. In addition to that, it might be used to perform attacks against other networks.",
            "solution": "Set up ACLs in place to prevent your proxy from accepting to connect to non-authorized ports.",
            "cve": "",
            "cvss3": "",
            "cvss2": "6.8",
            "see_also": "",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.13.3",
            "system": "Linux Kernel 2.2\nLinux Kernel 2.4\nLinux Kernel 2.6",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.13.2",
            "system": "Linux Kernel 2.2\nLinux Kernel 2.4\nLinux Kernel 2.6",
            "os": "linux",
            "pluginid": "17154",
            "pluginname": "HTTP Proxy CONNECT Loop DoS",
            "hostname": "",
            "port": "3128",
            "protocol": "tcp",
            "severity": "2",
            "description": "The proxy allows the users to perform repeated CONNECT requests to itself. \n\nThis allow anybody to saturate the proxy CPU, memory or file descriptors. \n\n** Note that if the proxy limits the number of connections\n** from a single IP (e.g. acl maxconn with Squid), it is \n** protected against saturation and you may ignore this alert.",
            "solution": "Reconfigure your proxy so that it refuses CONNECT requests to itself.",
            "cve": "",
            "cvss3": "",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.13.2",
            "system": "Linux Kernel 2.2\nLinux Kernel 2.4\nLinux Kernel 2.6",
            "os": "linux",
            "pluginid": "10194",
            "pluginname": "HTTP Proxy POST Request Relaying",
            "hostname": "",
            "port": "3128",
            "protocol": "tcp",
            "severity": "2",
            "description": "The proxy allows the users to perform POST requests such as\n\n\tPOST http://cvs.nessus.org:21\n\nwithout any Content-length tag.\n\nThis request may give an attacker the ability to have an interactive session.\n\nThis problem may allow attackers to go through your firewall, by connecting to sensitive ports like 23 (telnet) using your proxy, or it can allow internal users to bypass the firewall rules and connect to ports they should not be allowed to.\n\nIn addition to that, your proxy may be used to perform attacks against other networks.",
            "solution": "Reconfigure your proxy so that only the users of the internal network can use it, and so that it can not connect to dangerous ports (1-1024).",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.13.2",
            "system": "Linux Kernel 2.2\nLinux Kernel 2.4\nLinux Kernel 2.6",
            "os": "linux",
            "pluginid": "10194",
            "pluginname": "HTTP Proxy POST Request Relaying",
            "hostname": "",
            "port": "3129",
            "protocol": "tcp",
            "severity": "2",
            "description": "The proxy allows the users to perform POST requests such as\n\n\tPOST http://cvs.nessus.org:21\n\nwithout any Content-length tag.\n\nThis request may give an attacker the ability to have an interactive session.\n\nThis problem may allow attackers to go through your firewall, by connecting to sensitive ports like 23 (telnet) using your proxy, or it can allow internal users to bypass the firewall rules and connect to ports they should not be allowed to.\n\nIn addition to that, your proxy may be used to perform attacks against other networks.",
            "solution": "Reconfigure your proxy so that only the users of the internal network can use it, and so that it can not connect to dangerous ports (1-1024).",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.13.2",
            "system": "Linux Kernel 2.2\nLinux Kernel 2.4\nLinux Kernel 2.6",
            "os": "linux",
            "pluginid": "10193",
            "pluginname": "HTTP Proxy Arbitrary Site/Port Relaying",
            "hostname": "",
            "port": "3128",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote proxy, allows everyone to perform requests against arbitrary ports, such as :\n\n'GET http://cvs.nessus.org:110'. \n\nThis problem may allow attackers to go through your firewall, by connecting to sensitive ports like 25 (sendmail) using the proxy. In addition to that, it might be used to perform attacks against other networks.",
            "solution": "Set up ACLs in place to prevent your proxy from accepting to connect to non-authorized ports.",
            "cve": "",
            "cvss3": "",
            "cvss2": "6.8",
            "see_also": "",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.13.2",
            "system": "Linux Kernel 2.2\nLinux Kernel 2.4\nLinux Kernel 2.6",
            "os": "linux",
            "pluginid": "10193",
            "pluginname": "HTTP Proxy Arbitrary Site/Port Relaying",
            "hostname": "",
            "port": "3129",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote proxy, allows everyone to perform requests against arbitrary ports, such as :\n\n'GET http://cvs.nessus.org:110'. \n\nThis problem may allow attackers to go through your firewall, by connecting to sensitive ports like 25 (sendmail) using the proxy. In addition to that, it might be used to perform attacks against other networks.",
            "solution": "Set up ACLs in place to prevent your proxy from accepting to connect to non-authorized ports.",
            "cve": "",
            "cvss3": "",
            "cvss2": "6.8",
            "see_also": "",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.13.2",
            "system": "Linux Kernel 2.2\nLinux Kernel 2.4\nLinux Kernel 2.6",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.12.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.12.9",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.12.8",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.12.7",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Taipei/O=ACSI"
        },
        {
            "file_no": 0,
            "ip": "10.27.12.7",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taipei/O=ACSI\n|-Issuer  : C=TW/ST=Taipei/O=ACSI"
        },
        {
            "file_no": 0,
            "ip": "10.27.12.7",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "175115",
            "pluginname": "Apache CouchDB < 3.2.3 / 3.3.x < 3.3.2 Information Disclosure",
            "hostname": "",
            "port": "9594",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its banner, the version of CouchDB running on the remote host is prior to 3.2.3 or 3.3.x prior to 3.3,2.\nIt is, therefore, affected by an information disclosure vulnerability. Design documents with matching document IDs, from databases on the same cluster, may share a mutable Javascript environment when using specific design document functions.\n\nNote that Nessus did not actually test for these flaws but instead, has relied on the version in CouchDB's banner.",
            "solution": "Upgrade to CouchDB 3.2.3, 3.3.2 or later.",
            "cve": "CVE-2023-26268",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "https://docs.couchdb.org/en/latest/cve/2023-26268.html",
            "plugin_output": "URL               : http://10.27.12.7:9594/\nInstalled version : 3.1.1\nFixed version     : 3.2.3"
        },
        {
            "file_no": 0,
            "ip": "10.27.12.7",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "182208",
            "pluginname": "Apache CouchDB < 3.1.2 Privilege Escalation",
            "hostname": "",
            "port": "9594",
            "protocol": "tcp",
            "severity": "3",
            "description": "According to its banner, the version of CouchDB running on the remote host is prior 3.1,2. It is, therefore, affected by a privilege escalation vulnerability. A malicious user with permission to create documents in a database is able to attach a HTML attachment to a document. If a CouchDB admin opens that attachment in a browser, e.g. via the CouchDB admin interface Fauxton, any JavaScript code embedded in that HTML attachment will be executed within the security context of that admin. A similar route is available with the already deprecated _show and _list functionality. This privilege escalation vulnerability allows an attacker to add or remove data in any database or make configuration changes. \n\nNote that Nessus did not actually test for these flaws but instead, has relied on the version in CouchDB's banner.",
            "solution": "Upgrade to CouchDB 3.1.2 and apply the recommended settings, or upgrade to 3.2.0 or later.",
            "cve": "CVE-2021-38295",
            "cvss3": "7.3",
            "cvss2": "6.0",
            "see_also": "https://docs.couchdb.org/en/stable/cve/2021-38295.html",
            "plugin_output": "URL               : http://10.27.12.7:9594/\nInstalled version : 3.1.1\nFixed version     : See vendor advisory"
        },
        {
            "file_no": 0,
            "ip": "10.27.12.7",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "186916",
            "pluginname": "Apache CouchDB < 3.3.3 Privilege Escalation",
            "hostname": "",
            "port": "9594",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its banner, the version of CouchDB running on the remote host is prior to 3.3.3. It is, therefore, affected by a privilege escalation vulnerability:\n\n  - Design document functions which receive a user http request object may expose authorization or session cookie     headers of the user who accesses the document. (CVE-2023-45725)\n\nNote that Nessus did not actually test for these flaws but instead, has relied on the version in CouchDB's banner.",
            "solution": "Upgrade to CouchDB 3.3.3 or later.",
            "cve": "CVE-2023-45725",
            "cvss3": "5.7",
            "cvss2": "6.8",
            "see_also": "https://docs.couchdb.org/en/stable/cve/2023-45725.html",
            "plugin_output": "URL               : http://10.27.12.7:9594/\nInstalled version : 3.1.1\nFixed version     : 3.3.3"
        },
        {
            "file_no": 0,
            "ip": "10.27.12.7",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 815 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.12.6",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "175115",
            "pluginname": "Apache CouchDB < 3.2.3 / 3.3.x < 3.3.2 Information Disclosure",
            "hostname": "",
            "port": "9594",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its banner, the version of CouchDB running on the remote host is prior to 3.2.3 or 3.3.x prior to 3.3,2.\nIt is, therefore, affected by an information disclosure vulnerability. Design documents with matching document IDs, from databases on the same cluster, may share a mutable Javascript environment when using specific design document functions.\n\nNote that Nessus did not actually test for these flaws but instead, has relied on the version in CouchDB's banner.",
            "solution": "Upgrade to CouchDB 3.2.3, 3.3.2 or later.",
            "cve": "CVE-2023-26268",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "https://docs.couchdb.org/en/latest/cve/2023-26268.html",
            "plugin_output": "URL               : http://10.27.12.6:9594/\nInstalled version : 3.1.1\nFixed version     : 3.2.3"
        },
        {
            "file_no": 0,
            "ip": "10.27.12.6",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "182208",
            "pluginname": "Apache CouchDB < 3.1.2 Privilege Escalation",
            "hostname": "",
            "port": "9594",
            "protocol": "tcp",
            "severity": "3",
            "description": "According to its banner, the version of CouchDB running on the remote host is prior 3.1,2. It is, therefore, affected by a privilege escalation vulnerability. A malicious user with permission to create documents in a database is able to attach a HTML attachment to a document. If a CouchDB admin opens that attachment in a browser, e.g. via the CouchDB admin interface Fauxton, any JavaScript code embedded in that HTML attachment will be executed within the security context of that admin. A similar route is available with the already deprecated _show and _list functionality. This privilege escalation vulnerability allows an attacker to add or remove data in any database or make configuration changes. \n\nNote that Nessus did not actually test for these flaws but instead, has relied on the version in CouchDB's banner.",
            "solution": "Upgrade to CouchDB 3.1.2 and apply the recommended settings, or upgrade to 3.2.0 or later.",
            "cve": "CVE-2021-38295",
            "cvss3": "7.3",
            "cvss2": "6.0",
            "see_also": "https://docs.couchdb.org/en/stable/cve/2021-38295.html",
            "plugin_output": "URL               : http://10.27.12.6:9594/\nInstalled version : 3.1.1\nFixed version     : See vendor advisory"
        },
        {
            "file_no": 0,
            "ip": "10.27.12.6",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "186916",
            "pluginname": "Apache CouchDB < 3.3.3 Privilege Escalation",
            "hostname": "",
            "port": "9594",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its banner, the version of CouchDB running on the remote host is prior to 3.3.3. It is, therefore, affected by a privilege escalation vulnerability:\n\n  - Design document functions which receive a user http request object may expose authorization or session cookie     headers of the user who accesses the document. (CVE-2023-45725)\n\nNote that Nessus did not actually test for these flaws but instead, has relied on the version in CouchDB's banner.",
            "solution": "Upgrade to CouchDB 3.3.3 or later.",
            "cve": "CVE-2023-45725",
            "cvss3": "5.7",
            "cvss2": "6.8",
            "see_also": "https://docs.couchdb.org/en/stable/cve/2023-45725.html",
            "plugin_output": "URL               : http://10.27.12.6:9594/\nInstalled version : 3.1.1\nFixed version     : 3.3.3"
        },
        {
            "file_no": 0,
            "ip": "10.27.12.6",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Taipei/O=ACSI"
        },
        {
            "file_no": 0,
            "ip": "10.27.12.6",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taipei/O=ACSI\n|-Issuer  : C=TW/ST=Taipei/O=ACSI"
        },
        {
            "file_no": 0,
            "ip": "10.27.12.6",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 243 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.12.2",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "6443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Taipei/L=J/O=ACSI/OU=PROJECT/CN=soc@support.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.12.2",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Taipei/L=J/O=ACSI/OU=ICD08A/CN=soc@support.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.12.2",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "6443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taipei/L=J/O=ACSI/OU=PROJECT/CN=soc@support.com\n|-Issuer  : C=TW/ST=Taipei/L=J/O=ACSI/OU=PROJECT/CN=soc@support.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.12.2",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taipei/L=J/O=ACSI/OU=ICD08A/CN=soc@support.com\n|-Issuer  : C=TW/ST=Taipei/L=J/O=ACSI/OU=ICD08A/CN=soc@support.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.12.2",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.12.1",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "32777",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Taipei/L=J/O=ACSI/OU=ICD08A/CN=soc@support.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.12.1",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Taipei/L=J/O=ACSI/OU=ICD08A/CN=soc@support.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.12.1",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "32777",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taipei/L=J/O=ACSI/OU=ICD08A/CN=soc@support.com\n|-Issuer  : C=TW/ST=Taipei/L=J/O=ACSI/OU=ICD08A/CN=soc@support.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.12.1",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taipei/L=J/O=ACSI/OU=ICD08A/CN=soc@support.com\n|-Issuer  : C=TW/ST=Taipei/L=J/O=ACSI/OU=ICD08A/CN=soc@support.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.12.1",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.11.107",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-F73WFZ3/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.11.107",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-F73WFZ3/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-F73WFZ3/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.11.107",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "187201",
            "pluginname": "OpenSSH < 9.6 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple vulnerabilities as referenced in the release-9.6 advisory.\n\n  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by     Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of     the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the     commencement of encryption, and deleting an equal number of consecutive messages immediately after     encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While     cryptographically novel, the security impact of this attack is fortunately very limited as it only allows     deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user     user authentication from proceeding and results in a stuck connection. The most serious identified impact     is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing     the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.\n    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this     protocol weakness through a new strict KEX protocol extension that will be automatically enabled when     both the client and server support it. This extension makes two changes to the SSH transport protocol to     improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the     connection if any unnecessary or unexpected message is received during key exchange (including messages     that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability     from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of     each key exchange, preventing previously inserted messages from being able to make persistent changes to     the sequence number across completion of a key exchange. Either of these changes should be sufficient to     thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source     distribition. (CVE-2023-48795)\n\n  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the     PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular     private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)\n\n  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a     ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h     or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could     potentially perform command injection depending on what quoting was present in the user-supplied     ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository     could contain a submodule with shell characters in its user/hostname. Git does not ban shell     metacharacters in user or host names when checking out repositories from untrusted sources. Although we     believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially     across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters     from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be     effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters     potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject     to these restrictions, allowing configurations that use strange names to continue to be used, under the     assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSH version 9.6 or later.",
            "cve": "CVE-2023-48795",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.openssh.com/txt/release-9.6",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_9.0\nInstalled version : 9.0\nFixed version     : 9.6p1 / 9.6"
        },
        {
            "file_no": 0,
            "ip": "10.27.11.107",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "201194",
            "pluginname": "OpenSSH < 9.8 RCE",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of OpenSSH installed on the remote host is prior to 9.8. It is, therefore, affected by a vulnerability as referenced in the release-9.8 advisory.\n\n  - This release contains fixes for two security problems, one critical and one minor. 1) Race condition in     sshd(8) A critical vulnerability in sshd(8) was present in Portable OpenSSH versions between 8.5p1 and     9.7p1 (inclusive) that may allow arbitrary code execution with root privileges. Successful exploitation     has been demonstrated on 32-bit Linux/glibc systems with ASLR. Under lab conditions, the attack requires     on average 6-8 hours of continuous connections up to the maximum the server will accept. Exploitation on     64-bit systems is believed to be possible but has not been demonstrated at this time. It's likely that     these attacks will be improved upon. Exploitation on non-glibc systems is conceivable but has not been     examined. Systems that lack ASLR or users of downstream Linux distributions that have modified OpenSSH to     disable per-connection ASLR re-randomisation (yes - this is a thing, no - we don't understand why) may     potentially have an easier path to exploitation. OpenBSD is not vulnerable. We thank the Qualys Security     Advisory Team for discovering, reporting and demonstrating exploitability of this problem, and for     providing detailed feedback on additional mitigation measures. 2) Logic error in ssh(1)     ObscureKeystrokeTiming In OpenSSH version 9.5 through 9.7 (inclusive), when connected to an OpenSSH server     version 9.5 or later, a logic error in the ssh(1) ObscureKeystrokeTiming feature (on by default) rendered     this feature ineffective - a passive observer could still detect which network packets contained real     keystrokes when the countermeasure was active because both fake and real keystroke packets were being sent     unconditionally. This bug was Daniel Hugenroth and Alastair Beresford of the University of Cambridge     Computer Lab. Worse, the unconditional sending of both fake and real keystroke packets broke another long-     standing timing attack mitigation. Since OpenSSH 2.9.9 sshd(8) has sent fake keystoke echo packets for     traffic received on TTYs in echo-off mode, such as when entering a password into su(8) or sudo(8). This     bug rendered these fake keystroke echoes ineffective and could allow a passive observer of a SSH session     to once again detect when echo was off and obtain fairly limited timing information about keystrokes in     this situation (20ms granularity by default). This additional implication of the bug was identified by     Jacky Wei En Kung, Daniel Hugenroth and Alastair Beresford and we thank them for their detailed analysis.\n    This bug does not affect connections when ObscureKeystrokeTiming was disabled or sessions where no TTY was     requested. (openssh-9.8-1)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSH version 9.8 or later.",
            "cve": "CVE-2024-6387",
            "cvss3": "8.1",
            "cvss2": "7.6",
            "see_also": "https://www.openssh.com/txt/release-9.8",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_9.0\nInstalled version : 9.0\nFixed version     : 9.8p1 / 9.8"
        },
        {
            "file_no": 0,
            "ip": "10.27.11.104",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-3NWR053/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.11.104",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-3NWR053/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-3NWR053/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.11.103",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-3NWQ053/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.11.103",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-3NWQ053/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-3NWQ053/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.11.101",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-4MFV053/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.11.101",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-4MFV053/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-4MFV053/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.11.6",
            "system": "Microsoft Windows Server 2012 R2",
            "os": "windows",
            "pluginid": "58453",
            "pluginname": "Terminal Services Doesn't Use Network Level Authentication (NLA) Only",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote Terminal Services is not configured to use Network Level Authentication (NLA) only. NLA uses the Credential Security Support Provider (CredSSP) protocol to perform strong server authentication either through TLS/SSL or Kerberos mechanisms, which protect against man-in-the-middle attacks. In addition to improving authentication, NLA also helps protect the remote computer from malicious users and software by completing user authentication before a full RDP connection is established.",
            "solution": "Enable Network Level Authentication (NLA) on the remote RDP server. This is generally done on the 'Remote' tab of the 'System' settings on Windows.",
            "cve": "",
            "cvss3": "4.0",
            "cvss2": "4.3",
            "see_also": "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc732713(v=ws.11)\nhttp://www.nessus.org/u?e2628096",
            "plugin_output": "Nessus was able to negotiate non-NLA (Network Level Authentication) security."
        },
        {
            "file_no": 0,
            "ip": "10.27.11.1",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.11.1",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.11.1",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=CA/L=95014/O=Arcsight/OU=ESM/CN=acsi-sl-091"
        },
        {
            "file_no": 0,
            "ip": "10.27.11.1",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=CA/L=95014/O=Arcsight/OU=ESM/CN=acsi-sl-091\n|-Issuer  : C=US/ST=CA/L=95014/O=Arcsight/OU=ESM/CN=acsi-sl-091"
        },
        {
            "file_no": 0,
            "ip": "10.27.10.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.10.5",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.10.5",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.10.5",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.10.5",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.10.5",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "58453",
            "pluginname": "Terminal Services Doesn't Use Network Level Authentication (NLA) Only",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote Terminal Services is not configured to use Network Level Authentication (NLA) only. NLA uses the Credential Security Support Provider (CredSSP) protocol to perform strong server authentication either through TLS/SSL or Kerberos mechanisms, which protect against man-in-the-middle attacks. In addition to improving authentication, NLA also helps protect the remote computer from malicious users and software by completing user authentication before a full RDP connection is established.",
            "solution": "Enable Network Level Authentication (NLA) on the remote RDP server. This is generally done on the 'Remote' tab of the 'System' settings on Windows.",
            "cve": "",
            "cvss3": "4.0",
            "cvss2": "4.3",
            "see_also": "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc732713(v=ws.11)\nhttp://www.nessus.org/u?e2628096",
            "plugin_output": "Nessus was able to negotiate non-NLA (Network Level Authentication) security."
        },
        {
            "file_no": 0,
            "ip": "10.27.10.5",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=acsi-sw-081"
        },
        {
            "file_no": 0,
            "ip": "10.27.10.5",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=acsi-sw-081\n|-Issuer  : CN=acsi-sw-081"
        },
        {
            "file_no": 0,
            "ip": "10.27.10.4",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.10.4",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.10.4",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.10.4",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.10.4",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "58453",
            "pluginname": "Terminal Services Doesn't Use Network Level Authentication (NLA) Only",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote Terminal Services is not configured to use Network Level Authentication (NLA) only. NLA uses the Credential Security Support Provider (CredSSP) protocol to perform strong server authentication either through TLS/SSL or Kerberos mechanisms, which protect against man-in-the-middle attacks. In addition to improving authentication, NLA also helps protect the remote computer from malicious users and software by completing user authentication before a full RDP connection is established.",
            "solution": "Enable Network Level Authentication (NLA) on the remote RDP server. This is generally done on the 'Remote' tab of the 'System' settings on Windows.",
            "cve": "",
            "cvss3": "4.0",
            "cvss2": "4.3",
            "see_also": "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc732713(v=ws.11)\nhttp://www.nessus.org/u?e2628096",
            "plugin_output": "Nessus was able to negotiate non-NLA (Network Level Authentication) security."
        },
        {
            "file_no": 0,
            "ip": "10.27.10.4",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=acsi-sw-080"
        },
        {
            "file_no": 0,
            "ip": "10.27.10.4",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=acsi-sw-080\n|-Issuer  : CN=acsi-sw-080"
        },
        {
            "file_no": 0,
            "ip": "10.27.10.2",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.10.2",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.10.2",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.10.2",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.10.2",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "58453",
            "pluginname": "Terminal Services Doesn't Use Network Level Authentication (NLA) Only",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote Terminal Services is not configured to use Network Level Authentication (NLA) only. NLA uses the Credential Security Support Provider (CredSSP) protocol to perform strong server authentication either through TLS/SSL or Kerberos mechanisms, which protect against man-in-the-middle attacks. In addition to improving authentication, NLA also helps protect the remote computer from malicious users and software by completing user authentication before a full RDP connection is established.",
            "solution": "Enable Network Level Authentication (NLA) on the remote RDP server. This is generally done on the 'Remote' tab of the 'System' settings on Windows.",
            "cve": "",
            "cvss3": "4.0",
            "cvss2": "4.3",
            "see_also": "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc732713(v=ws.11)\nhttp://www.nessus.org/u?e2628096",
            "plugin_output": "Nessus was able to negotiate non-NLA (Network Level Authentication) security."
        },
        {
            "file_no": 0,
            "ip": "10.27.10.2",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=acsi-sw-045"
        },
        {
            "file_no": 0,
            "ip": "10.27.10.2",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=acsi-sw-045\n|-Issuer  : CN=acsi-sw-045"
        },
        {
            "file_no": 0,
            "ip": "10.27.10.1",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.10.1",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.10.1",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.10.1",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.10.1",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "58453",
            "pluginname": "Terminal Services Doesn't Use Network Level Authentication (NLA) Only",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote Terminal Services is not configured to use Network Level Authentication (NLA) only. NLA uses the Credential Security Support Provider (CredSSP) protocol to perform strong server authentication either through TLS/SSL or Kerberos mechanisms, which protect against man-in-the-middle attacks. In addition to improving authentication, NLA also helps protect the remote computer from malicious users and software by completing user authentication before a full RDP connection is established.",
            "solution": "Enable Network Level Authentication (NLA) on the remote RDP server. This is generally done on the 'Remote' tab of the 'System' settings on Windows.",
            "cve": "",
            "cvss3": "4.0",
            "cvss2": "4.3",
            "see_also": "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc732713(v=ws.11)\nhttp://www.nessus.org/u?e2628096",
            "plugin_output": "Nessus was able to negotiate non-NLA (Network Level Authentication) security."
        },
        {
            "file_no": 0,
            "ip": "10.27.10.1",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=acsi-sw-044"
        },
        {
            "file_no": 0,
            "ip": "10.27.10.1",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=acsi-sw-044\n|-Issuer  : CN=acsi-sw-044"
        },
        {
            "file_no": 0,
            "ip": "10.27.9.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.9.2",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=X1020/O=Imperva Inc./C=US/ST=California/L=Foster City"
        },
        {
            "file_no": 0,
            "ip": "10.27.9.2",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=X1020/O=Imperva Inc./C=US/ST=California/L=Foster City\n|-Issuer  : CN=X1020/O=Imperva Inc./C=US/ST=California/L=Foster City"
        },
        {
            "file_no": 0,
            "ip": "10.27.9.2",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.244",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "58453",
            "pluginname": "Terminal Services Doesn't Use Network Level Authentication (NLA) Only",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote Terminal Services is not configured to use Network Level Authentication (NLA) only. NLA uses the Credential Security Support Provider (CredSSP) protocol to perform strong server authentication either through TLS/SSL or Kerberos mechanisms, which protect against man-in-the-middle attacks. In addition to improving authentication, NLA also helps protect the remote computer from malicious users and software by completing user authentication before a full RDP connection is established.",
            "solution": "Enable Network Level Authentication (NLA) on the remote RDP server. This is generally done on the 'Remote' tab of the 'System' settings on Windows.",
            "cve": "",
            "cvss3": "4.0",
            "cvss2": "4.3",
            "see_also": "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc732713(v=ws.11)\nhttp://www.nessus.org/u?e2628096",
            "plugin_output": "Nessus was able to negotiate non-NLA (Network Level Authentication) security."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.244",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.244",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.244",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.244",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.244",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.244",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.244",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=acsi-sw-097"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.244",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=Cloudbase-Init WinRM"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.244",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=acsi-sw-097\n|-Issuer  : CN=acsi-sw-097"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.244",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=Cloudbase-Init WinRM\n|-Issuer  : CN=Cloudbase-Init WinRM"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.244",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "35291",
            "pluginname": "SSL Certificate Signed Using Weak Hashing Algorithm",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote service uses an SSL certificate chain that has been signed using a cryptographically weak hashing algorithm (e.g. MD2, MD4, MD5, or SHA1). These signature algorithms are known to be vulnerable to collision attacks. An attacker can exploit this to generate another certificate with the same digital signature, allowing an attacker to masquerade as the affected service.\n\nNote that this plugin reports all SSL certificate chains signed with SHA-1 that expire after January 1, 2017 as vulnerable. This is in accordance with Google's gradual sunsetting of the SHA-1 cryptographic hash algorithm.\n\nNote that certificates in the chain that are contained in the Nessus CA database (known_CA.inc) have been ignored.",
            "solution": "Contact the Certificate Authority to have the SSL certificate reissued.",
            "cve": "CVE-2004-2761",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://tools.ietf.org/html/rfc3279\nhttp://www.nessus.org/u?9bb87bf2\nhttp://www.nessus.org/u?e120eea1\nhttp://www.nessus.org/u?5d894816\nhttp://www.nessus.org/u?51db68aa\nhttp://www.nessus.org/u?9dc7bfba",
            "plugin_output": "The following certificates were part of the certificate chain sent by\nthe remote host, but contain hashes that are considered to be weak.\nSubject             : CN=Cloudbase-Init WinRM\nSignature Algorithm : SHA-1 With RSA Encryption\nValid From          : Sep 08 07:43:33 2020 GMT\nValid To            : Sep 07 07:43:33 2030 GMT\nRaw PEM certificate :\n-----BEGIN CERTIFICATE-----\nMIICxjCCAa6gAwIBAgIQaTn6T4uTgrhL4UX1xNwY6TANBgkqhkiG9w0BAQUFADAfMR0wGwYDVQQDExRDbG91ZGJhc2UtSW5pdCBXaW5STTAeFw0yMDA5MDgwNzQzMzNaFw0zMDA5MDcwNzQzMzNaMB8xHTAbBgNVBAMTFENsb3VkYmFzZS1Jbml0IFdpblJNMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvULtdLsobzpRry4CJjTq5XAUBrKwVstB/b3RfFXYxlmY9Li8hd+GLrtbVTyu6W7L41YrzZgGbKhe8awUY8qTQJqc5MHy/kb/Hm4edOlufzcZTB4R9/fEhdYWM5cs0rfzAAKYVaT7P3Ca1mwknJ99edu0/xI+GQxsEI8yekytEGZbo/sfl82g+qDHnJCLLWyGW977nQ6gScZ2PluobBMt2fAehb5afssVoH4MMNIaaWqXVoIg+mxUq/DL3/EQieGAhpSvZuysjx4Us1xWxkPSLuSldX7nT4VhfSrN0otj5ORPHPur+7ypW6pdzAVSAKbzuNEVtqGjd+tNAqc+I/QmbQIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQBeG12omrbftm9A1qezQDtVaTtOXOUKhn2PKBaQHkgdZLhJJIlITTaumojLZu/rjiA0WWd5f6GW9yxjnOCOIn/iQk63u6BTk4uOO+e8OBXUgol4FkAAL8BjBEHSpZcrF0+7uePXvmMxgS/TdVUJ5AkVGddgnYdL95etKlfmBl5kry1C0QQ43fddykPoXUhH4HHkRliiomiinxcCud6EKSu7RA7ccwedcqNbbvgox9S2yMMyeYK1DVq7V13LOTek7HvJRYMs9ctaZcpbvwuix/r8PrhnLXovBeesqVP90LZEgCqkhOU5Qg99UVc/7cohLLVrRnQWP2ImxyAx4w+ypSyb\n-----END CERTIFICATE-----"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.244",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The ICMP timestamps seem to be in little endian format (not in network format)\nThe difference between the local and remote clocks is 11 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.220",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-1C4P554/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.220",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-1C4P554/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-1C4P554/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.219",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-2C4P554/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.219",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-2C4P554/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-2C4P554/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.218",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-3C4P554/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.218",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-3C4P554/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-3C4P554/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.217",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-4C4P554/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.217",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-4C4P554/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-4C4P554/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.216",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-5C4P554/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.216",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-5C4P554/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-5C4P554/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.215",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-6C4P554/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.215",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-6C4P554/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-6C4P554/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.214",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-7C4P554/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.214",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-7C4P554/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-7C4P554/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.213",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-8C4P554/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.213",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-8C4P554/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-8C4P554/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.210",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.209",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.208",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.207",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "6443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.207",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.207",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "6443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=kube-apiserver\n|-Issuer  : CN=kubernetes"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.207",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=kube-apiserver\n|-Issuer  : CN=kubernetes"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.207",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.206",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.205",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "6443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.205",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.205",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "6443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=kube-apiserver\n|-Issuer  : CN=kubernetes"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.205",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=kube-apiserver\n|-Issuer  : CN=kubernetes"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.205",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.204",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.203",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "207060",
            "pluginname": "Kibana 8.10.x < 8.15.1 (ESA-2024-28)",
            "hostname": "",
            "port": "5601",
            "protocol": "tcp",
            "severity": "4",
            "description": "The version of Kibana installed on the remote host is prior to 8.15.1. It is, therefore, affected by a vulnerability as referenced in the ESA-2024-28 advisory.\n\n  - A deserialization issue in Kibana can lead to arbitrary code execution when Kibana attempts to parse a     YAML document containing a crafted payload.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Kibana version 8.15.1 or later.",
            "cve": "CVE-2024-37285",
            "cvss3": "9.1",
            "cvss2": "9.0",
            "see_also": "http://www.nessus.org/u?195c402a",
            "plugin_output": "URL               : http://10.27.8.203:5601/\nInstalled version : 8.14.3\nFixed version     : 8.15.1"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.203",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "9200",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=es02\n|-Issuer  : CN=Elastic Certificate Tool Autogenerated CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.203",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "9204",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=es06\n|-Issuer  : CN=Elastic Certificate Tool Autogenerated CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.203",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "9207",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=es09\n|-Issuer  : CN=Elastic Certificate Tool Autogenerated CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.203",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "9202",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=es04\n|-Issuer  : CN=Elastic Certificate Tool Autogenerated CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.203",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "9206",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=es08\n|-Issuer  : CN=Elastic Certificate Tool Autogenerated CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.203",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "9205",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=es07\n|-Issuer  : CN=Elastic Certificate Tool Autogenerated CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.203",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "9203",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=es05\n|-Issuer  : CN=Elastic Certificate Tool Autogenerated CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.203",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "9201",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=es03\n|-Issuer  : CN=Elastic Certificate Tool Autogenerated CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.203",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.199",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=California/L=San Jose/O=Super Micro Computer/OU=Software/CN=IPMI/E=support@supermicro.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.199",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "623",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=California/L=San Jose/O=Super Micro Computer/OU=Software/CN=IPMI/E=support@supermicro.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.199",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=California/L=San Jose/O=Super Micro Computer/OU=Software/CN=IPMI/E=support@supermicro.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.199",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=California/L=San Jose/O=Super Micro Computer/OU=Software/CN=IPMI/E=support@supermicro.com\n|-Issuer  : C=US/ST=California/L=San Jose/O=Super Micro Computer/OU=Software/CN=IPMI/E=support@supermicro.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.199",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "623",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=California/L=San Jose/O=Super Micro Computer/OU=Software/CN=IPMI/E=support@supermicro.com\n|-Issuer  : C=US/ST=California/L=San Jose/O=Super Micro Computer/OU=Software/CN=IPMI/E=support@supermicro.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.199",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=California/L=San Jose/O=Super Micro Computer/OU=Software/CN=IPMI/E=support@supermicro.com\n|-Issuer  : C=US/ST=California/L=San Jose/O=Super Micro Computer/OU=Software/CN=IPMI/E=support@supermicro.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.199",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.198",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=California/L=San Jose/O=Super Micro Computer/OU=Software/CN=IPMI/E=support@supermicro.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.198",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=California/L=San Jose/O=Super Micro Computer/OU=Software/CN=IPMI/E=support@supermicro.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.198",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "623",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=California/L=San Jose/O=Super Micro Computer/OU=Software/CN=IPMI/E=support@supermicro.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.198",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=California/L=San Jose/O=Super Micro Computer/OU=Software/CN=IPMI/E=support@supermicro.com\n|-Issuer  : C=US/ST=California/L=San Jose/O=Super Micro Computer/OU=Software/CN=IPMI/E=support@supermicro.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.198",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=California/L=San Jose/O=Super Micro Computer/OU=Software/CN=IPMI/E=support@supermicro.com\n|-Issuer  : C=US/ST=California/L=San Jose/O=Super Micro Computer/OU=Software/CN=IPMI/E=support@supermicro.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.198",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "623",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=California/L=San Jose/O=Super Micro Computer/OU=Software/CN=IPMI/E=support@supermicro.com\n|-Issuer  : C=US/ST=California/L=San Jose/O=Super Micro Computer/OU=Software/CN=IPMI/E=support@supermicro.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.198",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.197",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.197",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.197",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.197",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.197/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.197",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.197/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.196",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.196",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.196",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.196",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.196/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.196",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.196/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.195",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.195",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.195",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.195",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.195/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.195",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.195/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.194",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.194",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.194",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.194",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.194/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.194",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.194/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.193",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.193",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.193",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.193",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.193/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.193",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.193/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.192",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.192",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.192",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.192",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.192/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.192",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.192/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.191",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.191",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.191",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.191",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.191/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.191",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.191/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.190",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.190",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.190",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.190",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.190/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.190",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.190/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.189",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.189",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.189",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.189",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.189/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.189",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.189/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.188",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.188",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.188",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.188",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.188/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.188",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.188/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.187",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.187",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.187",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.187",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.187/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.187",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.187/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.186",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.186",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.186",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.186",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.186/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.186",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.186/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.185",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.185",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.185",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.185",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.185/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.185",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.185/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.184",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.184",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.184",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.184",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.184/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.184",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.184/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.183",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.183",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.183",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.183",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.183/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.183",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.183/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.182",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.182",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.182",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.182",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.182/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.182",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.182/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.181",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.181",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.181",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.181",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.181/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.181",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.181/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.180",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.180",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.180",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.180",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.180/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.180",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.180/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.179",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.179",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.179",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.179",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.179/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.179",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.179/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.178",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.178",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.178",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.178",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.178/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.178",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.178/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.177",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.177",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.177",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.177",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.177/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.177",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.177/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.175",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.175",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.175",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.175",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.175/\nInstalled version : iDRAC9 with firmware 5.00.10.10.01\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.175",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "162428",
            "pluginname": "Dell EMC iDRAC8 < 2.83.83.83 / Dell EMC iDRAC9 < 5.10.30.00 (DSA-2022-154)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is prior to 2.83.83.83/5.10.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-154 advisory.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.83.83.83 or later. Upgrade to Dell EMC iDRAC9 version 5.10.30.00 or later.",
            "cve": "CVE-2022-0778",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?a6cd5095",
            "plugin_output": "URL               : https://10.27.8.175/\nInstalled version : iDRAC9 with firmware 5.00.10.10.01\nFixed version     : iDRAC9 with firmware 5.10.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.175",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.175/\nInstalled version : iDRAC9 with firmware 5.00.10.10.01\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.174",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.174",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.174",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.174",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.174/\nInstalled version : iDRAC9 with firmware 5.00.10.10.01\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.174",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "162428",
            "pluginname": "Dell EMC iDRAC8 < 2.83.83.83 / Dell EMC iDRAC9 < 5.10.30.00 (DSA-2022-154)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is prior to 2.83.83.83/5.10.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-154 advisory.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.83.83.83 or later. Upgrade to Dell EMC iDRAC9 version 5.10.30.00 or later.",
            "cve": "CVE-2022-0778",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?a6cd5095",
            "plugin_output": "URL               : https://10.27.8.174/\nInstalled version : iDRAC9 with firmware 5.00.10.10.01\nFixed version     : iDRAC9 with firmware 5.10.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.174",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.174/\nInstalled version : iDRAC9 with firmware 5.00.10.10.01\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.173",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.173",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.173",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.173",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.173/\nInstalled version : iDRAC9 with firmware 5.00.10.10.01\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.173",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "162428",
            "pluginname": "Dell EMC iDRAC8 < 2.83.83.83 / Dell EMC iDRAC9 < 5.10.30.00 (DSA-2022-154)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is prior to 2.83.83.83/5.10.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-154 advisory.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.83.83.83 or later. Upgrade to Dell EMC iDRAC9 version 5.10.30.00 or later.",
            "cve": "CVE-2022-0778",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?a6cd5095",
            "plugin_output": "URL               : https://10.27.8.173/\nInstalled version : iDRAC9 with firmware 5.00.10.10.01\nFixed version     : iDRAC9 with firmware 5.10.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.173",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.173/\nInstalled version : iDRAC9 with firmware 5.00.10.10.01\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.172",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.172",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.172",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.172",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Mar 24 09:11:51 2016 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.172",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "69551",
            "pluginname": "SSL Certificate Chain Contains RSA Keys Less Than 2048 bits",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "At least one of the X.509 certificates sent by the remote host has a key that is shorter than 2048 bits. According to industry standards set by the Certification Authority/Browser (CA/B) Forum, certificates issued after January 1, 2014 must be at least 2048 bits.\n\nSome browser SSL implementations may reject keys less than 2048 bits after January 1, 2014. Additionally, some SSL certificate vendors may revoke certificates less than 2048 bits before January 1, 2014.\n\nNote that Nessus will not flag root certificates with RSA keys less than 2048 bits if they were issued prior to December 31, 2010, as the standard considers them exempt.",
            "solution": "Replace the certificate in the chain with the RSA key less than 2048 bits in length with a longer key, and reissue any certificates signed by the old certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "https://www.cabforum.org/wp-content/uploads/Baseline_Requirements_V1.pdf",
            "plugin_output": "The following certificates were part of the certificate chain\nsent by the remote host, but contain RSA keys that are considered\nto be weak :\n|-Subject        : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-RSA Key Length : 1024 bits"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.172",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Apr 20 09:11:51 2011 GMT\nNot valid after  : Mar 24 09:11:51 2016 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.172",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.171",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.171",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.171",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.171",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Mar 24 09:11:51 2016 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.171",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "69551",
            "pluginname": "SSL Certificate Chain Contains RSA Keys Less Than 2048 bits",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "At least one of the X.509 certificates sent by the remote host has a key that is shorter than 2048 bits. According to industry standards set by the Certification Authority/Browser (CA/B) Forum, certificates issued after January 1, 2014 must be at least 2048 bits.\n\nSome browser SSL implementations may reject keys less than 2048 bits after January 1, 2014. Additionally, some SSL certificate vendors may revoke certificates less than 2048 bits before January 1, 2014.\n\nNote that Nessus will not flag root certificates with RSA keys less than 2048 bits if they were issued prior to December 31, 2010, as the standard considers them exempt.",
            "solution": "Replace the certificate in the chain with the RSA key less than 2048 bits in length with a longer key, and reissue any certificates signed by the old certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "https://www.cabforum.org/wp-content/uploads/Baseline_Requirements_V1.pdf",
            "plugin_output": "The following certificates were part of the certificate chain\nsent by the remote host, but contain RSA keys that are considered\nto be weak :\n|-Subject        : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-RSA Key Length : 1024 bits"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.171",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Apr 20 09:11:51 2011 GMT\nNot valid after  : Mar 24 09:11:51 2016 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.171",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.170",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.170",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.170",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.170",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Mar 24 09:11:51 2016 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.170",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "69551",
            "pluginname": "SSL Certificate Chain Contains RSA Keys Less Than 2048 bits",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "At least one of the X.509 certificates sent by the remote host has a key that is shorter than 2048 bits. According to industry standards set by the Certification Authority/Browser (CA/B) Forum, certificates issued after January 1, 2014 must be at least 2048 bits.\n\nSome browser SSL implementations may reject keys less than 2048 bits after January 1, 2014. Additionally, some SSL certificate vendors may revoke certificates less than 2048 bits before January 1, 2014.\n\nNote that Nessus will not flag root certificates with RSA keys less than 2048 bits if they were issued prior to December 31, 2010, as the standard considers them exempt.",
            "solution": "Replace the certificate in the chain with the RSA key less than 2048 bits in length with a longer key, and reissue any certificates signed by the old certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "https://www.cabforum.org/wp-content/uploads/Baseline_Requirements_V1.pdf",
            "plugin_output": "The following certificates were part of the certificate chain\nsent by the remote host, but contain RSA keys that are considered\nto be weak :\n|-Subject        : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-RSA Key Length : 1024 bits"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.170",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Apr 20 09:11:51 2011 GMT\nNot valid after  : Mar 24 09:11:51 2016 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.170",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.170",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 2620 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.169",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.169",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Feb 24 09:11:35 2022 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.169",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Feb 24 09:11:35 2017 GMT\nNot valid after  : Feb 24 09:11:35 2022 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.169",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.169",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 4661 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.168",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.168",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Feb 24 09:11:35 2022 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.168",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Feb 24 09:11:35 2017 GMT\nNot valid after  : Feb 24 09:11:35 2022 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.168",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.168",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 3858 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.167",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.167",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Feb 24 09:11:35 2022 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.167",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Feb 24 09:11:35 2017 GMT\nNot valid after  : Feb 24 09:11:35 2022 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.167",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.167",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 3208 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.166",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.166",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Feb 24 09:11:35 2022 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.166",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Feb 24 09:11:35 2017 GMT\nNot valid after  : Feb 24 09:11:35 2022 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.166",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.166",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 3147 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.165",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.165",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Feb 24 09:11:35 2022 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.165",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Feb 24 09:11:35 2017 GMT\nNot valid after  : Feb 24 09:11:35 2022 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.165",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.165",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 2714 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.164",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.164",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.164",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Feb 24 09:11:35 2022 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.164",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Feb 24 09:11:35 2017 GMT\nNot valid after  : Feb 24 09:11:35 2022 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.164",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.163",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.163",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Feb 24 09:11:35 2022 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.163",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Feb 24 09:11:35 2017 GMT\nNot valid after  : Feb 24 09:11:35 2022 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.163",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.163",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 4091 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.162",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.162",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Feb 24 09:11:35 2022 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.162",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Feb 24 09:11:35 2017 GMT\nNot valid after  : Feb 24 09:11:35 2022 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.162",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.162",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 3243 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.161",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.161",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.161",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Feb 24 09:11:35 2022 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.161",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Feb 24 09:11:35 2017 GMT\nNot valid after  : Feb 24 09:11:35 2022 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.161",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.160",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.160",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.160",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Feb 24 09:11:35 2022 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.160",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Feb 24 09:11:35 2017 GMT\nNot valid after  : Feb 24 09:11:35 2022 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.160",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.159",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.159",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.159",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Feb 24 09:11:35 2022 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.159",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Feb 24 09:11:35 2017 GMT\nNot valid after  : Feb 24 09:11:35 2022 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.159",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.158",
            "system": "",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/O=American Megatrends Incorporated/OU=Service Processors/L=Norcross/ST=Georgia/CN=www.ami.com/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.158",
            "system": "",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/O=American Megatrends Incorporated/OU=Service Processors/L=Norcross/ST=Georgia/CN=www.ami.com/E=support@ami.com\n|-Issuer  : C=US/O=American Megatrends Incorporated/OU=Service Processors/L=Norcross/ST=Georgia/CN=www.ami.com/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.158",
            "system": "",
            "os": "linux",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.158",
            "system": "",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 66 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.157",
            "system": "",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/O=American Megatrends Incorporated/OU=Service Processors/L=Norcross/ST=Georgia/CN=www.ami.com/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.157",
            "system": "",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/O=American Megatrends Incorporated/OU=Service Processors/L=Norcross/ST=Georgia/CN=www.ami.com/E=support@ami.com\n|-Issuer  : C=US/O=American Megatrends Incorporated/OU=Service Processors/L=Norcross/ST=Georgia/CN=www.ami.com/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.157",
            "system": "",
            "os": "linux",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.157",
            "system": "",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 634 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.156",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.156",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.156",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/O=American Megatrends Incorporated/OU=Service Processors/L=Norcross/ST=Georgia/CN=www.ami.com/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.156",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/O=American Megatrends Incorporated/OU=Service Processors/L=Norcross/ST=Georgia/CN=www.ami.com/E=support@ami.com\n|-Issuer  : C=US/O=American Megatrends Incorporated/OU=Service Processors/L=Norcross/ST=Georgia/CN=www.ami.com/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.156",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.156",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 767 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.155",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.155",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.155",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/O=American Megatrends Incorporated/OU=Service Processors/L=Norcross/ST=Georgia/CN=www.ami.com/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.155",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/O=American Megatrends Incorporated/OU=Service Processors/L=Norcross/ST=Georgia/CN=www.ami.com/E=support@ami.com\n|-Issuer  : C=US/O=American Megatrends Incorporated/OU=Service Processors/L=Norcross/ST=Georgia/CN=www.ami.com/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.155",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.155",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 577 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.154",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.154",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.154",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/O=American Megatrends Incorporated/OU=Service Processors/L=Norcross/ST=Georgia/CN=www.ami.com/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.154",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/O=American Megatrends Incorporated/OU=Service Processors/L=Norcross/ST=Georgia/CN=www.ami.com/E=support@ami.com\n|-Issuer  : C=US/O=American Megatrends Incorporated/OU=Service Processors/L=Norcross/ST=Georgia/CN=www.ami.com/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.154",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.154",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 695 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.153",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.153",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.153",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/O=American Megatrends Incorporated/OU=Service Processors/L=Norcross/ST=Georgia/CN=www.ami.com/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.153",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/O=American Megatrends Incorporated/OU=Service Processors/L=Norcross/ST=Georgia/CN=www.ami.com/E=support@ami.com\n|-Issuer  : C=US/O=American Megatrends Incorporated/OU=Service Processors/L=Norcross/ST=Georgia/CN=www.ami.com/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.153",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.153",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 577 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.152",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.152",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.152",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.152",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Mar 24 09:11:51 2016 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.152",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "69551",
            "pluginname": "SSL Certificate Chain Contains RSA Keys Less Than 2048 bits",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "At least one of the X.509 certificates sent by the remote host has a key that is shorter than 2048 bits. According to industry standards set by the Certification Authority/Browser (CA/B) Forum, certificates issued after January 1, 2014 must be at least 2048 bits.\n\nSome browser SSL implementations may reject keys less than 2048 bits after January 1, 2014. Additionally, some SSL certificate vendors may revoke certificates less than 2048 bits before January 1, 2014.\n\nNote that Nessus will not flag root certificates with RSA keys less than 2048 bits if they were issued prior to December 31, 2010, as the standard considers them exempt.",
            "solution": "Replace the certificate in the chain with the RSA key less than 2048 bits in length with a longer key, and reissue any certificates signed by the old certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "https://www.cabforum.org/wp-content/uploads/Baseline_Requirements_V1.pdf",
            "plugin_output": "The following certificates were part of the certificate chain\nsent by the remote host, but contain RSA keys that are considered\nto be weak :\n|-Subject        : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-RSA Key Length : 1024 bits"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.152",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Apr 20 09:11:51 2011 GMT\nNot valid after  : Mar 24 09:11:51 2016 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.152",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.152",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.151",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.151",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.151",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.151",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Mar 24 09:11:51 2016 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.151",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "69551",
            "pluginname": "SSL Certificate Chain Contains RSA Keys Less Than 2048 bits",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "At least one of the X.509 certificates sent by the remote host has a key that is shorter than 2048 bits. According to industry standards set by the Certification Authority/Browser (CA/B) Forum, certificates issued after January 1, 2014 must be at least 2048 bits.\n\nSome browser SSL implementations may reject keys less than 2048 bits after January 1, 2014. Additionally, some SSL certificate vendors may revoke certificates less than 2048 bits before January 1, 2014.\n\nNote that Nessus will not flag root certificates with RSA keys less than 2048 bits if they were issued prior to December 31, 2010, as the standard considers them exempt.",
            "solution": "Replace the certificate in the chain with the RSA key less than 2048 bits in length with a longer key, and reissue any certificates signed by the old certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "https://www.cabforum.org/wp-content/uploads/Baseline_Requirements_V1.pdf",
            "plugin_output": "The following certificates were part of the certificate chain\nsent by the remote host, but contain RSA keys that are considered\nto be weak :\n|-Subject        : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-RSA Key Length : 1024 bits"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.151",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Apr 20 09:11:51 2011 GMT\nNot valid after  : Mar 24 09:11:51 2016 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.151",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.151",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.145",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "20007",
            "pluginname": "SSL Version 2 and 3 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote service accepts connections encrypted using SSL 2.0 and/or SSL 3.0. These versions of SSL are affected by several cryptographic flaws, including:\n\n  - An insecure padding scheme with CBC ciphers.\n\n  - Insecure session renegotiation and resumption schemes.\n\nAn attacker can exploit these flaws to conduct man-in-the-middle attacks or to decrypt communications between the affected service and clients.\n\nAlthough SSL/TLS has a secure means for choosing the highest supported version of the protocol (so that these versions will be used only if the client or server support nothing better), many web browsers implement this in an unsafe way that allows an attacker to downgrade a connection (such as in POODLE). Therefore, it is recommended that these protocols be disabled entirely.\n\nNIST has determined that SSL 3.0 is no longer acceptable for secure communications. As of the date of enforcement found in PCI DSS v3.1, any version of SSL will not meet the PCI SSC's definition of 'strong cryptography'.",
            "solution": "Consult the application's documentation to disable SSL 2.0 and 3.0.\nUse TLS 1.2 (with approved cipher suites) or higher instead.",
            "cve": "",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "https://www.schneier.com/academic/paperfiles/paper-ssl.pdf\nhttp://www.nessus.org/u?b06c7e95\nhttp://www.nessus.org/u?247c4540\nhttps://www.openssl.org/~bodo/ssl-poodle.pdf\nhttp://www.nessus.org/u?5d15ba70\nhttps://www.imperialviolet.org/2014/10/14/poodle.html\nhttps://tools.ietf.org/html/rfc7507\nhttps://tools.ietf.org/html/rfc7568",
            "plugin_output": "- SSLv3 is enabled and the server supports at least one cipher.\nExplanation: TLS 1.0 and SSL 3.0 cipher suites may be used with SSLv3\nMedium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                                   RSA           RSA      3DES-CBC(168)          SHA1\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nAES128-SHA                                     RSA           RSA      AES-CBC(128)           SHA1\nAES256-SHA                                     RSA           RSA      AES-CBC(256)           SHA1\nRC4-MD5                                        RSA           RSA      RC4(128)               MD5\nRC4-SHA                                        RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.145",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.145",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.145",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.145",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.145",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Mar 24 09:11:51 2016 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.145",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "69551",
            "pluginname": "SSL Certificate Chain Contains RSA Keys Less Than 2048 bits",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "At least one of the X.509 certificates sent by the remote host has a key that is shorter than 2048 bits. According to industry standards set by the Certification Authority/Browser (CA/B) Forum, certificates issued after January 1, 2014 must be at least 2048 bits.\n\nSome browser SSL implementations may reject keys less than 2048 bits after January 1, 2014. Additionally, some SSL certificate vendors may revoke certificates less than 2048 bits before January 1, 2014.\n\nNote that Nessus will not flag root certificates with RSA keys less than 2048 bits if they were issued prior to December 31, 2010, as the standard considers them exempt.",
            "solution": "Replace the certificate in the chain with the RSA key less than 2048 bits in length with a longer key, and reissue any certificates signed by the old certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "https://www.cabforum.org/wp-content/uploads/Baseline_Requirements_V1.pdf",
            "plugin_output": "The following certificates were part of the certificate chain\nsent by the remote host, but contain RSA keys that are considered\nto be weak :\n|-Subject        : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-RSA Key Length : 1024 bits"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.145",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Apr 20 09:11:51 2011 GMT\nNot valid after  : Mar 24 09:11:51 2016 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.145",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.145",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 2247 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.144",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "78479",
            "pluginname": "SSLv3 Padding Oracle On Downgraded Legacy Encryption Vulnerability (POODLE)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "The remote host is affected by a man-in-the-middle (MitM) information disclosure vulnerability known as POODLE. The vulnerability is due to the way SSL 3.0 handles padding bytes when decrypting messages encrypted using block ciphers in cipher block chaining (CBC) mode.\nMitM attackers can decrypt a selected byte of a cipher text in as few as 256 tries if they are able to force a victim application to repeatedly send the same data over newly created SSL 3.0 connections.\n\nAs long as a client and service both support SSLv3, a connection can be 'rolled back' to SSLv3, even if TLSv1 or newer is supported by the client and service.\n\nThe TLS Fallback SCSV mechanism prevents 'version rollback' attacks without impacting legacy clients; however, it can only protect connections when the client and service support the mechanism. Sites that cannot disable SSLv3 immediately should enable this mechanism.\n\nThis is a vulnerability in the SSLv3 specification, not in any particular SSL implementation. Disabling SSLv3 is the only way to completely mitigate the vulnerability.",
            "solution": "Disable SSLv3.\n\nServices that must support SSLv3 should enable the TLS Fallback SCSV mechanism until SSLv3 can be disabled.",
            "cve": "CVE-2014-3566",
            "cvss3": "3.4",
            "cvss2": "4.3",
            "see_also": "https://www.imperialviolet.org/2014/10/14/poodle.html\nhttps://www.openssl.org/~bodo/ssl-poodle.pdf\nhttps://tools.ietf.org/html/draft-ietf-tls-downgrade-scsv-00",
            "plugin_output": "Nessus determined that the remote server supports SSLv3 with at least one CBC\ncipher suite, indicating that this server is vulnerable.\nIt appears that TLSv1 or newer is supported on the server. However, the\nFallback SCSV mechanism is not supported, allowing connections to be \"rolled\nback\" to SSLv3."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.144",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "20007",
            "pluginname": "SSL Version 2 and 3 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote service accepts connections encrypted using SSL 2.0 and/or SSL 3.0. These versions of SSL are affected by several cryptographic flaws, including:\n\n  - An insecure padding scheme with CBC ciphers.\n\n  - Insecure session renegotiation and resumption schemes.\n\nAn attacker can exploit these flaws to conduct man-in-the-middle attacks or to decrypt communications between the affected service and clients.\n\nAlthough SSL/TLS has a secure means for choosing the highest supported version of the protocol (so that these versions will be used only if the client or server support nothing better), many web browsers implement this in an unsafe way that allows an attacker to downgrade a connection (such as in POODLE). Therefore, it is recommended that these protocols be disabled entirely.\n\nNIST has determined that SSL 3.0 is no longer acceptable for secure communications. As of the date of enforcement found in PCI DSS v3.1, any version of SSL will not meet the PCI SSC's definition of 'strong cryptography'.",
            "solution": "Consult the application's documentation to disable SSL 2.0 and 3.0.\nUse TLS 1.2 (with approved cipher suites) or higher instead.",
            "cve": "",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "https://www.schneier.com/academic/paperfiles/paper-ssl.pdf\nhttp://www.nessus.org/u?b06c7e95\nhttp://www.nessus.org/u?247c4540\nhttps://www.openssl.org/~bodo/ssl-poodle.pdf\nhttp://www.nessus.org/u?5d15ba70\nhttps://www.imperialviolet.org/2014/10/14/poodle.html\nhttps://tools.ietf.org/html/rfc7507\nhttps://tools.ietf.org/html/rfc7568",
            "plugin_output": "- SSLv3 is enabled and the server supports at least one cipher.\nExplanation: TLS 1.0 and SSL 3.0 cipher suites may be used with SSLv3\nMedium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                                   RSA           RSA      3DES-CBC(168)          SHA1\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nAES128-SHA                                     RSA           RSA      AES-CBC(128)           SHA1\nAES256-SHA                                     RSA           RSA      AES-CBC(256)           SHA1\nRC4-MD5                                        RSA           RSA      RC4(128)               MD5\nRC4-SHA                                        RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.144",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.144",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.144",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.144",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.144",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Mar 24 09:11:51 2016 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.144",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "69551",
            "pluginname": "SSL Certificate Chain Contains RSA Keys Less Than 2048 bits",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "At least one of the X.509 certificates sent by the remote host has a key that is shorter than 2048 bits. According to industry standards set by the Certification Authority/Browser (CA/B) Forum, certificates issued after January 1, 2014 must be at least 2048 bits.\n\nSome browser SSL implementations may reject keys less than 2048 bits after January 1, 2014. Additionally, some SSL certificate vendors may revoke certificates less than 2048 bits before January 1, 2014.\n\nNote that Nessus will not flag root certificates with RSA keys less than 2048 bits if they were issued prior to December 31, 2010, as the standard considers them exempt.",
            "solution": "Replace the certificate in the chain with the RSA key less than 2048 bits in length with a longer key, and reissue any certificates signed by the old certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "https://www.cabforum.org/wp-content/uploads/Baseline_Requirements_V1.pdf",
            "plugin_output": "The following certificates were part of the certificate chain\nsent by the remote host, but contain RSA keys that are considered\nto be weak :\n|-Subject        : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-RSA Key Length : 1024 bits"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.144",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Apr 20 09:11:51 2011 GMT\nNot valid after  : Mar 24 09:11:51 2016 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.144",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.144",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 116 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.143",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "20007",
            "pluginname": "SSL Version 2 and 3 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote service accepts connections encrypted using SSL 2.0 and/or SSL 3.0. These versions of SSL are affected by several cryptographic flaws, including:\n\n  - An insecure padding scheme with CBC ciphers.\n\n  - Insecure session renegotiation and resumption schemes.\n\nAn attacker can exploit these flaws to conduct man-in-the-middle attacks or to decrypt communications between the affected service and clients.\n\nAlthough SSL/TLS has a secure means for choosing the highest supported version of the protocol (so that these versions will be used only if the client or server support nothing better), many web browsers implement this in an unsafe way that allows an attacker to downgrade a connection (such as in POODLE). Therefore, it is recommended that these protocols be disabled entirely.\n\nNIST has determined that SSL 3.0 is no longer acceptable for secure communications. As of the date of enforcement found in PCI DSS v3.1, any version of SSL will not meet the PCI SSC's definition of 'strong cryptography'.",
            "solution": "Consult the application's documentation to disable SSL 2.0 and 3.0.\nUse TLS 1.2 (with approved cipher suites) or higher instead.",
            "cve": "",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "https://www.schneier.com/academic/paperfiles/paper-ssl.pdf\nhttp://www.nessus.org/u?b06c7e95\nhttp://www.nessus.org/u?247c4540\nhttps://www.openssl.org/~bodo/ssl-poodle.pdf\nhttp://www.nessus.org/u?5d15ba70\nhttps://www.imperialviolet.org/2014/10/14/poodle.html\nhttps://tools.ietf.org/html/rfc7507\nhttps://tools.ietf.org/html/rfc7568",
            "plugin_output": "- SSLv3 is enabled and the server supports at least one cipher.\nExplanation: TLS 1.0 and SSL 3.0 cipher suites may be used with SSLv3\nMedium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                                   RSA           RSA      3DES-CBC(168)          SHA1\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nAES128-SHA                                     RSA           RSA      AES-CBC(128)           SHA1\nAES256-SHA                                     RSA           RSA      AES-CBC(256)           SHA1\nRC4-MD5                                        RSA           RSA      RC4(128)               MD5\nRC4-SHA                                        RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.143",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.143",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.143",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.143",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.143",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Mar 24 09:11:51 2016 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.143",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "69551",
            "pluginname": "SSL Certificate Chain Contains RSA Keys Less Than 2048 bits",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "At least one of the X.509 certificates sent by the remote host has a key that is shorter than 2048 bits. According to industry standards set by the Certification Authority/Browser (CA/B) Forum, certificates issued after January 1, 2014 must be at least 2048 bits.\n\nSome browser SSL implementations may reject keys less than 2048 bits after January 1, 2014. Additionally, some SSL certificate vendors may revoke certificates less than 2048 bits before January 1, 2014.\n\nNote that Nessus will not flag root certificates with RSA keys less than 2048 bits if they were issued prior to December 31, 2010, as the standard considers them exempt.",
            "solution": "Replace the certificate in the chain with the RSA key less than 2048 bits in length with a longer key, and reissue any certificates signed by the old certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "https://www.cabforum.org/wp-content/uploads/Baseline_Requirements_V1.pdf",
            "plugin_output": "The following certificates were part of the certificate chain\nsent by the remote host, but contain RSA keys that are considered\nto be weak :\n|-Subject        : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-RSA Key Length : 1024 bits"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.143",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Apr 20 09:11:51 2011 GMT\nNot valid after  : Mar 24 09:11:51 2016 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.143",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.143",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 959 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.140",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.140",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.140",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-9SY8Q03/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-9SY8Q03/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.140",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-9SY8Q03/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-9SY8Q03/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.140",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-9SY8Q03/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.140",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-9SY8Q03/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.140",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "135187",
            "pluginname": "Dell iDRAC Buffer Overflow Vulnerability (CVE-2020-5344)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote host is running iDRAC7 with a firmware version prior to 2.65.65.65, or iDRAC8 with a firmware version prior to 2.70.70.70, or iDRAC9 with a firmware version prior to 4.00.00.00 and is therefore affected by an buffer overflow vulnerability. An unauthenticated remote attacker may exploit this vulnerability to crash the affected process or execute arbitrary code on the system by sending specially crafted input data.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC7 firmware 2.65.65.65 or iDRAC8 firmware 2.70.70.70, or iDRAC9 firmware 4.00.00.00, or higher.",
            "cve": "CVE-2020-5344",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "http://www.nessus.org/u?5a6791ac",
            "plugin_output": "URL               : https://10.27.8.140/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.00.00.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.140",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "144756",
            "pluginname": "Dell iDRAC XSS (DSA-2020-268)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "Dell EMC iDRAC9 versions prior to 4.32.10.00 and 4.40.00.00 contain a reflected cross-site scripting vulnerability in the iDRAC9 web application. A remote attacker could potentially exploit this vulnerability to run malicious HTML or JavaScript in a victim’s browser by tricking a victim in to following a specially crafted link.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.32.10.00, 4.40.00.00 or later.",
            "cve": "CVE-2020-26198",
            "cvss3": "6.1",
            "cvss2": "4.3",
            "see_also": "http://www.nessus.org/u?2273d4ac",
            "plugin_output": "URL               : https://10.27.8.140/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.32.10.00, 4.40.00.00 or later"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.140",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "139206",
            "pluginname": "Dell iDRAC9 Directory Traversal (DSA-2020-128)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host is running iDRAC9 with a firmware version prior to 4.20.20.20. It is, therefore, affected by a directory traversal vulnerability due to insufficient validation of user input. An authenticated, remote attacker can exploit this, by sending a URI that contains directory traversal characters, to disclose the contents of files located outside of the server's restricted path. \n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.20.20.20 or higher.",
            "cve": "CVE-2020-5366",
            "cvss3": "6.5",
            "cvss2": "4.0",
            "see_also": "http://www.nessus.org/u?dbd53980",
            "plugin_output": "URL               : https://10.27.8.140/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.20.20.20"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.140",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "148956",
            "pluginname": "Dell iDRAC Multiple Vulnerabilities (DSA-2021-073)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "Dell EMC iDRAC9 versions prior to 4.40.00.00 contain multiple vulnerabilities: \n\n  - A Time-of-check Time-of-use (TOCTOU) race condition vulnerability. A remote authenticated attacker     may potentially exploit this vulnerability to gain elevated privileges when a user with higher privileges     is simultaneously accessing iDRAC through the web interface. (CVE-2021-21539)\n\n  - A stack-based overflow vulnerability. A remote authenticated attacker may potentially exploit this     vulnerability to overwrite configuration information by injecting arbitrarily large payload. (CVE-2021-21540)\n\n  - A DOM-based cross-site scripting vulnerability. A remote unauthenticated attacker may potentially exploit     this vulnerability by tricking a victim application user to supply malicious HTML or JavaScript code to DOM     environment in the browser. The malicious code is then executed by the web browser in the context of the     vulnerable web application. (CVE-2021-21541)\n\n  - Multiple stored cross-site scripting vulnerabilities. A remote authenticated malicious user with high privileges     may potentially exploit these vulnerabilities to store malicious HTML or JavaScript code through multiple affected     parameters. When victim users access the submitted data through their browsers, the malicious code gets executed     by the web browser in the context of the vulnerable application. (CVE-2021-21543)\n\n  - An improper authentication vulnerability. A remote authenticated malicious user with high privileges may potentially     exploit this vulnerability to manipulate the username field under the comment section and set the value to any user.\n    (CVE-2021-21544)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.40.00.00 or later.",
            "cve": "CVE-2021-21539",
            "cvss3": "8.1",
            "cvss2": "5.5",
            "see_also": "http://www.nessus.org/u?d3c31d3d",
            "plugin_output": "URL               : https://10.27.8.140/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.40.00.00 or later"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.140",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "148955",
            "pluginname": "Dell iDRAC XSS (DSA-2021-073)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "Dell EMC iDRAC9 versions prior to 4.40.10.00 contain a reflected cross-site scripting vulnerability in the iDRAC9 web application. A remote authenticated malicious user with high privileges may potentially exploit these vulnerabilities to store malicious HTML or JavaScript code through multiple affected while generating a certificate. When victim users access the submitted data through their browsers, the malicious code gets executed by the web browser in the context of the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.40.10.00 or later.",
            "cve": "CVE-2021-21542",
            "cvss3": "4.8",
            "cvss2": "3.5",
            "see_also": "http://www.nessus.org/u?d3c31d3d",
            "plugin_output": "URL               : https://10.27.8.140/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.40.10.00 or later"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.140",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "161800",
            "pluginname": "Dell EMC iDRAC9 < 5.00.00.00 (DSA-2021-177)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 5.00.00.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2021-177 advisory:\n\n  - iDRAC9 versions prior to 5.00.00.00 contain an improper input validation vulnerability. An unauthenticated     remote attacker may potentially exploit this vulnerability by sending a specially crafted malicious     request to crash the webserver or cause information disclosure. (CVE-2021-36300)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 5.00.00.00 or later.",
            "cve": "CVE-2021-36300",
            "cvss3": "8.2",
            "cvss2": "6.4",
            "see_also": "http://www.nessus.org/u?13d440ac",
            "plugin_output": "URL               : https://10.27.8.140/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 5.00.00.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.140",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.140/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.140",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "162428",
            "pluginname": "Dell EMC iDRAC8 < 2.83.83.83 / Dell EMC iDRAC9 < 5.10.30.00 (DSA-2022-154)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is prior to 2.83.83.83/5.10.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-154 advisory.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.83.83.83 or later. Upgrade to Dell EMC iDRAC9 version 5.10.30.00 or later.",
            "cve": "CVE-2022-0778",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?a6cd5095",
            "plugin_output": "URL               : https://10.27.8.140/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 5.10.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.140",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "161798",
            "pluginname": "Dell EMC iDRAC8 < 2.80.80.80 / Dell EMC iDRAC9 < 4.40.40.00 (DSA-2021-177)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is affected by a vulnerability as referenced in the DSA-2021-177 advisory:\n\n  - Dell iDRAC 9 prior to version 4.40.40.00 and iDRAC 8 prior to version 2.80.80.80 contain a Stack Buffer     Overflow in Racadm. An authenticated remote attacker may potentially exploit this vulnerability to control     process execution and gain access to the underlying operating system. (CVE-2021-36301)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.80.80.80 or later. Upgrade to Dell EMC iDRAC9 version 4.40.40.00 or later.",
            "cve": "CVE-2021-36301",
            "cvss3": "7.2",
            "cvss2": "6.5",
            "see_also": "http://www.nessus.org/u?13d440ac",
            "plugin_output": "URL               : https://10.27.8.140/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.40.40.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.140",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.140/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.139",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.139",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.139",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.139",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.139",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.139",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.139",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "135187",
            "pluginname": "Dell iDRAC Buffer Overflow Vulnerability (CVE-2020-5344)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote host is running iDRAC7 with a firmware version prior to 2.65.65.65, or iDRAC8 with a firmware version prior to 2.70.70.70, or iDRAC9 with a firmware version prior to 4.00.00.00 and is therefore affected by an buffer overflow vulnerability. An unauthenticated remote attacker may exploit this vulnerability to crash the affected process or execute arbitrary code on the system by sending specially crafted input data.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC7 firmware 2.65.65.65 or iDRAC8 firmware 2.70.70.70, or iDRAC9 firmware 4.00.00.00, or higher.",
            "cve": "CVE-2020-5344",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "http://www.nessus.org/u?5a6791ac",
            "plugin_output": "URL               : https://10.27.8.139/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.00.00.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.139",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "144756",
            "pluginname": "Dell iDRAC XSS (DSA-2020-268)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "Dell EMC iDRAC9 versions prior to 4.32.10.00 and 4.40.00.00 contain a reflected cross-site scripting vulnerability in the iDRAC9 web application. A remote attacker could potentially exploit this vulnerability to run malicious HTML or JavaScript in a victim’s browser by tricking a victim in to following a specially crafted link.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.32.10.00, 4.40.00.00 or later.",
            "cve": "CVE-2020-26198",
            "cvss3": "6.1",
            "cvss2": "4.3",
            "see_also": "http://www.nessus.org/u?2273d4ac",
            "plugin_output": "URL               : https://10.27.8.139/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.32.10.00, 4.40.00.00 or later"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.139",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "148956",
            "pluginname": "Dell iDRAC Multiple Vulnerabilities (DSA-2021-073)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "Dell EMC iDRAC9 versions prior to 4.40.00.00 contain multiple vulnerabilities: \n\n  - A Time-of-check Time-of-use (TOCTOU) race condition vulnerability. A remote authenticated attacker     may potentially exploit this vulnerability to gain elevated privileges when a user with higher privileges     is simultaneously accessing iDRAC through the web interface. (CVE-2021-21539)\n\n  - A stack-based overflow vulnerability. A remote authenticated attacker may potentially exploit this     vulnerability to overwrite configuration information by injecting arbitrarily large payload. (CVE-2021-21540)\n\n  - A DOM-based cross-site scripting vulnerability. A remote unauthenticated attacker may potentially exploit     this vulnerability by tricking a victim application user to supply malicious HTML or JavaScript code to DOM     environment in the browser. The malicious code is then executed by the web browser in the context of the     vulnerable web application. (CVE-2021-21541)\n\n  - Multiple stored cross-site scripting vulnerabilities. A remote authenticated malicious user with high privileges     may potentially exploit these vulnerabilities to store malicious HTML or JavaScript code through multiple affected     parameters. When victim users access the submitted data through their browsers, the malicious code gets executed     by the web browser in the context of the vulnerable application. (CVE-2021-21543)\n\n  - An improper authentication vulnerability. A remote authenticated malicious user with high privileges may potentially     exploit this vulnerability to manipulate the username field under the comment section and set the value to any user.\n    (CVE-2021-21544)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.40.00.00 or later.",
            "cve": "CVE-2021-21539",
            "cvss3": "8.1",
            "cvss2": "5.5",
            "see_also": "http://www.nessus.org/u?d3c31d3d",
            "plugin_output": "URL               : https://10.27.8.139/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.40.00.00 or later"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.139",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "148955",
            "pluginname": "Dell iDRAC XSS (DSA-2021-073)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "Dell EMC iDRAC9 versions prior to 4.40.10.00 contain a reflected cross-site scripting vulnerability in the iDRAC9 web application. A remote authenticated malicious user with high privileges may potentially exploit these vulnerabilities to store malicious HTML or JavaScript code through multiple affected while generating a certificate. When victim users access the submitted data through their browsers, the malicious code gets executed by the web browser in the context of the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.40.10.00 or later.",
            "cve": "CVE-2021-21542",
            "cvss3": "4.8",
            "cvss2": "3.5",
            "see_also": "http://www.nessus.org/u?d3c31d3d",
            "plugin_output": "URL               : https://10.27.8.139/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.40.10.00 or later"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.139",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "139206",
            "pluginname": "Dell iDRAC9 Directory Traversal (DSA-2020-128)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host is running iDRAC9 with a firmware version prior to 4.20.20.20. It is, therefore, affected by a directory traversal vulnerability due to insufficient validation of user input. An authenticated, remote attacker can exploit this, by sending a URI that contains directory traversal characters, to disclose the contents of files located outside of the server's restricted path. \n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.20.20.20 or higher.",
            "cve": "CVE-2020-5366",
            "cvss3": "6.5",
            "cvss2": "4.0",
            "see_also": "http://www.nessus.org/u?dbd53980",
            "plugin_output": "URL               : https://10.27.8.139/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.20.20.20"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.139",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "161800",
            "pluginname": "Dell EMC iDRAC9 < 5.00.00.00 (DSA-2021-177)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 5.00.00.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2021-177 advisory:\n\n  - iDRAC9 versions prior to 5.00.00.00 contain an improper input validation vulnerability. An unauthenticated     remote attacker may potentially exploit this vulnerability by sending a specially crafted malicious     request to crash the webserver or cause information disclosure. (CVE-2021-36300)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 5.00.00.00 or later.",
            "cve": "CVE-2021-36300",
            "cvss3": "8.2",
            "cvss2": "6.4",
            "see_also": "http://www.nessus.org/u?13d440ac",
            "plugin_output": "URL               : https://10.27.8.139/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 5.00.00.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.139",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.139/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.139",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "162428",
            "pluginname": "Dell EMC iDRAC8 < 2.83.83.83 / Dell EMC iDRAC9 < 5.10.30.00 (DSA-2022-154)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is prior to 2.83.83.83/5.10.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-154 advisory.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.83.83.83 or later. Upgrade to Dell EMC iDRAC9 version 5.10.30.00 or later.",
            "cve": "CVE-2022-0778",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?a6cd5095",
            "plugin_output": "URL               : https://10.27.8.139/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 5.10.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.139",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "161798",
            "pluginname": "Dell EMC iDRAC8 < 2.80.80.80 / Dell EMC iDRAC9 < 4.40.40.00 (DSA-2021-177)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is affected by a vulnerability as referenced in the DSA-2021-177 advisory:\n\n  - Dell iDRAC 9 prior to version 4.40.40.00 and iDRAC 8 prior to version 2.80.80.80 contain a Stack Buffer     Overflow in Racadm. An authenticated remote attacker may potentially exploit this vulnerability to control     process execution and gain access to the underlying operating system. (CVE-2021-36301)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.80.80.80 or later. Upgrade to Dell EMC iDRAC9 version 4.40.40.00 or later.",
            "cve": "CVE-2021-36301",
            "cvss3": "7.2",
            "cvss2": "6.5",
            "see_also": "http://www.nessus.org/u?13d440ac",
            "plugin_output": "URL               : https://10.27.8.139/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.40.40.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.139",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.139/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.138",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.138",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.138",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.138",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.138",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.138",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.138",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "135187",
            "pluginname": "Dell iDRAC Buffer Overflow Vulnerability (CVE-2020-5344)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote host is running iDRAC7 with a firmware version prior to 2.65.65.65, or iDRAC8 with a firmware version prior to 2.70.70.70, or iDRAC9 with a firmware version prior to 4.00.00.00 and is therefore affected by an buffer overflow vulnerability. An unauthenticated remote attacker may exploit this vulnerability to crash the affected process or execute arbitrary code on the system by sending specially crafted input data.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC7 firmware 2.65.65.65 or iDRAC8 firmware 2.70.70.70, or iDRAC9 firmware 4.00.00.00, or higher.",
            "cve": "CVE-2020-5344",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "http://www.nessus.org/u?5a6791ac",
            "plugin_output": "URL               : https://10.27.8.138/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.00.00.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.138",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "144756",
            "pluginname": "Dell iDRAC XSS (DSA-2020-268)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "Dell EMC iDRAC9 versions prior to 4.32.10.00 and 4.40.00.00 contain a reflected cross-site scripting vulnerability in the iDRAC9 web application. A remote attacker could potentially exploit this vulnerability to run malicious HTML or JavaScript in a victim’s browser by tricking a victim in to following a specially crafted link.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.32.10.00, 4.40.00.00 or later.",
            "cve": "CVE-2020-26198",
            "cvss3": "6.1",
            "cvss2": "4.3",
            "see_also": "http://www.nessus.org/u?2273d4ac",
            "plugin_output": "URL               : https://10.27.8.138/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.32.10.00, 4.40.00.00 or later"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.138",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "148956",
            "pluginname": "Dell iDRAC Multiple Vulnerabilities (DSA-2021-073)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "Dell EMC iDRAC9 versions prior to 4.40.00.00 contain multiple vulnerabilities: \n\n  - A Time-of-check Time-of-use (TOCTOU) race condition vulnerability. A remote authenticated attacker     may potentially exploit this vulnerability to gain elevated privileges when a user with higher privileges     is simultaneously accessing iDRAC through the web interface. (CVE-2021-21539)\n\n  - A stack-based overflow vulnerability. A remote authenticated attacker may potentially exploit this     vulnerability to overwrite configuration information by injecting arbitrarily large payload. (CVE-2021-21540)\n\n  - A DOM-based cross-site scripting vulnerability. A remote unauthenticated attacker may potentially exploit     this vulnerability by tricking a victim application user to supply malicious HTML or JavaScript code to DOM     environment in the browser. The malicious code is then executed by the web browser in the context of the     vulnerable web application. (CVE-2021-21541)\n\n  - Multiple stored cross-site scripting vulnerabilities. A remote authenticated malicious user with high privileges     may potentially exploit these vulnerabilities to store malicious HTML or JavaScript code through multiple affected     parameters. When victim users access the submitted data through their browsers, the malicious code gets executed     by the web browser in the context of the vulnerable application. (CVE-2021-21543)\n\n  - An improper authentication vulnerability. A remote authenticated malicious user with high privileges may potentially     exploit this vulnerability to manipulate the username field under the comment section and set the value to any user.\n    (CVE-2021-21544)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.40.00.00 or later.",
            "cve": "CVE-2021-21539",
            "cvss3": "8.1",
            "cvss2": "5.5",
            "see_also": "http://www.nessus.org/u?d3c31d3d",
            "plugin_output": "URL               : https://10.27.8.138/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.40.00.00 or later"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.138",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "148955",
            "pluginname": "Dell iDRAC XSS (DSA-2021-073)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "Dell EMC iDRAC9 versions prior to 4.40.10.00 contain a reflected cross-site scripting vulnerability in the iDRAC9 web application. A remote authenticated malicious user with high privileges may potentially exploit these vulnerabilities to store malicious HTML or JavaScript code through multiple affected while generating a certificate. When victim users access the submitted data through their browsers, the malicious code gets executed by the web browser in the context of the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.40.10.00 or later.",
            "cve": "CVE-2021-21542",
            "cvss3": "4.8",
            "cvss2": "3.5",
            "see_also": "http://www.nessus.org/u?d3c31d3d",
            "plugin_output": "URL               : https://10.27.8.138/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.40.10.00 or later"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.138",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "139206",
            "pluginname": "Dell iDRAC9 Directory Traversal (DSA-2020-128)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host is running iDRAC9 with a firmware version prior to 4.20.20.20. It is, therefore, affected by a directory traversal vulnerability due to insufficient validation of user input. An authenticated, remote attacker can exploit this, by sending a URI that contains directory traversal characters, to disclose the contents of files located outside of the server's restricted path. \n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.20.20.20 or higher.",
            "cve": "CVE-2020-5366",
            "cvss3": "6.5",
            "cvss2": "4.0",
            "see_also": "http://www.nessus.org/u?dbd53980",
            "plugin_output": "URL               : https://10.27.8.138/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.20.20.20"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.138",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "161800",
            "pluginname": "Dell EMC iDRAC9 < 5.00.00.00 (DSA-2021-177)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 5.00.00.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2021-177 advisory:\n\n  - iDRAC9 versions prior to 5.00.00.00 contain an improper input validation vulnerability. An unauthenticated     remote attacker may potentially exploit this vulnerability by sending a specially crafted malicious     request to crash the webserver or cause information disclosure. (CVE-2021-36300)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 5.00.00.00 or later.",
            "cve": "CVE-2021-36300",
            "cvss3": "8.2",
            "cvss2": "6.4",
            "see_also": "http://www.nessus.org/u?13d440ac",
            "plugin_output": "URL               : https://10.27.8.138/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 5.00.00.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.138",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.138/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.138",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "162428",
            "pluginname": "Dell EMC iDRAC8 < 2.83.83.83 / Dell EMC iDRAC9 < 5.10.30.00 (DSA-2022-154)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is prior to 2.83.83.83/5.10.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-154 advisory.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.83.83.83 or later. Upgrade to Dell EMC iDRAC9 version 5.10.30.00 or later.",
            "cve": "CVE-2022-0778",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?a6cd5095",
            "plugin_output": "URL               : https://10.27.8.138/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 5.10.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.138",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "161798",
            "pluginname": "Dell EMC iDRAC8 < 2.80.80.80 / Dell EMC iDRAC9 < 4.40.40.00 (DSA-2021-177)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is affected by a vulnerability as referenced in the DSA-2021-177 advisory:\n\n  - Dell iDRAC 9 prior to version 4.40.40.00 and iDRAC 8 prior to version 2.80.80.80 contain a Stack Buffer     Overflow in Racadm. An authenticated remote attacker may potentially exploit this vulnerability to control     process execution and gain access to the underlying operating system. (CVE-2021-36301)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.80.80.80 or later. Upgrade to Dell EMC iDRAC9 version 4.40.40.00 or later.",
            "cve": "CVE-2021-36301",
            "cvss3": "7.2",
            "cvss2": "6.5",
            "see_also": "http://www.nessus.org/u?13d440ac",
            "plugin_output": "URL               : https://10.27.8.138/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.40.40.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.138",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.138/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.137",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.137",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.137",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.137",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.137",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.137",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.137",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "135187",
            "pluginname": "Dell iDRAC Buffer Overflow Vulnerability (CVE-2020-5344)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote host is running iDRAC7 with a firmware version prior to 2.65.65.65, or iDRAC8 with a firmware version prior to 2.70.70.70, or iDRAC9 with a firmware version prior to 4.00.00.00 and is therefore affected by an buffer overflow vulnerability. An unauthenticated remote attacker may exploit this vulnerability to crash the affected process or execute arbitrary code on the system by sending specially crafted input data.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC7 firmware 2.65.65.65 or iDRAC8 firmware 2.70.70.70, or iDRAC9 firmware 4.00.00.00, or higher.",
            "cve": "CVE-2020-5344",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "http://www.nessus.org/u?5a6791ac",
            "plugin_output": "URL               : https://10.27.8.137/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.00.00.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.137",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "144756",
            "pluginname": "Dell iDRAC XSS (DSA-2020-268)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "Dell EMC iDRAC9 versions prior to 4.32.10.00 and 4.40.00.00 contain a reflected cross-site scripting vulnerability in the iDRAC9 web application. A remote attacker could potentially exploit this vulnerability to run malicious HTML or JavaScript in a victim’s browser by tricking a victim in to following a specially crafted link.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.32.10.00, 4.40.00.00 or later.",
            "cve": "CVE-2020-26198",
            "cvss3": "6.1",
            "cvss2": "4.3",
            "see_also": "http://www.nessus.org/u?2273d4ac",
            "plugin_output": "URL               : https://10.27.8.137/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.32.10.00, 4.40.00.00 or later"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.137",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "148956",
            "pluginname": "Dell iDRAC Multiple Vulnerabilities (DSA-2021-073)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "Dell EMC iDRAC9 versions prior to 4.40.00.00 contain multiple vulnerabilities: \n\n  - A Time-of-check Time-of-use (TOCTOU) race condition vulnerability. A remote authenticated attacker     may potentially exploit this vulnerability to gain elevated privileges when a user with higher privileges     is simultaneously accessing iDRAC through the web interface. (CVE-2021-21539)\n\n  - A stack-based overflow vulnerability. A remote authenticated attacker may potentially exploit this     vulnerability to overwrite configuration information by injecting arbitrarily large payload. (CVE-2021-21540)\n\n  - A DOM-based cross-site scripting vulnerability. A remote unauthenticated attacker may potentially exploit     this vulnerability by tricking a victim application user to supply malicious HTML or JavaScript code to DOM     environment in the browser. The malicious code is then executed by the web browser in the context of the     vulnerable web application. (CVE-2021-21541)\n\n  - Multiple stored cross-site scripting vulnerabilities. A remote authenticated malicious user with high privileges     may potentially exploit these vulnerabilities to store malicious HTML or JavaScript code through multiple affected     parameters. When victim users access the submitted data through their browsers, the malicious code gets executed     by the web browser in the context of the vulnerable application. (CVE-2021-21543)\n\n  - An improper authentication vulnerability. A remote authenticated malicious user with high privileges may potentially     exploit this vulnerability to manipulate the username field under the comment section and set the value to any user.\n    (CVE-2021-21544)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.40.00.00 or later.",
            "cve": "CVE-2021-21539",
            "cvss3": "8.1",
            "cvss2": "5.5",
            "see_also": "http://www.nessus.org/u?d3c31d3d",
            "plugin_output": "URL               : https://10.27.8.137/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.40.00.00 or later"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.137",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "148955",
            "pluginname": "Dell iDRAC XSS (DSA-2021-073)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "Dell EMC iDRAC9 versions prior to 4.40.10.00 contain a reflected cross-site scripting vulnerability in the iDRAC9 web application. A remote authenticated malicious user with high privileges may potentially exploit these vulnerabilities to store malicious HTML or JavaScript code through multiple affected while generating a certificate. When victim users access the submitted data through their browsers, the malicious code gets executed by the web browser in the context of the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.40.10.00 or later.",
            "cve": "CVE-2021-21542",
            "cvss3": "4.8",
            "cvss2": "3.5",
            "see_also": "http://www.nessus.org/u?d3c31d3d",
            "plugin_output": "URL               : https://10.27.8.137/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.40.10.00 or later"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.137",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "139206",
            "pluginname": "Dell iDRAC9 Directory Traversal (DSA-2020-128)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host is running iDRAC9 with a firmware version prior to 4.20.20.20. It is, therefore, affected by a directory traversal vulnerability due to insufficient validation of user input. An authenticated, remote attacker can exploit this, by sending a URI that contains directory traversal characters, to disclose the contents of files located outside of the server's restricted path. \n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.20.20.20 or higher.",
            "cve": "CVE-2020-5366",
            "cvss3": "6.5",
            "cvss2": "4.0",
            "see_also": "http://www.nessus.org/u?dbd53980",
            "plugin_output": "URL               : https://10.27.8.137/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.20.20.20"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.137",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "161800",
            "pluginname": "Dell EMC iDRAC9 < 5.00.00.00 (DSA-2021-177)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 5.00.00.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2021-177 advisory:\n\n  - iDRAC9 versions prior to 5.00.00.00 contain an improper input validation vulnerability. An unauthenticated     remote attacker may potentially exploit this vulnerability by sending a specially crafted malicious     request to crash the webserver or cause information disclosure. (CVE-2021-36300)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 5.00.00.00 or later.",
            "cve": "CVE-2021-36300",
            "cvss3": "8.2",
            "cvss2": "6.4",
            "see_also": "http://www.nessus.org/u?13d440ac",
            "plugin_output": "URL               : https://10.27.8.137/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 5.00.00.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.137",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.137/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.137",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "162428",
            "pluginname": "Dell EMC iDRAC8 < 2.83.83.83 / Dell EMC iDRAC9 < 5.10.30.00 (DSA-2022-154)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is prior to 2.83.83.83/5.10.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-154 advisory.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.83.83.83 or later. Upgrade to Dell EMC iDRAC9 version 5.10.30.00 or later.",
            "cve": "CVE-2022-0778",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?a6cd5095",
            "plugin_output": "URL               : https://10.27.8.137/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 5.10.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.137",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "161798",
            "pluginname": "Dell EMC iDRAC8 < 2.80.80.80 / Dell EMC iDRAC9 < 4.40.40.00 (DSA-2021-177)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is affected by a vulnerability as referenced in the DSA-2021-177 advisory:\n\n  - Dell iDRAC 9 prior to version 4.40.40.00 and iDRAC 8 prior to version 2.80.80.80 contain a Stack Buffer     Overflow in Racadm. An authenticated remote attacker may potentially exploit this vulnerability to control     process execution and gain access to the underlying operating system. (CVE-2021-36301)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.80.80.80 or later. Upgrade to Dell EMC iDRAC9 version 4.40.40.00 or later.",
            "cve": "CVE-2021-36301",
            "cvss3": "7.2",
            "cvss2": "6.5",
            "see_also": "http://www.nessus.org/u?13d440ac",
            "plugin_output": "URL               : https://10.27.8.137/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.40.40.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.137",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.137/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.136",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.136",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.136",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.136",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.136",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.136",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.136",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "135187",
            "pluginname": "Dell iDRAC Buffer Overflow Vulnerability (CVE-2020-5344)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote host is running iDRAC7 with a firmware version prior to 2.65.65.65, or iDRAC8 with a firmware version prior to 2.70.70.70, or iDRAC9 with a firmware version prior to 4.00.00.00 and is therefore affected by an buffer overflow vulnerability. An unauthenticated remote attacker may exploit this vulnerability to crash the affected process or execute arbitrary code on the system by sending specially crafted input data.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC7 firmware 2.65.65.65 or iDRAC8 firmware 2.70.70.70, or iDRAC9 firmware 4.00.00.00, or higher.",
            "cve": "CVE-2020-5344",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "http://www.nessus.org/u?5a6791ac",
            "plugin_output": "URL               : https://10.27.8.136/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.00.00.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.136",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "144756",
            "pluginname": "Dell iDRAC XSS (DSA-2020-268)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "Dell EMC iDRAC9 versions prior to 4.32.10.00 and 4.40.00.00 contain a reflected cross-site scripting vulnerability in the iDRAC9 web application. A remote attacker could potentially exploit this vulnerability to run malicious HTML or JavaScript in a victim’s browser by tricking a victim in to following a specially crafted link.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.32.10.00, 4.40.00.00 or later.",
            "cve": "CVE-2020-26198",
            "cvss3": "6.1",
            "cvss2": "4.3",
            "see_also": "http://www.nessus.org/u?2273d4ac",
            "plugin_output": "URL               : https://10.27.8.136/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.32.10.00, 4.40.00.00 or later"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.136",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "148956",
            "pluginname": "Dell iDRAC Multiple Vulnerabilities (DSA-2021-073)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "Dell EMC iDRAC9 versions prior to 4.40.00.00 contain multiple vulnerabilities: \n\n  - A Time-of-check Time-of-use (TOCTOU) race condition vulnerability. A remote authenticated attacker     may potentially exploit this vulnerability to gain elevated privileges when a user with higher privileges     is simultaneously accessing iDRAC through the web interface. (CVE-2021-21539)\n\n  - A stack-based overflow vulnerability. A remote authenticated attacker may potentially exploit this     vulnerability to overwrite configuration information by injecting arbitrarily large payload. (CVE-2021-21540)\n\n  - A DOM-based cross-site scripting vulnerability. A remote unauthenticated attacker may potentially exploit     this vulnerability by tricking a victim application user to supply malicious HTML or JavaScript code to DOM     environment in the browser. The malicious code is then executed by the web browser in the context of the     vulnerable web application. (CVE-2021-21541)\n\n  - Multiple stored cross-site scripting vulnerabilities. A remote authenticated malicious user with high privileges     may potentially exploit these vulnerabilities to store malicious HTML or JavaScript code through multiple affected     parameters. When victim users access the submitted data through their browsers, the malicious code gets executed     by the web browser in the context of the vulnerable application. (CVE-2021-21543)\n\n  - An improper authentication vulnerability. A remote authenticated malicious user with high privileges may potentially     exploit this vulnerability to manipulate the username field under the comment section and set the value to any user.\n    (CVE-2021-21544)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.40.00.00 or later.",
            "cve": "CVE-2021-21539",
            "cvss3": "8.1",
            "cvss2": "5.5",
            "see_also": "http://www.nessus.org/u?d3c31d3d",
            "plugin_output": "URL               : https://10.27.8.136/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.40.00.00 or later"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.136",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "148955",
            "pluginname": "Dell iDRAC XSS (DSA-2021-073)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "Dell EMC iDRAC9 versions prior to 4.40.10.00 contain a reflected cross-site scripting vulnerability in the iDRAC9 web application. A remote authenticated malicious user with high privileges may potentially exploit these vulnerabilities to store malicious HTML or JavaScript code through multiple affected while generating a certificate. When victim users access the submitted data through their browsers, the malicious code gets executed by the web browser in the context of the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.40.10.00 or later.",
            "cve": "CVE-2021-21542",
            "cvss3": "4.8",
            "cvss2": "3.5",
            "see_also": "http://www.nessus.org/u?d3c31d3d",
            "plugin_output": "URL               : https://10.27.8.136/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.40.10.00 or later"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.136",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "139206",
            "pluginname": "Dell iDRAC9 Directory Traversal (DSA-2020-128)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host is running iDRAC9 with a firmware version prior to 4.20.20.20. It is, therefore, affected by a directory traversal vulnerability due to insufficient validation of user input. An authenticated, remote attacker can exploit this, by sending a URI that contains directory traversal characters, to disclose the contents of files located outside of the server's restricted path. \n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.20.20.20 or higher.",
            "cve": "CVE-2020-5366",
            "cvss3": "6.5",
            "cvss2": "4.0",
            "see_also": "http://www.nessus.org/u?dbd53980",
            "plugin_output": "URL               : https://10.27.8.136/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.20.20.20"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.136",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "161800",
            "pluginname": "Dell EMC iDRAC9 < 5.00.00.00 (DSA-2021-177)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 5.00.00.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2021-177 advisory:\n\n  - iDRAC9 versions prior to 5.00.00.00 contain an improper input validation vulnerability. An unauthenticated     remote attacker may potentially exploit this vulnerability by sending a specially crafted malicious     request to crash the webserver or cause information disclosure. (CVE-2021-36300)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 5.00.00.00 or later.",
            "cve": "CVE-2021-36300",
            "cvss3": "8.2",
            "cvss2": "6.4",
            "see_also": "http://www.nessus.org/u?13d440ac",
            "plugin_output": "URL               : https://10.27.8.136/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 5.00.00.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.136",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.136/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.136",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "162428",
            "pluginname": "Dell EMC iDRAC8 < 2.83.83.83 / Dell EMC iDRAC9 < 5.10.30.00 (DSA-2022-154)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is prior to 2.83.83.83/5.10.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-154 advisory.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.83.83.83 or later. Upgrade to Dell EMC iDRAC9 version 5.10.30.00 or later.",
            "cve": "CVE-2022-0778",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?a6cd5095",
            "plugin_output": "URL               : https://10.27.8.136/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 5.10.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.136",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "161798",
            "pluginname": "Dell EMC iDRAC8 < 2.80.80.80 / Dell EMC iDRAC9 < 4.40.40.00 (DSA-2021-177)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is affected by a vulnerability as referenced in the DSA-2021-177 advisory:\n\n  - Dell iDRAC 9 prior to version 4.40.40.00 and iDRAC 8 prior to version 2.80.80.80 contain a Stack Buffer     Overflow in Racadm. An authenticated remote attacker may potentially exploit this vulnerability to control     process execution and gain access to the underlying operating system. (CVE-2021-36301)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.80.80.80 or later. Upgrade to Dell EMC iDRAC9 version 4.40.40.00 or later.",
            "cve": "CVE-2021-36301",
            "cvss3": "7.2",
            "cvss2": "6.5",
            "see_also": "http://www.nessus.org/u?13d440ac",
            "plugin_output": "URL               : https://10.27.8.136/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.40.40.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.136",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.136/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.135",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.135",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.135",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.135",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.135",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.135",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.135",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "135187",
            "pluginname": "Dell iDRAC Buffer Overflow Vulnerability (CVE-2020-5344)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote host is running iDRAC7 with a firmware version prior to 2.65.65.65, or iDRAC8 with a firmware version prior to 2.70.70.70, or iDRAC9 with a firmware version prior to 4.00.00.00 and is therefore affected by an buffer overflow vulnerability. An unauthenticated remote attacker may exploit this vulnerability to crash the affected process or execute arbitrary code on the system by sending specially crafted input data.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC7 firmware 2.65.65.65 or iDRAC8 firmware 2.70.70.70, or iDRAC9 firmware 4.00.00.00, or higher.",
            "cve": "CVE-2020-5344",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "http://www.nessus.org/u?5a6791ac",
            "plugin_output": "URL               : https://10.27.8.135/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.00.00.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.135",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "144756",
            "pluginname": "Dell iDRAC XSS (DSA-2020-268)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "Dell EMC iDRAC9 versions prior to 4.32.10.00 and 4.40.00.00 contain a reflected cross-site scripting vulnerability in the iDRAC9 web application. A remote attacker could potentially exploit this vulnerability to run malicious HTML or JavaScript in a victim’s browser by tricking a victim in to following a specially crafted link.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.32.10.00, 4.40.00.00 or later.",
            "cve": "CVE-2020-26198",
            "cvss3": "6.1",
            "cvss2": "4.3",
            "see_also": "http://www.nessus.org/u?2273d4ac",
            "plugin_output": "URL               : https://10.27.8.135/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.32.10.00, 4.40.00.00 or later"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.135",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "148956",
            "pluginname": "Dell iDRAC Multiple Vulnerabilities (DSA-2021-073)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "Dell EMC iDRAC9 versions prior to 4.40.00.00 contain multiple vulnerabilities: \n\n  - A Time-of-check Time-of-use (TOCTOU) race condition vulnerability. A remote authenticated attacker     may potentially exploit this vulnerability to gain elevated privileges when a user with higher privileges     is simultaneously accessing iDRAC through the web interface. (CVE-2021-21539)\n\n  - A stack-based overflow vulnerability. A remote authenticated attacker may potentially exploit this     vulnerability to overwrite configuration information by injecting arbitrarily large payload. (CVE-2021-21540)\n\n  - A DOM-based cross-site scripting vulnerability. A remote unauthenticated attacker may potentially exploit     this vulnerability by tricking a victim application user to supply malicious HTML or JavaScript code to DOM     environment in the browser. The malicious code is then executed by the web browser in the context of the     vulnerable web application. (CVE-2021-21541)\n\n  - Multiple stored cross-site scripting vulnerabilities. A remote authenticated malicious user with high privileges     may potentially exploit these vulnerabilities to store malicious HTML or JavaScript code through multiple affected     parameters. When victim users access the submitted data through their browsers, the malicious code gets executed     by the web browser in the context of the vulnerable application. (CVE-2021-21543)\n\n  - An improper authentication vulnerability. A remote authenticated malicious user with high privileges may potentially     exploit this vulnerability to manipulate the username field under the comment section and set the value to any user.\n    (CVE-2021-21544)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.40.00.00 or later.",
            "cve": "CVE-2021-21539",
            "cvss3": "8.1",
            "cvss2": "5.5",
            "see_also": "http://www.nessus.org/u?d3c31d3d",
            "plugin_output": "URL               : https://10.27.8.135/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.40.00.00 or later"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.135",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "148955",
            "pluginname": "Dell iDRAC XSS (DSA-2021-073)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "Dell EMC iDRAC9 versions prior to 4.40.10.00 contain a reflected cross-site scripting vulnerability in the iDRAC9 web application. A remote authenticated malicious user with high privileges may potentially exploit these vulnerabilities to store malicious HTML or JavaScript code through multiple affected while generating a certificate. When victim users access the submitted data through their browsers, the malicious code gets executed by the web browser in the context of the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.40.10.00 or later.",
            "cve": "CVE-2021-21542",
            "cvss3": "4.8",
            "cvss2": "3.5",
            "see_also": "http://www.nessus.org/u?d3c31d3d",
            "plugin_output": "URL               : https://10.27.8.135/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.40.10.00 or later"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.135",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "139206",
            "pluginname": "Dell iDRAC9 Directory Traversal (DSA-2020-128)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host is running iDRAC9 with a firmware version prior to 4.20.20.20. It is, therefore, affected by a directory traversal vulnerability due to insufficient validation of user input. An authenticated, remote attacker can exploit this, by sending a URI that contains directory traversal characters, to disclose the contents of files located outside of the server's restricted path. \n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.20.20.20 or higher.",
            "cve": "CVE-2020-5366",
            "cvss3": "6.5",
            "cvss2": "4.0",
            "see_also": "http://www.nessus.org/u?dbd53980",
            "plugin_output": "URL               : https://10.27.8.135/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.20.20.20"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.135",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "161800",
            "pluginname": "Dell EMC iDRAC9 < 5.00.00.00 (DSA-2021-177)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 5.00.00.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2021-177 advisory:\n\n  - iDRAC9 versions prior to 5.00.00.00 contain an improper input validation vulnerability. An unauthenticated     remote attacker may potentially exploit this vulnerability by sending a specially crafted malicious     request to crash the webserver or cause information disclosure. (CVE-2021-36300)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 5.00.00.00 or later.",
            "cve": "CVE-2021-36300",
            "cvss3": "8.2",
            "cvss2": "6.4",
            "see_also": "http://www.nessus.org/u?13d440ac",
            "plugin_output": "URL               : https://10.27.8.135/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 5.00.00.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.135",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.135/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.135",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "162428",
            "pluginname": "Dell EMC iDRAC8 < 2.83.83.83 / Dell EMC iDRAC9 < 5.10.30.00 (DSA-2022-154)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is prior to 2.83.83.83/5.10.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-154 advisory.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.83.83.83 or later. Upgrade to Dell EMC iDRAC9 version 5.10.30.00 or later.",
            "cve": "CVE-2022-0778",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?a6cd5095",
            "plugin_output": "URL               : https://10.27.8.135/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 5.10.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.135",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "161798",
            "pluginname": "Dell EMC iDRAC8 < 2.80.80.80 / Dell EMC iDRAC9 < 4.40.40.00 (DSA-2021-177)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is affected by a vulnerability as referenced in the DSA-2021-177 advisory:\n\n  - Dell iDRAC 9 prior to version 4.40.40.00 and iDRAC 8 prior to version 2.80.80.80 contain a Stack Buffer     Overflow in Racadm. An authenticated remote attacker may potentially exploit this vulnerability to control     process execution and gain access to the underlying operating system. (CVE-2021-36301)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.80.80.80 or later. Upgrade to Dell EMC iDRAC9 version 4.40.40.00 or later.",
            "cve": "CVE-2021-36301",
            "cvss3": "7.2",
            "cvss2": "6.5",
            "see_also": "http://www.nessus.org/u?13d440ac",
            "plugin_output": "URL               : https://10.27.8.135/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.40.40.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.135",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.135/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.134",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.134",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.134",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.134",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.134",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.134",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.134",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "135187",
            "pluginname": "Dell iDRAC Buffer Overflow Vulnerability (CVE-2020-5344)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote host is running iDRAC7 with a firmware version prior to 2.65.65.65, or iDRAC8 with a firmware version prior to 2.70.70.70, or iDRAC9 with a firmware version prior to 4.00.00.00 and is therefore affected by an buffer overflow vulnerability. An unauthenticated remote attacker may exploit this vulnerability to crash the affected process or execute arbitrary code on the system by sending specially crafted input data.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC7 firmware 2.65.65.65 or iDRAC8 firmware 2.70.70.70, or iDRAC9 firmware 4.00.00.00, or higher.",
            "cve": "CVE-2020-5344",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "http://www.nessus.org/u?5a6791ac",
            "plugin_output": "URL               : https://10.27.8.134/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.00.00.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.134",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "144756",
            "pluginname": "Dell iDRAC XSS (DSA-2020-268)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "Dell EMC iDRAC9 versions prior to 4.32.10.00 and 4.40.00.00 contain a reflected cross-site scripting vulnerability in the iDRAC9 web application. A remote attacker could potentially exploit this vulnerability to run malicious HTML or JavaScript in a victim’s browser by tricking a victim in to following a specially crafted link.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.32.10.00, 4.40.00.00 or later.",
            "cve": "CVE-2020-26198",
            "cvss3": "6.1",
            "cvss2": "4.3",
            "see_also": "http://www.nessus.org/u?2273d4ac",
            "plugin_output": "URL               : https://10.27.8.134/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.32.10.00, 4.40.00.00 or later"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.134",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "148956",
            "pluginname": "Dell iDRAC Multiple Vulnerabilities (DSA-2021-073)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "Dell EMC iDRAC9 versions prior to 4.40.00.00 contain multiple vulnerabilities: \n\n  - A Time-of-check Time-of-use (TOCTOU) race condition vulnerability. A remote authenticated attacker     may potentially exploit this vulnerability to gain elevated privileges when a user with higher privileges     is simultaneously accessing iDRAC through the web interface. (CVE-2021-21539)\n\n  - A stack-based overflow vulnerability. A remote authenticated attacker may potentially exploit this     vulnerability to overwrite configuration information by injecting arbitrarily large payload. (CVE-2021-21540)\n\n  - A DOM-based cross-site scripting vulnerability. A remote unauthenticated attacker may potentially exploit     this vulnerability by tricking a victim application user to supply malicious HTML or JavaScript code to DOM     environment in the browser. The malicious code is then executed by the web browser in the context of the     vulnerable web application. (CVE-2021-21541)\n\n  - Multiple stored cross-site scripting vulnerabilities. A remote authenticated malicious user with high privileges     may potentially exploit these vulnerabilities to store malicious HTML or JavaScript code through multiple affected     parameters. When victim users access the submitted data through their browsers, the malicious code gets executed     by the web browser in the context of the vulnerable application. (CVE-2021-21543)\n\n  - An improper authentication vulnerability. A remote authenticated malicious user with high privileges may potentially     exploit this vulnerability to manipulate the username field under the comment section and set the value to any user.\n    (CVE-2021-21544)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.40.00.00 or later.",
            "cve": "CVE-2021-21539",
            "cvss3": "8.1",
            "cvss2": "5.5",
            "see_also": "http://www.nessus.org/u?d3c31d3d",
            "plugin_output": "URL               : https://10.27.8.134/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.40.00.00 or later"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.134",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "148955",
            "pluginname": "Dell iDRAC XSS (DSA-2021-073)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "Dell EMC iDRAC9 versions prior to 4.40.10.00 contain a reflected cross-site scripting vulnerability in the iDRAC9 web application. A remote authenticated malicious user with high privileges may potentially exploit these vulnerabilities to store malicious HTML or JavaScript code through multiple affected while generating a certificate. When victim users access the submitted data through their browsers, the malicious code gets executed by the web browser in the context of the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.40.10.00 or later.",
            "cve": "CVE-2021-21542",
            "cvss3": "4.8",
            "cvss2": "3.5",
            "see_also": "http://www.nessus.org/u?d3c31d3d",
            "plugin_output": "URL               : https://10.27.8.134/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.40.10.00 or later"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.134",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "139206",
            "pluginname": "Dell iDRAC9 Directory Traversal (DSA-2020-128)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host is running iDRAC9 with a firmware version prior to 4.20.20.20. It is, therefore, affected by a directory traversal vulnerability due to insufficient validation of user input. An authenticated, remote attacker can exploit this, by sending a URI that contains directory traversal characters, to disclose the contents of files located outside of the server's restricted path. \n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.20.20.20 or higher.",
            "cve": "CVE-2020-5366",
            "cvss3": "6.5",
            "cvss2": "4.0",
            "see_also": "http://www.nessus.org/u?dbd53980",
            "plugin_output": "URL               : https://10.27.8.134/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.20.20.20"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.134",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "161800",
            "pluginname": "Dell EMC iDRAC9 < 5.00.00.00 (DSA-2021-177)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 5.00.00.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2021-177 advisory:\n\n  - iDRAC9 versions prior to 5.00.00.00 contain an improper input validation vulnerability. An unauthenticated     remote attacker may potentially exploit this vulnerability by sending a specially crafted malicious     request to crash the webserver or cause information disclosure. (CVE-2021-36300)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 5.00.00.00 or later.",
            "cve": "CVE-2021-36300",
            "cvss3": "8.2",
            "cvss2": "6.4",
            "see_also": "http://www.nessus.org/u?13d440ac",
            "plugin_output": "URL               : https://10.27.8.134/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 5.00.00.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.134",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.134/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.134",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "162428",
            "pluginname": "Dell EMC iDRAC8 < 2.83.83.83 / Dell EMC iDRAC9 < 5.10.30.00 (DSA-2022-154)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is prior to 2.83.83.83/5.10.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-154 advisory.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.83.83.83 or later. Upgrade to Dell EMC iDRAC9 version 5.10.30.00 or later.",
            "cve": "CVE-2022-0778",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?a6cd5095",
            "plugin_output": "URL               : https://10.27.8.134/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 5.10.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.134",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "161798",
            "pluginname": "Dell EMC iDRAC8 < 2.80.80.80 / Dell EMC iDRAC9 < 4.40.40.00 (DSA-2021-177)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is affected by a vulnerability as referenced in the DSA-2021-177 advisory:\n\n  - Dell iDRAC 9 prior to version 4.40.40.00 and iDRAC 8 prior to version 2.80.80.80 contain a Stack Buffer     Overflow in Racadm. An authenticated remote attacker may potentially exploit this vulnerability to control     process execution and gain access to the underlying operating system. (CVE-2021-36301)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.80.80.80 or later. Upgrade to Dell EMC iDRAC9 version 4.40.40.00 or later.",
            "cve": "CVE-2021-36301",
            "cvss3": "7.2",
            "cvss2": "6.5",
            "see_also": "http://www.nessus.org/u?13d440ac",
            "plugin_output": "URL               : https://10.27.8.134/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.40.40.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.134",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.134/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.132",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.132",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.132",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.132",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.132",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.132",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.132",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "135187",
            "pluginname": "Dell iDRAC Buffer Overflow Vulnerability (CVE-2020-5344)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote host is running iDRAC7 with a firmware version prior to 2.65.65.65, or iDRAC8 with a firmware version prior to 2.70.70.70, or iDRAC9 with a firmware version prior to 4.00.00.00 and is therefore affected by an buffer overflow vulnerability. An unauthenticated remote attacker may exploit this vulnerability to crash the affected process or execute arbitrary code on the system by sending specially crafted input data.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC7 firmware 2.65.65.65 or iDRAC8 firmware 2.70.70.70, or iDRAC9 firmware 4.00.00.00, or higher.",
            "cve": "CVE-2020-5344",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "http://www.nessus.org/u?5a6791ac",
            "plugin_output": "URL               : https://10.27.8.132/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.00.00.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.132",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "144756",
            "pluginname": "Dell iDRAC XSS (DSA-2020-268)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "Dell EMC iDRAC9 versions prior to 4.32.10.00 and 4.40.00.00 contain a reflected cross-site scripting vulnerability in the iDRAC9 web application. A remote attacker could potentially exploit this vulnerability to run malicious HTML or JavaScript in a victim’s browser by tricking a victim in to following a specially crafted link.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.32.10.00, 4.40.00.00 or later.",
            "cve": "CVE-2020-26198",
            "cvss3": "6.1",
            "cvss2": "4.3",
            "see_also": "http://www.nessus.org/u?2273d4ac",
            "plugin_output": "URL               : https://10.27.8.132/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.32.10.00, 4.40.00.00 or later"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.132",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "148956",
            "pluginname": "Dell iDRAC Multiple Vulnerabilities (DSA-2021-073)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "Dell EMC iDRAC9 versions prior to 4.40.00.00 contain multiple vulnerabilities: \n\n  - A Time-of-check Time-of-use (TOCTOU) race condition vulnerability. A remote authenticated attacker     may potentially exploit this vulnerability to gain elevated privileges when a user with higher privileges     is simultaneously accessing iDRAC through the web interface. (CVE-2021-21539)\n\n  - A stack-based overflow vulnerability. A remote authenticated attacker may potentially exploit this     vulnerability to overwrite configuration information by injecting arbitrarily large payload. (CVE-2021-21540)\n\n  - A DOM-based cross-site scripting vulnerability. A remote unauthenticated attacker may potentially exploit     this vulnerability by tricking a victim application user to supply malicious HTML or JavaScript code to DOM     environment in the browser. The malicious code is then executed by the web browser in the context of the     vulnerable web application. (CVE-2021-21541)\n\n  - Multiple stored cross-site scripting vulnerabilities. A remote authenticated malicious user with high privileges     may potentially exploit these vulnerabilities to store malicious HTML or JavaScript code through multiple affected     parameters. When victim users access the submitted data through their browsers, the malicious code gets executed     by the web browser in the context of the vulnerable application. (CVE-2021-21543)\n\n  - An improper authentication vulnerability. A remote authenticated malicious user with high privileges may potentially     exploit this vulnerability to manipulate the username field under the comment section and set the value to any user.\n    (CVE-2021-21544)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.40.00.00 or later.",
            "cve": "CVE-2021-21539",
            "cvss3": "8.1",
            "cvss2": "5.5",
            "see_also": "http://www.nessus.org/u?d3c31d3d",
            "plugin_output": "URL               : https://10.27.8.132/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.40.00.00 or later"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.132",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "148955",
            "pluginname": "Dell iDRAC XSS (DSA-2021-073)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "Dell EMC iDRAC9 versions prior to 4.40.10.00 contain a reflected cross-site scripting vulnerability in the iDRAC9 web application. A remote authenticated malicious user with high privileges may potentially exploit these vulnerabilities to store malicious HTML or JavaScript code through multiple affected while generating a certificate. When victim users access the submitted data through their browsers, the malicious code gets executed by the web browser in the context of the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.40.10.00 or later.",
            "cve": "CVE-2021-21542",
            "cvss3": "4.8",
            "cvss2": "3.5",
            "see_also": "http://www.nessus.org/u?d3c31d3d",
            "plugin_output": "URL               : https://10.27.8.132/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.40.10.00 or later"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.132",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "139206",
            "pluginname": "Dell iDRAC9 Directory Traversal (DSA-2020-128)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host is running iDRAC9 with a firmware version prior to 4.20.20.20. It is, therefore, affected by a directory traversal vulnerability due to insufficient validation of user input. An authenticated, remote attacker can exploit this, by sending a URI that contains directory traversal characters, to disclose the contents of files located outside of the server's restricted path. \n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.20.20.20 or higher.",
            "cve": "CVE-2020-5366",
            "cvss3": "6.5",
            "cvss2": "4.0",
            "see_also": "http://www.nessus.org/u?dbd53980",
            "plugin_output": "URL               : https://10.27.8.132/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.20.20.20"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.132",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "161800",
            "pluginname": "Dell EMC iDRAC9 < 5.00.00.00 (DSA-2021-177)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 5.00.00.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2021-177 advisory:\n\n  - iDRAC9 versions prior to 5.00.00.00 contain an improper input validation vulnerability. An unauthenticated     remote attacker may potentially exploit this vulnerability by sending a specially crafted malicious     request to crash the webserver or cause information disclosure. (CVE-2021-36300)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 5.00.00.00 or later.",
            "cve": "CVE-2021-36300",
            "cvss3": "8.2",
            "cvss2": "6.4",
            "see_also": "http://www.nessus.org/u?13d440ac",
            "plugin_output": "URL               : https://10.27.8.132/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 5.00.00.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.132",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.132/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.132",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "162428",
            "pluginname": "Dell EMC iDRAC8 < 2.83.83.83 / Dell EMC iDRAC9 < 5.10.30.00 (DSA-2022-154)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is prior to 2.83.83.83/5.10.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-154 advisory.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.83.83.83 or later. Upgrade to Dell EMC iDRAC9 version 5.10.30.00 or later.",
            "cve": "CVE-2022-0778",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?a6cd5095",
            "plugin_output": "URL               : https://10.27.8.132/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 5.10.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.132",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "161798",
            "pluginname": "Dell EMC iDRAC8 < 2.80.80.80 / Dell EMC iDRAC9 < 4.40.40.00 (DSA-2021-177)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is affected by a vulnerability as referenced in the DSA-2021-177 advisory:\n\n  - Dell iDRAC 9 prior to version 4.40.40.00 and iDRAC 8 prior to version 2.80.80.80 contain a Stack Buffer     Overflow in Racadm. An authenticated remote attacker may potentially exploit this vulnerability to control     process execution and gain access to the underlying operating system. (CVE-2021-36301)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.80.80.80 or later. Upgrade to Dell EMC iDRAC9 version 4.40.40.00 or later.",
            "cve": "CVE-2021-36301",
            "cvss3": "7.2",
            "cvss2": "6.5",
            "see_also": "http://www.nessus.org/u?13d440ac",
            "plugin_output": "URL               : https://10.27.8.132/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.40.40.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.132",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.132/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.131",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.131",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.131",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.131",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.131",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.131",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.131",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "135187",
            "pluginname": "Dell iDRAC Buffer Overflow Vulnerability (CVE-2020-5344)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote host is running iDRAC7 with a firmware version prior to 2.65.65.65, or iDRAC8 with a firmware version prior to 2.70.70.70, or iDRAC9 with a firmware version prior to 4.00.00.00 and is therefore affected by an buffer overflow vulnerability. An unauthenticated remote attacker may exploit this vulnerability to crash the affected process or execute arbitrary code on the system by sending specially crafted input data.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC7 firmware 2.65.65.65 or iDRAC8 firmware 2.70.70.70, or iDRAC9 firmware 4.00.00.00, or higher.",
            "cve": "CVE-2020-5344",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "http://www.nessus.org/u?5a6791ac",
            "plugin_output": "URL               : https://10.27.8.131/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.00.00.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.131",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "144756",
            "pluginname": "Dell iDRAC XSS (DSA-2020-268)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "Dell EMC iDRAC9 versions prior to 4.32.10.00 and 4.40.00.00 contain a reflected cross-site scripting vulnerability in the iDRAC9 web application. A remote attacker could potentially exploit this vulnerability to run malicious HTML or JavaScript in a victim’s browser by tricking a victim in to following a specially crafted link.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.32.10.00, 4.40.00.00 or later.",
            "cve": "CVE-2020-26198",
            "cvss3": "6.1",
            "cvss2": "4.3",
            "see_also": "http://www.nessus.org/u?2273d4ac",
            "plugin_output": "URL               : https://10.27.8.131/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.32.10.00, 4.40.00.00 or later"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.131",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "148956",
            "pluginname": "Dell iDRAC Multiple Vulnerabilities (DSA-2021-073)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "Dell EMC iDRAC9 versions prior to 4.40.00.00 contain multiple vulnerabilities: \n\n  - A Time-of-check Time-of-use (TOCTOU) race condition vulnerability. A remote authenticated attacker     may potentially exploit this vulnerability to gain elevated privileges when a user with higher privileges     is simultaneously accessing iDRAC through the web interface. (CVE-2021-21539)\n\n  - A stack-based overflow vulnerability. A remote authenticated attacker may potentially exploit this     vulnerability to overwrite configuration information by injecting arbitrarily large payload. (CVE-2021-21540)\n\n  - A DOM-based cross-site scripting vulnerability. A remote unauthenticated attacker may potentially exploit     this vulnerability by tricking a victim application user to supply malicious HTML or JavaScript code to DOM     environment in the browser. The malicious code is then executed by the web browser in the context of the     vulnerable web application. (CVE-2021-21541)\n\n  - Multiple stored cross-site scripting vulnerabilities. A remote authenticated malicious user with high privileges     may potentially exploit these vulnerabilities to store malicious HTML or JavaScript code through multiple affected     parameters. When victim users access the submitted data through their browsers, the malicious code gets executed     by the web browser in the context of the vulnerable application. (CVE-2021-21543)\n\n  - An improper authentication vulnerability. A remote authenticated malicious user with high privileges may potentially     exploit this vulnerability to manipulate the username field under the comment section and set the value to any user.\n    (CVE-2021-21544)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.40.00.00 or later.",
            "cve": "CVE-2021-21539",
            "cvss3": "8.1",
            "cvss2": "5.5",
            "see_also": "http://www.nessus.org/u?d3c31d3d",
            "plugin_output": "URL               : https://10.27.8.131/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.40.00.00 or later"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.131",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "148955",
            "pluginname": "Dell iDRAC XSS (DSA-2021-073)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "Dell EMC iDRAC9 versions prior to 4.40.10.00 contain a reflected cross-site scripting vulnerability in the iDRAC9 web application. A remote authenticated malicious user with high privileges may potentially exploit these vulnerabilities to store malicious HTML or JavaScript code through multiple affected while generating a certificate. When victim users access the submitted data through their browsers, the malicious code gets executed by the web browser in the context of the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.40.10.00 or later.",
            "cve": "CVE-2021-21542",
            "cvss3": "4.8",
            "cvss2": "3.5",
            "see_also": "http://www.nessus.org/u?d3c31d3d",
            "plugin_output": "URL               : https://10.27.8.131/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.40.10.00 or later"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.131",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "139206",
            "pluginname": "Dell iDRAC9 Directory Traversal (DSA-2020-128)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host is running iDRAC9 with a firmware version prior to 4.20.20.20. It is, therefore, affected by a directory traversal vulnerability due to insufficient validation of user input. An authenticated, remote attacker can exploit this, by sending a URI that contains directory traversal characters, to disclose the contents of files located outside of the server's restricted path. \n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.20.20.20 or higher.",
            "cve": "CVE-2020-5366",
            "cvss3": "6.5",
            "cvss2": "4.0",
            "see_also": "http://www.nessus.org/u?dbd53980",
            "plugin_output": "URL               : https://10.27.8.131/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.20.20.20"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.131",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "161800",
            "pluginname": "Dell EMC iDRAC9 < 5.00.00.00 (DSA-2021-177)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 5.00.00.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2021-177 advisory:\n\n  - iDRAC9 versions prior to 5.00.00.00 contain an improper input validation vulnerability. An unauthenticated     remote attacker may potentially exploit this vulnerability by sending a specially crafted malicious     request to crash the webserver or cause information disclosure. (CVE-2021-36300)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 5.00.00.00 or later.",
            "cve": "CVE-2021-36300",
            "cvss3": "8.2",
            "cvss2": "6.4",
            "see_also": "http://www.nessus.org/u?13d440ac",
            "plugin_output": "URL               : https://10.27.8.131/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 5.00.00.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.131",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.131/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.131",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "162428",
            "pluginname": "Dell EMC iDRAC8 < 2.83.83.83 / Dell EMC iDRAC9 < 5.10.30.00 (DSA-2022-154)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is prior to 2.83.83.83/5.10.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-154 advisory.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.83.83.83 or later. Upgrade to Dell EMC iDRAC9 version 5.10.30.00 or later.",
            "cve": "CVE-2022-0778",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?a6cd5095",
            "plugin_output": "URL               : https://10.27.8.131/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 5.10.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.131",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "161798",
            "pluginname": "Dell EMC iDRAC8 < 2.80.80.80 / Dell EMC iDRAC9 < 4.40.40.00 (DSA-2021-177)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is affected by a vulnerability as referenced in the DSA-2021-177 advisory:\n\n  - Dell iDRAC 9 prior to version 4.40.40.00 and iDRAC 8 prior to version 2.80.80.80 contain a Stack Buffer     Overflow in Racadm. An authenticated remote attacker may potentially exploit this vulnerability to control     process execution and gain access to the underlying operating system. (CVE-2021-36301)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.80.80.80 or later. Upgrade to Dell EMC iDRAC9 version 4.40.40.00 or later.",
            "cve": "CVE-2021-36301",
            "cvss3": "7.2",
            "cvss2": "6.5",
            "see_also": "http://www.nessus.org/u?13d440ac",
            "plugin_output": "URL               : https://10.27.8.131/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.40.40.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.131",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.131/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.130",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.130",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.130",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.130",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.130",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.130",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.130",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "135187",
            "pluginname": "Dell iDRAC Buffer Overflow Vulnerability (CVE-2020-5344)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote host is running iDRAC7 with a firmware version prior to 2.65.65.65, or iDRAC8 with a firmware version prior to 2.70.70.70, or iDRAC9 with a firmware version prior to 4.00.00.00 and is therefore affected by an buffer overflow vulnerability. An unauthenticated remote attacker may exploit this vulnerability to crash the affected process or execute arbitrary code on the system by sending specially crafted input data.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC7 firmware 2.65.65.65 or iDRAC8 firmware 2.70.70.70, or iDRAC9 firmware 4.00.00.00, or higher.",
            "cve": "CVE-2020-5344",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "http://www.nessus.org/u?5a6791ac",
            "plugin_output": "URL               : https://10.27.8.130/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.00.00.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.130",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "144756",
            "pluginname": "Dell iDRAC XSS (DSA-2020-268)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "Dell EMC iDRAC9 versions prior to 4.32.10.00 and 4.40.00.00 contain a reflected cross-site scripting vulnerability in the iDRAC9 web application. A remote attacker could potentially exploit this vulnerability to run malicious HTML or JavaScript in a victim’s browser by tricking a victim in to following a specially crafted link.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.32.10.00, 4.40.00.00 or later.",
            "cve": "CVE-2020-26198",
            "cvss3": "6.1",
            "cvss2": "4.3",
            "see_also": "http://www.nessus.org/u?2273d4ac",
            "plugin_output": "URL               : https://10.27.8.130/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.32.10.00, 4.40.00.00 or later"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.130",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "148956",
            "pluginname": "Dell iDRAC Multiple Vulnerabilities (DSA-2021-073)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "Dell EMC iDRAC9 versions prior to 4.40.00.00 contain multiple vulnerabilities: \n\n  - A Time-of-check Time-of-use (TOCTOU) race condition vulnerability. A remote authenticated attacker     may potentially exploit this vulnerability to gain elevated privileges when a user with higher privileges     is simultaneously accessing iDRAC through the web interface. (CVE-2021-21539)\n\n  - A stack-based overflow vulnerability. A remote authenticated attacker may potentially exploit this     vulnerability to overwrite configuration information by injecting arbitrarily large payload. (CVE-2021-21540)\n\n  - A DOM-based cross-site scripting vulnerability. A remote unauthenticated attacker may potentially exploit     this vulnerability by tricking a victim application user to supply malicious HTML or JavaScript code to DOM     environment in the browser. The malicious code is then executed by the web browser in the context of the     vulnerable web application. (CVE-2021-21541)\n\n  - Multiple stored cross-site scripting vulnerabilities. A remote authenticated malicious user with high privileges     may potentially exploit these vulnerabilities to store malicious HTML or JavaScript code through multiple affected     parameters. When victim users access the submitted data through their browsers, the malicious code gets executed     by the web browser in the context of the vulnerable application. (CVE-2021-21543)\n\n  - An improper authentication vulnerability. A remote authenticated malicious user with high privileges may potentially     exploit this vulnerability to manipulate the username field under the comment section and set the value to any user.\n    (CVE-2021-21544)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.40.00.00 or later.",
            "cve": "CVE-2021-21539",
            "cvss3": "8.1",
            "cvss2": "5.5",
            "see_also": "http://www.nessus.org/u?d3c31d3d",
            "plugin_output": "URL               : https://10.27.8.130/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.40.00.00 or later"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.130",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "148955",
            "pluginname": "Dell iDRAC XSS (DSA-2021-073)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "Dell EMC iDRAC9 versions prior to 4.40.10.00 contain a reflected cross-site scripting vulnerability in the iDRAC9 web application. A remote authenticated malicious user with high privileges may potentially exploit these vulnerabilities to store malicious HTML or JavaScript code through multiple affected while generating a certificate. When victim users access the submitted data through their browsers, the malicious code gets executed by the web browser in the context of the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.40.10.00 or later.",
            "cve": "CVE-2021-21542",
            "cvss3": "4.8",
            "cvss2": "3.5",
            "see_also": "http://www.nessus.org/u?d3c31d3d",
            "plugin_output": "URL               : https://10.27.8.130/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.40.10.00 or later"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.130",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "139206",
            "pluginname": "Dell iDRAC9 Directory Traversal (DSA-2020-128)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host is running iDRAC9 with a firmware version prior to 4.20.20.20. It is, therefore, affected by a directory traversal vulnerability due to insufficient validation of user input. An authenticated, remote attacker can exploit this, by sending a URI that contains directory traversal characters, to disclose the contents of files located outside of the server's restricted path. \n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Update the remote host to iDRAC9 firmware 4.20.20.20 or higher.",
            "cve": "CVE-2020-5366",
            "cvss3": "6.5",
            "cvss2": "4.0",
            "see_also": "http://www.nessus.org/u?dbd53980",
            "plugin_output": "URL               : https://10.27.8.130/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.20.20.20"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.130",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "161800",
            "pluginname": "Dell EMC iDRAC9 < 5.00.00.00 (DSA-2021-177)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 5.00.00.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2021-177 advisory:\n\n  - iDRAC9 versions prior to 5.00.00.00 contain an improper input validation vulnerability. An unauthenticated     remote attacker may potentially exploit this vulnerability by sending a specially crafted malicious     request to crash the webserver or cause information disclosure. (CVE-2021-36300)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 5.00.00.00 or later.",
            "cve": "CVE-2021-36300",
            "cvss3": "8.2",
            "cvss2": "6.4",
            "see_also": "http://www.nessus.org/u?13d440ac",
            "plugin_output": "URL               : https://10.27.8.130/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 5.00.00.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.130",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.130/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.130",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "162428",
            "pluginname": "Dell EMC iDRAC8 < 2.83.83.83 / Dell EMC iDRAC9 < 5.10.30.00 (DSA-2022-154)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is prior to 2.83.83.83/5.10.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-154 advisory.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.83.83.83 or later. Upgrade to Dell EMC iDRAC9 version 5.10.30.00 or later.",
            "cve": "CVE-2022-0778",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?a6cd5095",
            "plugin_output": "URL               : https://10.27.8.130/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 5.10.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.130",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "161798",
            "pluginname": "Dell EMC iDRAC8 < 2.80.80.80 / Dell EMC iDRAC9 < 4.40.40.00 (DSA-2021-177)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is affected by a vulnerability as referenced in the DSA-2021-177 advisory:\n\n  - Dell iDRAC 9 prior to version 4.40.40.00 and iDRAC 8 prior to version 2.80.80.80 contain a Stack Buffer     Overflow in Racadm. An authenticated remote attacker may potentially exploit this vulnerability to control     process execution and gain access to the underlying operating system. (CVE-2021-36301)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.80.80.80 or later. Upgrade to Dell EMC iDRAC9 version 4.40.40.00 or later.",
            "cve": "CVE-2021-36301",
            "cvss3": "7.2",
            "cvss2": "6.5",
            "see_also": "http://www.nessus.org/u?13d440ac",
            "plugin_output": "URL               : https://10.27.8.130/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 4.40.40.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.130",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.130/\nInstalled version : iDRAC9 with firmware 3.36.36.36.21\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.129",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-2Y1NQ14/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.129",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-2Y1NQ14/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-2Y1NQ14/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.128",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-F7H8Q14/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.128",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-F7H8Q14/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-F7H8Q14/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.127",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-D7H8Q14/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.127",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-D7H8Q14/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-D7H8Q14/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.126",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-3Y1NQ14/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.126",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-3Y1NQ14/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-3Y1NQ14/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.124",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.124",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.124",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.124",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.124",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.124",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.123",
            "system": "Cyber Switching ePower PDU\nPolycom SoundPoint IP Telephone",
            "os": "other",
            "pluginid": "20007",
            "pluginname": "SSL Version 2 and 3 Protocol Detection",
            "hostname": "",
            "port": "5989",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote service accepts connections encrypted using SSL 2.0 and/or SSL 3.0. These versions of SSL are affected by several cryptographic flaws, including:\n\n  - An insecure padding scheme with CBC ciphers.\n\n  - Insecure session renegotiation and resumption schemes.\n\nAn attacker can exploit these flaws to conduct man-in-the-middle attacks or to decrypt communications between the affected service and clients.\n\nAlthough SSL/TLS has a secure means for choosing the highest supported version of the protocol (so that these versions will be used only if the client or server support nothing better), many web browsers implement this in an unsafe way that allows an attacker to downgrade a connection (such as in POODLE). Therefore, it is recommended that these protocols be disabled entirely.\n\nNIST has determined that SSL 3.0 is no longer acceptable for secure communications. As of the date of enforcement found in PCI DSS v3.1, any version of SSL will not meet the PCI SSC's definition of 'strong cryptography'.",
            "solution": "Consult the application's documentation to disable SSL 2.0 and 3.0.\nUse TLS 1.2 (with approved cipher suites) or higher instead.",
            "cve": "",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "https://www.schneier.com/academic/paperfiles/paper-ssl.pdf\nhttp://www.nessus.org/u?b06c7e95\nhttp://www.nessus.org/u?247c4540\nhttps://www.openssl.org/~bodo/ssl-poodle.pdf\nhttp://www.nessus.org/u?5d15ba70\nhttps://www.imperialviolet.org/2014/10/14/poodle.html\nhttps://tools.ietf.org/html/rfc7507\nhttps://tools.ietf.org/html/rfc7568",
            "plugin_output": "- SSLv3 is enabled and the server supports at least one cipher.\nExplanation: TLS 1.0 and SSL 3.0 cipher suites may be used with SSLv3\nMedium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nEDH-RSA-DES-CBC3-SHA                           DH            RSA      3DES-CBC(168)          SHA1\nECDHE-RSA-DES-CBC3-SHA                         ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                                   RSA           RSA      3DES-CBC(168)          SHA1\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDHE-RSA-AES128-SHA                             DH            RSA      AES-CBC(128)           SHA1\nDHE-RSA-AES256-SHA                             DH            RSA      AES-CBC(256)           SHA1\nDHE-RSA-CAMELLIA128-SHA                        DH            RSA      Camellia-CBC(128)      SHA1\nDHE-RSA-CAMELLIA256-SHA                        DH            RSA      Camellia-CBC(256)      SHA1\nDHE-RSA-SEED-SHA                               DH            RSA      SEED-CBC(128)          SHA1\nECDHE-RSA-AES128-SHA                           ECDH          RSA      AES-CBC(128)           SHA1\nECDHE-RSA-AES256-SHA                           ECDH          RSA      AES-CBC(256)           SHA1\nECDHE-RSA-RC4-SHA                              ECDH          RSA      RC4(128)               SHA1\nAES128-SHA                                     RSA           RSA      AES-CBC(128)           SHA1\nAES256-SHA                                     RSA           RSA      AES-CBC(256)           SHA1\nCAMELLIA128-SHA                                RSA           RSA      Camellia-CBC(128)      SHA1\nCAMELLIA256-SHA                                RSA           RSA      Camellia-CBC(256)      SHA1\nRC4-SHA                                        RSA           RSA      RC4(128)               SHA1\nSEED-SHA                                       RSA           RSA      SEED-CBC(128)          SHA1\nDHE-RSA-AES128-SHA256                          DH            RSA      AES-CBC(128)           SHA256\nDHE-RSA-AES256-SHA256                          DH            RSA      AES-CBC(256)           SHA256\nECDHE-RSA-AES128-SHA256                        ECDH          RSA      AES-CBC(128)           SHA256\nECDHE-RSA-AES256-SHA384                        ECDH          RSA      AES-CBC(256)           SHA384\nRSA-AES128-SHA256                              RSA           RSA      AES-CBC(128)           SHA256\nRSA-AES256-SHA256                              RSA           RSA      AES-CBC(256)           SHA256\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.123",
            "system": "Cyber Switching ePower PDU\nPolycom SoundPoint IP Telephone",
            "os": "other",
            "pluginid": "20007",
            "pluginname": "SSL Version 2 and 3 Protocol Detection",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote service accepts connections encrypted using SSL 2.0 and/or SSL 3.0. These versions of SSL are affected by several cryptographic flaws, including:\n\n  - An insecure padding scheme with CBC ciphers.\n\n  - Insecure session renegotiation and resumption schemes.\n\nAn attacker can exploit these flaws to conduct man-in-the-middle attacks or to decrypt communications between the affected service and clients.\n\nAlthough SSL/TLS has a secure means for choosing the highest supported version of the protocol (so that these versions will be used only if the client or server support nothing better), many web browsers implement this in an unsafe way that allows an attacker to downgrade a connection (such as in POODLE). Therefore, it is recommended that these protocols be disabled entirely.\n\nNIST has determined that SSL 3.0 is no longer acceptable for secure communications. As of the date of enforcement found in PCI DSS v3.1, any version of SSL will not meet the PCI SSC's definition of 'strong cryptography'.",
            "solution": "Consult the application's documentation to disable SSL 2.0 and 3.0.\nUse TLS 1.2 (with approved cipher suites) or higher instead.",
            "cve": "",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "https://www.schneier.com/academic/paperfiles/paper-ssl.pdf\nhttp://www.nessus.org/u?b06c7e95\nhttp://www.nessus.org/u?247c4540\nhttps://www.openssl.org/~bodo/ssl-poodle.pdf\nhttp://www.nessus.org/u?5d15ba70\nhttps://www.imperialviolet.org/2014/10/14/poodle.html\nhttps://tools.ietf.org/html/rfc7507\nhttps://tools.ietf.org/html/rfc7568",
            "plugin_output": "- SSLv3 is enabled and the server supports at least one cipher.\nExplanation: TLS 1.0 and SSL 3.0 cipher suites may be used with SSLv3\nMedium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nEDH-RSA-DES-CBC3-SHA                           DH            RSA      3DES-CBC(168)          SHA1\nECDHE-RSA-DES-CBC3-SHA                         ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                                   RSA           RSA      3DES-CBC(168)          SHA1\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDHE-RSA-AES128-SHA                             DH            RSA      AES-CBC(128)           SHA1\nDHE-RSA-AES256-SHA                             DH            RSA      AES-CBC(256)           SHA1\nDHE-RSA-CAMELLIA128-SHA                        DH            RSA      Camellia-CBC(128)      SHA1\nDHE-RSA-CAMELLIA256-SHA                        DH            RSA      Camellia-CBC(256)      SHA1\nDHE-RSA-SEED-SHA                               DH            RSA      SEED-CBC(128)          SHA1\nECDHE-RSA-AES128-SHA                           ECDH          RSA      AES-CBC(128)           SHA1\nECDHE-RSA-AES256-SHA                           ECDH          RSA      AES-CBC(256)           SHA1\nECDHE-RSA-RC4-SHA                              ECDH          RSA      RC4(128)               SHA1\nAES128-SHA                                     RSA           RSA      AES-CBC(128)           SHA1\nAES256-SHA                                     RSA           RSA      AES-CBC(256)           SHA1\nCAMELLIA128-SHA                                RSA           RSA      Camellia-CBC(128)      SHA1\nCAMELLIA256-SHA                                RSA           RSA      Camellia-CBC(256)      SHA1\nRC4-SHA                                        RSA           RSA      RC4(128)               SHA1\nSEED-SHA                                       RSA           RSA      SEED-CBC(128)          SHA1\nDHE-RSA-AES128-SHA256                          DH            RSA      AES-CBC(128)           SHA256\nDHE-RSA-AES256-SHA256                          DH            RSA      AES-CBC(256)           SHA256\nECDHE-RSA-AES128-SHA256                        ECDH          RSA      AES-CBC(128)           SHA256\nECDHE-RSA-AES256-SHA384                        ECDH          RSA      AES-CBC(256)           SHA384\nRSA-AES128-SHA256                              RSA           RSA      AES-CBC(128)           SHA256\nRSA-AES256-SHA256                              RSA           RSA      AES-CBC(256)           SHA256\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.123",
            "system": "Cyber Switching ePower PDU\nPolycom SoundPoint IP Telephone",
            "os": "other",
            "pluginid": "78479",
            "pluginname": "SSLv3 Padding Oracle On Downgraded Legacy Encryption Vulnerability (POODLE)",
            "hostname": "",
            "port": "5989",
            "protocol": "tcp",
            "severity": "1",
            "description": "The remote host is affected by a man-in-the-middle (MitM) information disclosure vulnerability known as POODLE. The vulnerability is due to the way SSL 3.0 handles padding bytes when decrypting messages encrypted using block ciphers in cipher block chaining (CBC) mode.\nMitM attackers can decrypt a selected byte of a cipher text in as few as 256 tries if they are able to force a victim application to repeatedly send the same data over newly created SSL 3.0 connections.\n\nAs long as a client and service both support SSLv3, a connection can be 'rolled back' to SSLv3, even if TLSv1 or newer is supported by the client and service.\n\nThe TLS Fallback SCSV mechanism prevents 'version rollback' attacks without impacting legacy clients; however, it can only protect connections when the client and service support the mechanism. Sites that cannot disable SSLv3 immediately should enable this mechanism.\n\nThis is a vulnerability in the SSLv3 specification, not in any particular SSL implementation. Disabling SSLv3 is the only way to completely mitigate the vulnerability.",
            "solution": "Disable SSLv3.\n\nServices that must support SSLv3 should enable the TLS Fallback SCSV mechanism until SSLv3 can be disabled.",
            "cve": "CVE-2014-3566",
            "cvss3": "3.4",
            "cvss2": "4.3",
            "see_also": "https://www.imperialviolet.org/2014/10/14/poodle.html\nhttps://www.openssl.org/~bodo/ssl-poodle.pdf\nhttps://tools.ietf.org/html/draft-ietf-tls-downgrade-scsv-00",
            "plugin_output": "Nessus determined that the remote server supports SSLv3 with at least one CBC\ncipher suite, indicating that this server is vulnerable.\nIt appears that TLSv1 or newer is supported on the server. However, the\nFallback SCSV mechanism is not supported, allowing connections to be \"rolled\nback\" to SSLv3."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.123",
            "system": "Cyber Switching ePower PDU\nPolycom SoundPoint IP Telephone",
            "os": "other",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "5989",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nECDHE-RSA-RC4-SHA             0xC0, 0x11       ECDH          RSA      RC4(128)               SHA1\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.123",
            "system": "Cyber Switching ePower PDU\nPolycom SoundPoint IP Telephone",
            "os": "other",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nECDHE-RSA-RC4-SHA             0xC0, 0x11       ECDH          RSA      RC4(128)               SHA1\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.123",
            "system": "Cyber Switching ePower PDU\nPolycom SoundPoint IP Telephone",
            "os": "other",
            "pluginid": "78479",
            "pluginname": "SSLv3 Padding Oracle On Downgraded Legacy Encryption Vulnerability (POODLE)",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "1",
            "description": "The remote host is affected by a man-in-the-middle (MitM) information disclosure vulnerability known as POODLE. The vulnerability is due to the way SSL 3.0 handles padding bytes when decrypting messages encrypted using block ciphers in cipher block chaining (CBC) mode.\nMitM attackers can decrypt a selected byte of a cipher text in as few as 256 tries if they are able to force a victim application to repeatedly send the same data over newly created SSL 3.0 connections.\n\nAs long as a client and service both support SSLv3, a connection can be 'rolled back' to SSLv3, even if TLSv1 or newer is supported by the client and service.\n\nThe TLS Fallback SCSV mechanism prevents 'version rollback' attacks without impacting legacy clients; however, it can only protect connections when the client and service support the mechanism. Sites that cannot disable SSLv3 immediately should enable this mechanism.\n\nThis is a vulnerability in the SSLv3 specification, not in any particular SSL implementation. Disabling SSLv3 is the only way to completely mitigate the vulnerability.",
            "solution": "Disable SSLv3.\n\nServices that must support SSLv3 should enable the TLS Fallback SCSV mechanism until SSLv3 can be disabled.",
            "cve": "CVE-2014-3566",
            "cvss3": "3.4",
            "cvss2": "4.3",
            "see_also": "https://www.imperialviolet.org/2014/10/14/poodle.html\nhttps://www.openssl.org/~bodo/ssl-poodle.pdf\nhttps://tools.ietf.org/html/draft-ietf-tls-downgrade-scsv-00",
            "plugin_output": "Nessus determined that the remote server supports SSLv3 with at least one CBC\ncipher suite, indicating that this server is vulnerable.\nIt appears that TLSv1 or newer is supported on the server. However, the\nFallback SCSV mechanism is not supported, allowing connections to be \"rolled\nback\" to SSLv3."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.123",
            "system": "Cyber Switching ePower PDU\nPolycom SoundPoint IP Telephone",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "5989",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nEDH-RSA-DES-CBC3-SHA          0x00, 0x16       DH            RSA      3DES-CBC(168)          SHA1\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.123",
            "system": "Cyber Switching ePower PDU\nPolycom SoundPoint IP Telephone",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nEDH-RSA-DES-CBC3-SHA          0x00, 0x16       DH            RSA      3DES-CBC(168)          SHA1\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.123",
            "system": "Cyber Switching ePower PDU\nPolycom SoundPoint IP Telephone",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "5989",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.123",
            "system": "Cyber Switching ePower PDU\nPolycom SoundPoint IP Telephone",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.123",
            "system": "Cyber Switching ePower PDU\nPolycom SoundPoint IP Telephone",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5989",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.123",
            "system": "Cyber Switching ePower PDU\nPolycom SoundPoint IP Telephone",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.123",
            "system": "Cyber Switching ePower PDU\nPolycom SoundPoint IP Telephone",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5989",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=NC/L=RTP/O=System X/CN=IMM2-40f2e9a15316"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.123",
            "system": "Cyber Switching ePower PDU\nPolycom SoundPoint IP Telephone",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5989",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=NC/L=RTP/O=System X/CN=IMM2-40f2e9a15316\n|-Not After : Aug 17 00:11:29 2024 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=NC/L=RTP/O=System X/CN=IMM2-40f2e9a15316\n|-Issuer  : C=US/ST=NC/L=RTP/O=System X/CN=IMM2-40f2e9a15316"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.123",
            "system": "Cyber Switching ePower PDU\nPolycom SoundPoint IP Telephone",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=NC/L=RTP/O=System X/CN=IMM2-40f2e9a15316"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.123",
            "system": "Cyber Switching ePower PDU\nPolycom SoundPoint IP Telephone",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=NC/L=RTP/O=System X/CN=IMM2-40f2e9a15316\n|-Not After : Aug 17 00:11:29 2024 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=NC/L=RTP/O=System X/CN=IMM2-40f2e9a15316\n|-Issuer  : C=US/ST=NC/L=RTP/O=System X/CN=IMM2-40f2e9a15316"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.123",
            "system": "Cyber Switching ePower PDU\nPolycom SoundPoint IP Telephone",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "5989",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=NC, L=RTP, O=System X, CN=IMM2-40f2e9a15316\nIssuer           : C=US, ST=NC, L=RTP, O=System X, CN=IMM2-40f2e9a15316\nNot valid before : Aug 20 00:11:29 2014 GMT\nNot valid after  : Aug 17 00:11:29 2024 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.123",
            "system": "Cyber Switching ePower PDU\nPolycom SoundPoint IP Telephone",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=NC, L=RTP, O=System X, CN=IMM2-40f2e9a15316\nIssuer           : C=US, ST=NC, L=RTP, O=System X, CN=IMM2-40f2e9a15316\nNot valid before : Aug 20 00:11:29 2014 GMT\nNot valid after  : Aug 17 00:11:29 2024 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.123",
            "system": "Cyber Switching ePower PDU\nPolycom SoundPoint IP Telephone",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.123",
            "system": "Cyber Switching ePower PDU\nPolycom SoundPoint IP Telephone",
            "os": "other",
            "pluginid": "42263",
            "pluginname": "Unencrypted Telnet Server",
            "hostname": "",
            "port": "23",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host is running a Telnet server over an unencrypted channel.\n\nUsing Telnet over an unencrypted channel is not recommended as logins, passwords, and commands are transferred in cleartext. This allows a remote, man-in-the-middle attacker to eavesdrop on a Telnet session to obtain credentials or other sensitive information and to modify traffic exchanged between a client and server.\n\nSSH is preferred over Telnet since it protects credentials from eavesdropping and can tunnel additional data streams such as an X11 session.",
            "solution": "Disable the Telnet service and use SSH instead.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "5.8",
            "see_also": "",
            "plugin_output": "Nessus collected the following banner from the remote Telnet server :\n------------------------------ snip ------------------------------\nWelcome to the server management network terminal!\nlogin:\n------------------------------ snip ------------------------------"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.121",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "20007",
            "pluginname": "SSL Version 2 and 3 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote service accepts connections encrypted using SSL 2.0 and/or SSL 3.0. These versions of SSL are affected by several cryptographic flaws, including:\n\n  - An insecure padding scheme with CBC ciphers.\n\n  - Insecure session renegotiation and resumption schemes.\n\nAn attacker can exploit these flaws to conduct man-in-the-middle attacks or to decrypt communications between the affected service and clients.\n\nAlthough SSL/TLS has a secure means for choosing the highest supported version of the protocol (so that these versions will be used only if the client or server support nothing better), many web browsers implement this in an unsafe way that allows an attacker to downgrade a connection (such as in POODLE). Therefore, it is recommended that these protocols be disabled entirely.\n\nNIST has determined that SSL 3.0 is no longer acceptable for secure communications. As of the date of enforcement found in PCI DSS v3.1, any version of SSL will not meet the PCI SSC's definition of 'strong cryptography'.",
            "solution": "Consult the application's documentation to disable SSL 2.0 and 3.0.\nUse TLS 1.2 (with approved cipher suites) or higher instead.",
            "cve": "",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "https://www.schneier.com/academic/paperfiles/paper-ssl.pdf\nhttp://www.nessus.org/u?b06c7e95\nhttp://www.nessus.org/u?247c4540\nhttps://www.openssl.org/~bodo/ssl-poodle.pdf\nhttp://www.nessus.org/u?5d15ba70\nhttps://www.imperialviolet.org/2014/10/14/poodle.html\nhttps://tools.ietf.org/html/rfc7507\nhttps://tools.ietf.org/html/rfc7568",
            "plugin_output": "- SSLv3 is enabled and the server supports at least one cipher.\nExplanation: TLS 1.0 and SSL 3.0 cipher suites may be used with SSLv3\nMedium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                                   RSA           RSA      3DES-CBC(168)          SHA1\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nAES128-SHA                                     RSA           RSA      AES-CBC(128)           SHA1\nAES256-SHA                                     RSA           RSA      AES-CBC(256)           SHA1\nRC4-MD5                                        RSA           RSA      RC4(128)               MD5\nRC4-SHA                                        RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.121",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.121",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.121",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.121",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.121",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Mar 24 09:11:51 2016 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.121",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "69551",
            "pluginname": "SSL Certificate Chain Contains RSA Keys Less Than 2048 bits",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "At least one of the X.509 certificates sent by the remote host has a key that is shorter than 2048 bits. According to industry standards set by the Certification Authority/Browser (CA/B) Forum, certificates issued after January 1, 2014 must be at least 2048 bits.\n\nSome browser SSL implementations may reject keys less than 2048 bits after January 1, 2014. Additionally, some SSL certificate vendors may revoke certificates less than 2048 bits before January 1, 2014.\n\nNote that Nessus will not flag root certificates with RSA keys less than 2048 bits if they were issued prior to December 31, 2010, as the standard considers them exempt.",
            "solution": "Replace the certificate in the chain with the RSA key less than 2048 bits in length with a longer key, and reissue any certificates signed by the old certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "https://www.cabforum.org/wp-content/uploads/Baseline_Requirements_V1.pdf",
            "plugin_output": "The following certificates were part of the certificate chain\nsent by the remote host, but contain RSA keys that are considered\nto be weak :\n|-Subject        : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-RSA Key Length : 1024 bits"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.121",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Apr 20 09:11:51 2011 GMT\nNot valid after  : Mar 24 09:11:51 2016 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.121",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.121",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "84638",
            "pluginname": "OpenSSH < 6.9 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "3",
            "description": "According to its banner, the version of OpenSSH running on the remote host is prior to 6.9. It is, therefore, affected by the following vulnerabilities :\n\n  - A flaw exists within the x11_open_helper() function in     the 'channels.c' file that allows connections to be     permitted after 'ForwardX11Timeout' has expired. A     remote attacker can exploit this to bypass timeout     checks and XSECURITY restrictions. (CVE-2015-5352)\n\n  - Various issues were addressed by fixing the weakness in     agent locking by increasing the failure delay, storing     the salted hash of the password, and using a timing-safe     comparison function.\n\n  - An out-of-bounds read error exists when handling     incorrect pattern lengths. A remote attacker can exploit     this to cause a denial of service or disclose sensitive     information in the memory.\n\n  - An out-of-bounds read error exists when parsing the     'EscapeChar' configuration option.",
            "solution": "Upgrade to OpenSSH 6.9 or later.",
            "cve": "CVE-2015-5352",
            "cvss3": "",
            "cvss2": "8.5",
            "see_also": "http://www.openssh.com/txt/release-6.9\nhttp://www.nessus.org/u?725c4682",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_6.6\nInstalled version : 6.6\nFixed version     : 6.9"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.121",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "106608",
            "pluginname": "OpenSSH 5.4 < 7.1p2 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "3",
            "description": "According to its banner, the version of OpenSSH running on the remote host is 5.x prior to 5.4, 6.x or 7.x prior to 7.1p2. It is, therefore, affected by multiple vulnerabilities. \n\n  - A potential information disclosure vulnerability which     may allow remote servers to obtain sensitive information     from process memory by requesting transmission of an     entire buffer (CVE-2016-0777)\n\n  - A denial of service vulnerability due to a heap-base     overflow in roaming_common.c (CVE-2016-0778)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSH version 7.1p2 or later.",
            "cve": "CVE-2016-0777",
            "cvss3": "8.1",
            "cvss2": "4.6",
            "see_also": "http://www.openssh.com/txt/release-7.1p2",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_6.6\nInstalled version : 6.6\nFixed version     : 7.1p2 / 7.2"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.121",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "90023",
            "pluginname": "OpenSSH < 7.2p2 X11Forwarding xauth Command Injection",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its banner, the version of OpenSSH running on the remote host is prior to 7.2p2. It is, therefore, affected by a security bypass vulnerability due to improper sanitization of X11 authentication credentials. An authenticated, remote attacker can exploit this, via crafted credentials, to inject arbitrary xauth commands, resulting in gaining read and write access to arbitrary files, connecting to local ports, or performing further attacks on xauth itself. Note that exploiting this vulnerability requires X11Forwarding to have been enabled.",
            "solution": "Upgrade to OpenSSH version 7.2p2 / 7.3 or later.",
            "cve": "CVE-2016-3115",
            "cvss3": "6.4",
            "cvss2": "5.5",
            "see_also": "http://www.openssh.com/txt/release-7.2p2\nhttp://www.openssh.com/txt/x11fwd.adv",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_6.6\nInstalled version : 6.6\nFixed version     : 7.2p2 / 7.3"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.121",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "93194",
            "pluginname": "OpenSSH < 7.3 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "3",
            "description": "According to its banner, the version of OpenSSH running on the remote host is prior to 7.3. It is, therefore, affected by multiple vulnerabilities :\n\n  - A local privilege escalation when the UseLogin feature     is enabled and PAM is configured to read .pam_environment     files from home directories. (CVE-2015-8325)\n\n  - A flaw exists that is due to the program returning     shorter response times for authentication requests with     overly long passwords for invalid users than for valid     users. This may allow a remote attacker to conduct a     timing attack and enumerate valid usernames.\n    (CVE-2016-6210)\n\n  - A denial of service vulnerability exists in the     auth_password() function in auth-passwd.c due to a     failure to limit password lengths for password     authentication. An unauthenticated, remote attacker can     exploit this, via a long string, to consume excessive     CPU resources, resulting in a denial of service     condition. (CVE-2016-6515)\n\n  - An unspecified flaw exists in the CBC padding oracle     countermeasures that allows an unauthenticated, remote     attacker to conduct a timing attack.\n\n  - A flaw exists due to improper operation ordering of MAC     verification for Encrypt-then-MAC (EtM) mode transport     MAC algorithms when verifying the MAC before decrypting     any ciphertext. An unauthenticated, remote attacker can     exploit this, via a timing attack, to disclose sensitive     information.\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSH version 7.3 or later.",
            "cve": "CVE-2015-8325",
            "cvss3": "7.8",
            "cvss2": "7.2",
            "see_also": "http://www.openssh.com/txt/release-7.3\nhttps://marc.info/?l=openbsd-announce&m=147005433429403",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_6.6\nInstalled version : 6.6\nFixed version     : 7.3"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.121",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "103781",
            "pluginname": "OpenSSH < 7.6",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its banner, the version of OpenSSH running on the remote host is prior to 7.6. It is, therefore, affected by a file creation restriction bypass vulnerability related to the 'process_open' function in the file 'sftp-server.c' that allows authenticated users to create zero-length files regardless of configuration.\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSH version 7.6 or later.",
            "cve": "CVE-2017-15906",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?09ca048b\nhttp://www.nessus.org/u?96a8ea52\nhttp://www.openssh.com/txt/release-7.6",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_6.6\nInstalled version : 6.6\nFixed version     : 7.6"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.121",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "90022",
            "pluginname": "OpenSSH < 7.2 Untrusted X11 Forwarding Fallback Security Bypass",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "4",
            "description": "According to its banner, the version of OpenSSH running on the remote host is prior to 7.2. It is, therefore, affected by a security bypass vulnerability due to a flaw in ssh(1) that is triggered when it falls back from untrusted X11 forwarding to trusted forwarding when the SECURITY extension is disabled by the X server. This can result in untrusted X11 connections that can be exploited by a remote attacker.",
            "solution": "Upgrade to OpenSSH version 7.2 or later.",
            "cve": "CVE-2016-1908",
            "cvss3": "9.8",
            "cvss2": "7.5",
            "see_also": "http://www.openssh.com/txt/release-7.2",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_6.6\nInstalled version : 6.6\nFixed version     : 7.2"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.121",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "96151",
            "pluginname": "OpenSSH < 7.4 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "3",
            "description": "According to its banner, the version of OpenSSH running on the remote host is prior to 7.4. It is, therefore, affected by multiple vulnerabilities :\n\n  - A flaw exists in ssh-agent due to loading PKCS#11     modules from paths that are outside a trusted whitelist.\n    A local attacker can exploit this, by using a crafted     request to load hostile modules via agent forwarding, to     execute arbitrary code. To exploit this vulnerability,     the attacker would need to control the forwarded     agent-socket (on the host running the sshd server) and     the ability to write to the file system of the host     running ssh-agent. (CVE-2016-10009)\n\n  - A flaw exists in sshd due to creating forwarded     Unix-domain sockets with 'root' privileges whenever     privilege separation is disabled. A local attacker can     exploit this to gain elevated privileges.\n    (CVE-2016-10010)\n\n  - An information disclosure vulnerability exists in sshd     within the realloc() function due leakage of key     material to privilege-separated child processes when     reading keys. A local attacker can possibly exploit this     to disclose sensitive key material. Note that no such     leak has been observed in practice for normal-sized     keys, nor does a leak to the child processes directly     expose key material to unprivileged users.\n    (CVE-2016-10011)\n\n  - A flaw exists in sshd within the shared memory manager     used by pre-authenticating compression support due to a     bounds check being elided by some optimizing compilers     and due to the memory manager being incorrectly     accessible when pre-authenticating compression is     disabled. A local attacker can exploit this to gain     elevated privileges. (CVE-2016-10012)\n\n  - A denial of service vulnerability exists in sshd when     handling KEXINIT messages. An unauthenticated, remote     attacker can exploit this, by sending multiple KEXINIT     messages, to consume up to 128MB per connection.\n\n  - A flaw exists in sshd due to improper validation of     address ranges by the AllowUser and DenyUsers     directives at configuration load time. A local attacker     can exploit this, via an invalid CIDR address range, to     gain access to restricted areas.\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSH version 7.4 or later.",
            "cve": "CVE-2016-10009",
            "cvss3": "7.3",
            "cvss2": "7.5",
            "see_also": "http://www.openssh.com/txt/release-7.4",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_6.6\nInstalled version : 6.6\nFixed version     : 7.4"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.121",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "159490",
            "pluginname": "OpenSSH < 7.8",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its banner, the version of OpenSSH running on the remote host is prior to 7.8. It is, therefore, affected by an information disclosure vulnerability in the auth2-gss.c, auth2-hostbased.c, and auth2-pubkey due to not delaying for an invalid authenticating user. An unauthenticated, remote attacker can exploit this, via a malformed packet, to potentially enumerate users.\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSH version 7.8 or later.",
            "cve": "CVE-2018-15473",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "https://www.openwall.com/lists/oss-security/2018/08/15/5\nhttps://www.openssh.com/txt/release-7.8",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_6.6\nInstalled version : 6.6\nFixed version     : 7.8"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.121",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "159491",
            "pluginname": "OpenSSH < 8.0",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its banner, the version of OpenSSH running on the remote host is prior to 8.0. It is, therefore, affected by the following vulnerabilities:\n\n  - A permission bypass vulnerability due to improper directory name validation. An unauthenticated, remote     attacker can exploit this, with a specially crafted scp server, to change the permission of a directory     on the client. (CVE-2018-20685)\n\n  - Multiple arbitrary file downloads due to improper validation of object name and stderr output. An unauthenticated     remote attacker can exploit this, with a specially crafted scp server, to include additional hidden     files in the transfer. (CVE-2019-6109, CVE-2019-6110)\n\n  - An arbitrary file write vulnerability due to improper object name validation. An unauthenticated, remote     attacker can exploit this, with a specially crafted scp server, to overwrite arbitrary files in the     client directory. (CVE-2019-6111)\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSH version 8.0 or later.",
            "cve": "CVE-2018-20685",
            "cvss3": "6.8",
            "cvss2": "5.8",
            "see_also": "https://sintonen.fi/advisories/scp-client-multiple-vulnerabilities.txt\nhttps://www.openssh.com/txt/release-8.0",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_6.6\nInstalled version : 6.6\nFixed version     : 8.0"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.121",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "99359",
            "pluginname": "OpenSSH < 7.5 ",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its banner, the version of OpenSSH running on the remote host is prior to 7.5. It is, therefore, affected by an information disclosure vulnerability :\n\n  - An unspecified timing flaw exists in the CBC padding     oracle countermeasures, within the ssh and sshd     functions, that allows an unauthenticated, remote     attacker to disclose potentially sensitive information.\n    Note that the OpenSSH client disables CBC ciphers by     default. However, sshd offers them as lowest-preference     options, which will be removed by default in a future     release.\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSH version 7.5 or later.",
            "cve": "",
            "cvss3": "5.9",
            "cvss2": "5.0",
            "see_also": "http://www.openssh.com/txt/release-7.5",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_6.6\nInstalled version : 6.6\nFixed version     : 7.5"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.121",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "85382",
            "pluginname": "OpenSSH < 7.0 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its banner, the version of OpenSSH running on the remote host is prior to 7.0. It is, therefore, affected by the following vulnerabilities :\n\n  - A security bypass vulnerability exists in the     kbdint_next_device() function in file auth2-chall.c that     allows the circumvention of MaxAuthTries during     keyboard-interactive authentication. A remote attacker     can exploit this issue to force the same authentication     method to be tried thousands of times in a single pass     by using a crafted keyboard-interactive 'devices'     string, thus allowing a brute-force attack or causing a     denial of service. (CVE-2015-5600)\n\n  - A security bypass vulnerability exists in sshd due to     improper handling of username data in     MONITOR_REQ_PAM_INIT_CTX requests. A local attacker can     exploit this, by sending a MONITOR_REQ_PWNAM request, to     conduct an impersonation attack. Note that this issue     only affects Portable OpenSSH. (CVE-2015-6563)\n\n  - A privilege escalation vulnerability exists due to a     use-after-free error in sshd that is triggered when     handling a MONITOR_REQ_PAM_FREE_CTX request. A local     attacker can exploit this to gain elevated privileges.\n    Note that this issue only affects Portable OpenSSH.\n    (CVE-2015-6564)\n\n  - A local command execution vulnerability exists in sshd     due to setting insecure world-writable permissions for     TTYs. A local attacker can exploit this, by injecting     crafted terminal escape sequences, to execute commands     for logged-in users. (CVE-2015-6565)",
            "solution": "Upgrade to OpenSSH 7.0 or later.",
            "cve": "CVE-2015-5600",
            "cvss3": "6.1",
            "cvss2": "8.5",
            "see_also": "http://www.openssh.com/txt/release-7.0",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_6.6\nInstalled version : 6.6\nFixed version     : 7.0"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.121",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "187201",
            "pluginname": "OpenSSH < 9.6 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple vulnerabilities as referenced in the release-9.6 advisory.\n\n  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by     Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of     the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the     commencement of encryption, and deleting an equal number of consecutive messages immediately after     encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While     cryptographically novel, the security impact of this attack is fortunately very limited as it only allows     deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user     user authentication from proceeding and results in a stuck connection. The most serious identified impact     is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing     the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.\n    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this     protocol weakness through a new strict KEX protocol extension that will be automatically enabled when     both the client and server support it. This extension makes two changes to the SSH transport protocol to     improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the     connection if any unnecessary or unexpected message is received during key exchange (including messages     that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability     from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of     each key exchange, preventing previously inserted messages from being able to make persistent changes to     the sequence number across completion of a key exchange. Either of these changes should be sufficient to     thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source     distribition. (CVE-2023-48795)\n\n  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the     PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular     private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)\n\n  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a     ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h     or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could     potentially perform command injection depending on what quoting was present in the user-supplied     ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository     could contain a submodule with shell characters in its user/hostname. Git does not ban shell     metacharacters in user or host names when checking out repositories from untrusted sources. Although we     believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially     across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters     from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be     effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters     potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject     to these restrictions, allowing configurations that use strange names to continue to be used, under the     assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSH version 9.6 or later.",
            "cve": "CVE-2023-48795",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.openssh.com/txt/release-9.6",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_6.6\nInstalled version : 6.6\nFixed version     : 9.6p1 / 9.6"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.121",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "78655",
            "pluginname": "OpenSSH SSHFP Record Verification Weakness",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its banner, the version of OpenSSH running on the remote host is 6.1 through 6.6.\n\nIt is, therefore, affected by a host verification bypass vulnerability related to SSHFP and certificates that could allow a malicious SSH server to cause the supplied client to inappropriately trust the server.",
            "solution": "Update to OpenSSH version 6.7 or later or apply the vendor patch.",
            "cve": "CVE-2014-2653",
            "cvss3": "",
            "cvss2": "5.8",
            "see_also": "http://thread.gmane.org/gmane.network.openssh.devel/20679\nhttps://tools.ietf.org/html/rfc4255\nhttps://seclists.org/oss-sec/2014/q1/663",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_6.6\nInstalled version : 6.6\nFixed version     : 6.7"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.121",
            "system": "Dell iDRAC Controller\nKYOCERA Printer\nLinux Kernel 2.6\nNet Optics Switch (Director)",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 13505 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.119",
            "system": "EPSON Stylus Printer\nLinksys Wireless Access Point\nNetgear Wireless Router (WNR1000)\nOracle Integrated Lights Out Manager",
            "os": "other",
            "pluginid": "76213",
            "pluginname": "SuperMicro IPMI PSBlock File Plaintext Password Disclosure",
            "hostname": "",
            "port": "49152",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote SuperMicro IPMI device is affected by an information disclosure vulnerability because it exposes all usernames and passwords in plaintext via the PSBlock file. A remote, unauthenticated attacker can exploit this vulnerability to download all usernames and passwords and gain a shell on the device.",
            "solution": "Upgrade to the latest BIOS version.",
            "cve": "",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "http://www.nessus.org/u?8762dc4d",
            "plugin_output": "URL : http://10.27.8.119:49152/PSBlock\nNessus discovered the following usernames and passwords :\nUsername : Anonymous\nPassword : a******n\nUsername : root\nPassword : a******#"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.119",
            "system": "EPSON Stylus Printer\nLinksys Wireless Access Point\nNetgear Wireless Router (WNR1000)\nOracle Integrated Lights Out Manager",
            "os": "other",
            "pluginid": "46802",
            "pluginname": "SBLIM-SFCB Multiple Buffer Overflows",
            "hostname": "",
            "port": "5988",
            "protocol": "tcp",
            "severity": "4",
            "description": "The web server component of SBLIM-SFCB that is listening on the remote host contains multiple heap-based buffer overflows that can be triggered by sending an HTTP request with a specially crafted Content-Length header.  Specifically :\n\n - There is a particular scenario where heap corruption can    exist if httpMaxContentLength in sfcb.cfg is set to 0    and the Content-Length of a request is 4294967290,    getPayload() will try to memcpy() into an incorrectly    sized buffer due to wrap around (we add 8 to    Content-Length in the malloc). Also, sfcb.cfg states    that the default value for httpMaxContentLength _is_ 0,    which is untrue.\n\n - httpAdapter contains a heap overflow that is caused by an    HTTP request with the Content-Length value being smaller    than the actual size of the payload. The affect of this bug    can cause the handling HTTP process to crash. If the    request is specially crafted, arbitrary code execution    could occur.\n\nSuccessful exploit of these vulnerabilities may result in a server crash or execution of arbitrary code in the context of the server.",
            "solution": "Upgrade to version 1.3.8",
            "cve": "CVE-2010-1937",
            "cvss3": "",
            "cvss2": "10.0",
            "see_also": "http://www.nessus.org/u?149a07e1\nhttp://www.nessus.org/u?8729b62f",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.8.119",
            "system": "EPSON Stylus Printer\nLinksys Wireless Access Point\nNetgear Wireless Router (WNR1000)\nOracle Integrated Lights Out Manager",
            "os": "other",
            "pluginid": "20007",
            "pluginname": "SSL Version 2 and 3 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote service accepts connections encrypted using SSL 2.0 and/or SSL 3.0. These versions of SSL are affected by several cryptographic flaws, including:\n\n  - An insecure padding scheme with CBC ciphers.\n\n  - Insecure session renegotiation and resumption schemes.\n\nAn attacker can exploit these flaws to conduct man-in-the-middle attacks or to decrypt communications between the affected service and clients.\n\nAlthough SSL/TLS has a secure means for choosing the highest supported version of the protocol (so that these versions will be used only if the client or server support nothing better), many web browsers implement this in an unsafe way that allows an attacker to downgrade a connection (such as in POODLE). Therefore, it is recommended that these protocols be disabled entirely.\n\nNIST has determined that SSL 3.0 is no longer acceptable for secure communications. As of the date of enforcement found in PCI DSS v3.1, any version of SSL will not meet the PCI SSC's definition of 'strong cryptography'.",
            "solution": "Consult the application's documentation to disable SSL 2.0 and 3.0.\nUse TLS 1.2 (with approved cipher suites) or higher instead.",
            "cve": "",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "https://www.schneier.com/academic/paperfiles/paper-ssl.pdf\nhttp://www.nessus.org/u?b06c7e95\nhttp://www.nessus.org/u?247c4540\nhttps://www.openssl.org/~bodo/ssl-poodle.pdf\nhttp://www.nessus.org/u?5d15ba70\nhttps://www.imperialviolet.org/2014/10/14/poodle.html\nhttps://tools.ietf.org/html/rfc7507\nhttps://tools.ietf.org/html/rfc7568",
            "plugin_output": "- SSLv3 is enabled and the server supports at least one cipher.\nExplanation: TLS 1.0 and SSL 3.0 cipher suites may be used with SSLv3\nLow Strength Ciphers (<= 64-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC-SHA                                    RSA           RSA      DES-CBC(56)            SHA1\nMedium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                                   RSA           RSA      3DES-CBC(168)          SHA1\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nAES128-SHA                                     RSA           RSA      AES-CBC(128)           SHA1\nAES256-SHA                                     RSA           RSA      AES-CBC(256)           SHA1\nIDEA-CBC-SHA                                   RSA           RSA      IDEA-CBC(128)          SHA1\nRC4-MD5                                        RSA           RSA      RC4(128)               MD5\nRC4-SHA                                        RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.119",
            "system": "EPSON Stylus Printer\nLinksys Wireless Access Point\nNetgear Wireless Router (WNR1000)\nOracle Integrated Lights Out Manager",
            "os": "other",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.119",
            "system": "EPSON Stylus Printer\nLinksys Wireless Access Point\nNetgear Wireless Router (WNR1000)\nOracle Integrated Lights Out Manager",
            "os": "other",
            "pluginid": "78479",
            "pluginname": "SSLv3 Padding Oracle On Downgraded Legacy Encryption Vulnerability (POODLE)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "The remote host is affected by a man-in-the-middle (MitM) information disclosure vulnerability known as POODLE. The vulnerability is due to the way SSL 3.0 handles padding bytes when decrypting messages encrypted using block ciphers in cipher block chaining (CBC) mode.\nMitM attackers can decrypt a selected byte of a cipher text in as few as 256 tries if they are able to force a victim application to repeatedly send the same data over newly created SSL 3.0 connections.\n\nAs long as a client and service both support SSLv3, a connection can be 'rolled back' to SSLv3, even if TLSv1 or newer is supported by the client and service.\n\nThe TLS Fallback SCSV mechanism prevents 'version rollback' attacks without impacting legacy clients; however, it can only protect connections when the client and service support the mechanism. Sites that cannot disable SSLv3 immediately should enable this mechanism.\n\nThis is a vulnerability in the SSLv3 specification, not in any particular SSL implementation. Disabling SSLv3 is the only way to completely mitigate the vulnerability.",
            "solution": "Disable SSLv3.\n\nServices that must support SSLv3 should enable the TLS Fallback SCSV mechanism until SSLv3 can be disabled.",
            "cve": "CVE-2014-3566",
            "cvss3": "3.4",
            "cvss2": "4.3",
            "see_also": "https://www.imperialviolet.org/2014/10/14/poodle.html\nhttps://www.openssl.org/~bodo/ssl-poodle.pdf\nhttps://tools.ietf.org/html/draft-ietf-tls-downgrade-scsv-00",
            "plugin_output": "Nessus determined that the remote server supports SSLv3 with at least one CBC\ncipher suite, indicating that this server is vulnerable.\nIt appears that TLSv1 or newer is supported on the server. However, the\nFallback SCSV mechanism is not supported, allowing connections to be \"rolled\nback\" to SSLv3."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.119",
            "system": "EPSON Stylus Printer\nLinksys Wireless Access Point\nNetgear Wireless Router (WNR1000)\nOracle Integrated Lights Out Manager",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.119",
            "system": "EPSON Stylus Printer\nLinksys Wireless Access Point\nNetgear Wireless Router (WNR1000)\nOracle Integrated Lights Out Manager",
            "os": "other",
            "pluginid": "26928",
            "pluginname": "SSL Weak Cipher Suites Supported",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of SSL ciphers that offer weak encryption.\n\nNote: This is considerably easier to exploit if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application, if possible to avoid the use of weak ciphers.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "4.3",
            "see_also": "http://www.nessus.org/u?6527892d",
            "plugin_output": "Here is the list of weak SSL ciphers supported by the remote server :\nLow Strength Ciphers (<= 64-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC-SHA                   0x00, 0x09       RSA           RSA      DES-CBC(56)            SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.119",
            "system": "EPSON Stylus Printer\nLinksys Wireless Access Point\nNetgear Wireless Router (WNR1000)\nOracle Integrated Lights Out Manager",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.119",
            "system": "EPSON Stylus Printer\nLinksys Wireless Access Point\nNetgear Wireless Router (WNR1000)\nOracle Integrated Lights Out Manager",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=Aten/OU=SW1/CN=doris/E=doris@aten.com.tw"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.119",
            "system": "EPSON Stylus Printer\nLinksys Wireless Access Point\nNetgear Wireless Router (WNR1000)\nOracle Integrated Lights Out Manager",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=TW/ST=Taiwan/L=Taipei/O=Aten/OU=SW1/CN=doris/E=doris@aten.com.tw\n|-Not After : Jun 10 08:34:28 2009 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=Aten/OU=SW1/CN=doris/E=doris@aten.com.tw\n|-Issuer  : C=TW/ST=Taiwan/L=Taipei/O=Aten/OU=SW1/CN=doris/E=doris@aten.com.tw"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.119",
            "system": "EPSON Stylus Printer\nLinksys Wireless Access Point\nNetgear Wireless Router (WNR1000)\nOracle Integrated Lights Out Manager",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=TW, ST=Taiwan, L=Taipei, O=Aten, OU=SW1, CN=doris, emailAddress=doris@aten.com.tw\nIssuer           : C=TW, ST=Taiwan, L=Taipei, O=Aten, OU=SW1, CN=doris, emailAddress=doris@aten.com.tw\nNot valid before : Jun 10 08:34:28 2008 GMT\nNot valid after  : Jun 10 08:34:28 2009 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.119",
            "system": "EPSON Stylus Printer\nLinksys Wireless Access Point\nNetgear Wireless Router (WNR1000)\nOracle Integrated Lights Out Manager",
            "os": "other",
            "pluginid": "42880",
            "pluginname": "SSL / TLS Renegotiation Handshakes MiTM Plaintext Data Injection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service encrypts traffic using TLS / SSL but allows a client to insecurely renegotiate the connection after the initial handshake.\nAn unauthenticated, remote attacker may be able to leverage this issue to inject an arbitrary amount of plaintext into the beginning of the application protocol stream, which could facilitate man-in-the-middle attacks if the service assumes that the sessions before and after renegotiation are from the same 'client' and merges them at the application layer.",
            "solution": "Contact the vendor for specific patch information.",
            "cve": "CVE-2009-3555",
            "cvss3": "",
            "cvss2": "5.8",
            "see_also": "http://www.ietf.org/mail-archive/web/tls/current/msg03948.html\nhttp://www.g-sec.lu/practicaltls.pdf\nhttps://tools.ietf.org/html/rfc5746",
            "plugin_output": "TLSv1 supports insecure renegotiation.\nSSLv3 supports insecure renegotiation."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.119",
            "system": "EPSON Stylus Printer\nLinksys Wireless Access Point\nNetgear Wireless Router (WNR1000)\nOracle Integrated Lights Out Manager",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.119",
            "system": "EPSON Stylus Printer\nLinksys Wireless Access Point\nNetgear Wireless Router (WNR1000)\nOracle Integrated Lights Out Manager",
            "os": "other",
            "pluginid": "70545",
            "pluginname": "Dropbear SSH Server < 2013.59 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its self-reported banner, the version of Dropbear SSH running on this port is earlier than 2013.59.  As such, it is potentially affected by multiple vulnerabilities :\n\n  - A denial of service vulnerability caused by the way the     'buf_decompress()' function handles compressed files.\n    (CVE-2013-4421)\n\n  - User-enumeration is possible due to a timing error when     authenticating users. (CVE-2013-4434)",
            "solution": "Upgrade to the Dropbear SSH 2013.59 or later.",
            "cve": "CVE-2013-4421",
            "cvss3": "",
            "cvss2": "5.0",
            "see_also": "https://matt.ucc.asn.au/dropbear/CHANGES\nhttps://secure.ucc.asn.au/hg/dropbear/rev/0bf76f54de6f\nhttps://secure.ucc.asn.au/hg/dropbear/rev/a625f9e135a4",
            "plugin_output": "Version source    : SSH-2.0-dropbear_0.52\nInstalled version : 0.52\nFixed version     : 2013.59"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.119",
            "system": "EPSON Stylus Printer\nLinksys Wireless Access Point\nNetgear Wireless Router (WNR1000)\nOracle Integrated Lights Out Manager",
            "os": "other",
            "pluginid": "93650",
            "pluginname": "Dropbear SSH Server < 2016.72 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "4",
            "description": "According to its self-reported version in its banner, Dropbear SSH running on the remote host is prior to 2016.74. It is, therefore, affected by the following vulnerabilities :\n\n  - A format string flaw exists due to improper handling of     string format specifiers (e.g., %s and %x) in usernames     and host arguments. An unauthenticated, remote attacker     can exploit this to execute arbitrary code with root     privileges. (CVE-2016-7406)\n\n  - A flaw exists in dropbearconvert due to improper     handling of specially crafted OpenSSH key files. An     unauthenticated, remote attacker can exploit this to     execute arbitrary code. (CVE-2016-7407)\n\n  - A flaw exists in dbclient when handling the -m or -c     arguments in scripts. An unauthenticated, remote attacker     can exploit this, via a specially crafted script, to     execute arbitrary code. (CVE-2016-7408)\n\n  - A flaw exists in dbclient or dropbear server if they are     compiled with the DEBUG_TRACE option and then run using     the -v switch. A local attacker can exploit this to     disclose process memory. (CVE-2016-7409)",
            "solution": "Upgrade to Dropbear SSH version 2016.74 or later.",
            "cve": "CVE-2016-7406",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "https://matt.ucc.asn.au/dropbear/CHANGES",
            "plugin_output": "Version source    : SSH-2.0-dropbear_0.52\nInstalled version : 0.52\nFixed version     : 2016.74"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.119",
            "system": "EPSON Stylus Printer\nLinksys Wireless Access Point\nNetgear Wireless Router (WNR1000)\nOracle Integrated Lights Out Manager",
            "os": "other",
            "pluginid": "58183",
            "pluginname": "Dropbear SSH Server Channel Concurrency Use-after-free Remote Code Execution",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "3",
            "description": "According to its self-reported banner, the remote host is running a version of Dropbear SSH before 2012.55.  As such, it reportedly contains a flaw that might allow an attacker to run arbitrary code on the remote host with root privileges if they are authenticated using a public key and command restriction is enforced. \n\nNote that Nessus has not tried to exploit this vulnerability but instead has relied solely on the version in the service's banner. \n\nNote also, in cases where the host is running ESXi 4.0 or ESXi 4.1, VMware states in their KB article id 2037316 that this is a false positive since administrative access is required to login via SSH so there are no privileges to be gained by exploiting this issue.  That is true only in a default setup, not one in which SSH access has been enabled for non-root users.",
            "solution": "Upgrade to the Dropbear SSH 2012.55 or later.",
            "cve": "CVE-2012-0920",
            "cvss3": "",
            "cvss2": "7.1",
            "see_also": "https://matt.ucc.asn.au/dropbear/CHANGES\nhttps://secure.ucc.asn.au/hg/dropbear/rev/818108bf7749\nhttps://mantor.org/~northox/misc/CVE-2012-0920.html\nhttp://www.nessus.org/u?b2ca47ea",
            "plugin_output": "Version source    : SSH-2.0-dropbear_0.52\nInstalled version : 0.52\nFixed version     : 2012.55"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.119",
            "system": "EPSON Stylus Printer\nLinksys Wireless Access Point\nNetgear Wireless Router (WNR1000)\nOracle Integrated Lights Out Manager",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 806 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.117",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.117",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.117",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Feb 24 09:11:35 2022 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.117",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Feb 24 09:11:35 2017 GMT\nNot valid after  : Feb 24 09:11:35 2022 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.117",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.116",
            "system": "EPSON Stylus Printer\nLinksys Wireless Access Point\nNetgear Wireless Router (WNR1000)\nOracle Integrated Lights Out Manager",
            "os": "other",
            "pluginid": "46802",
            "pluginname": "SBLIM-SFCB Multiple Buffer Overflows",
            "hostname": "",
            "port": "5988",
            "protocol": "tcp",
            "severity": "4",
            "description": "The web server component of SBLIM-SFCB that is listening on the remote host contains multiple heap-based buffer overflows that can be triggered by sending an HTTP request with a specially crafted Content-Length header.  Specifically :\n\n - There is a particular scenario where heap corruption can    exist if httpMaxContentLength in sfcb.cfg is set to 0    and the Content-Length of a request is 4294967290,    getPayload() will try to memcpy() into an incorrectly    sized buffer due to wrap around (we add 8 to    Content-Length in the malloc). Also, sfcb.cfg states    that the default value for httpMaxContentLength _is_ 0,    which is untrue.\n\n - httpAdapter contains a heap overflow that is caused by an    HTTP request with the Content-Length value being smaller    than the actual size of the payload. The affect of this bug    can cause the handling HTTP process to crash. If the    request is specially crafted, arbitrary code execution    could occur.\n\nSuccessful exploit of these vulnerabilities may result in a server crash or execution of arbitrary code in the context of the server.",
            "solution": "Upgrade to version 1.3.8",
            "cve": "CVE-2010-1937",
            "cvss3": "",
            "cvss2": "10.0",
            "see_also": "http://www.nessus.org/u?149a07e1\nhttp://www.nessus.org/u?8729b62f",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.8.116",
            "system": "EPSON Stylus Printer\nLinksys Wireless Access Point\nNetgear Wireless Router (WNR1000)\nOracle Integrated Lights Out Manager",
            "os": "other",
            "pluginid": "76213",
            "pluginname": "SuperMicro IPMI PSBlock File Plaintext Password Disclosure",
            "hostname": "",
            "port": "49152",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote SuperMicro IPMI device is affected by an information disclosure vulnerability because it exposes all usernames and passwords in plaintext via the PSBlock file. A remote, unauthenticated attacker can exploit this vulnerability to download all usernames and passwords and gain a shell on the device.",
            "solution": "Upgrade to the latest BIOS version.",
            "cve": "",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "http://www.nessus.org/u?8762dc4d",
            "plugin_output": "URL : http://10.27.8.116:49152/PSBlock\nNessus discovered the following usernames and passwords :\nUsername : Anonymous\nPassword : a******n\nUsername : root\nPassword : a******#"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.116",
            "system": "EPSON Stylus Printer\nLinksys Wireless Access Point\nNetgear Wireless Router (WNR1000)\nOracle Integrated Lights Out Manager",
            "os": "other",
            "pluginid": "20007",
            "pluginname": "SSL Version 2 and 3 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote service accepts connections encrypted using SSL 2.0 and/or SSL 3.0. These versions of SSL are affected by several cryptographic flaws, including:\n\n  - An insecure padding scheme with CBC ciphers.\n\n  - Insecure session renegotiation and resumption schemes.\n\nAn attacker can exploit these flaws to conduct man-in-the-middle attacks or to decrypt communications between the affected service and clients.\n\nAlthough SSL/TLS has a secure means for choosing the highest supported version of the protocol (so that these versions will be used only if the client or server support nothing better), many web browsers implement this in an unsafe way that allows an attacker to downgrade a connection (such as in POODLE). Therefore, it is recommended that these protocols be disabled entirely.\n\nNIST has determined that SSL 3.0 is no longer acceptable for secure communications. As of the date of enforcement found in PCI DSS v3.1, any version of SSL will not meet the PCI SSC's definition of 'strong cryptography'.",
            "solution": "Consult the application's documentation to disable SSL 2.0 and 3.0.\nUse TLS 1.2 (with approved cipher suites) or higher instead.",
            "cve": "",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "https://www.schneier.com/academic/paperfiles/paper-ssl.pdf\nhttp://www.nessus.org/u?b06c7e95\nhttp://www.nessus.org/u?247c4540\nhttps://www.openssl.org/~bodo/ssl-poodle.pdf\nhttp://www.nessus.org/u?5d15ba70\nhttps://www.imperialviolet.org/2014/10/14/poodle.html\nhttps://tools.ietf.org/html/rfc7507\nhttps://tools.ietf.org/html/rfc7568",
            "plugin_output": "- SSLv3 is enabled and the server supports at least one cipher.\nExplanation: TLS 1.0 and SSL 3.0 cipher suites may be used with SSLv3\nLow Strength Ciphers (<= 64-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC-SHA                                    RSA           RSA      DES-CBC(56)            SHA1\nMedium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                                   RSA           RSA      3DES-CBC(168)          SHA1\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nAES128-SHA                                     RSA           RSA      AES-CBC(128)           SHA1\nAES256-SHA                                     RSA           RSA      AES-CBC(256)           SHA1\nIDEA-CBC-SHA                                   RSA           RSA      IDEA-CBC(128)          SHA1\nRC4-MD5                                        RSA           RSA      RC4(128)               MD5\nRC4-SHA                                        RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.116",
            "system": "EPSON Stylus Printer\nLinksys Wireless Access Point\nNetgear Wireless Router (WNR1000)\nOracle Integrated Lights Out Manager",
            "os": "other",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.116",
            "system": "EPSON Stylus Printer\nLinksys Wireless Access Point\nNetgear Wireless Router (WNR1000)\nOracle Integrated Lights Out Manager",
            "os": "other",
            "pluginid": "78479",
            "pluginname": "SSLv3 Padding Oracle On Downgraded Legacy Encryption Vulnerability (POODLE)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "The remote host is affected by a man-in-the-middle (MitM) information disclosure vulnerability known as POODLE. The vulnerability is due to the way SSL 3.0 handles padding bytes when decrypting messages encrypted using block ciphers in cipher block chaining (CBC) mode.\nMitM attackers can decrypt a selected byte of a cipher text in as few as 256 tries if they are able to force a victim application to repeatedly send the same data over newly created SSL 3.0 connections.\n\nAs long as a client and service both support SSLv3, a connection can be 'rolled back' to SSLv3, even if TLSv1 or newer is supported by the client and service.\n\nThe TLS Fallback SCSV mechanism prevents 'version rollback' attacks without impacting legacy clients; however, it can only protect connections when the client and service support the mechanism. Sites that cannot disable SSLv3 immediately should enable this mechanism.\n\nThis is a vulnerability in the SSLv3 specification, not in any particular SSL implementation. Disabling SSLv3 is the only way to completely mitigate the vulnerability.",
            "solution": "Disable SSLv3.\n\nServices that must support SSLv3 should enable the TLS Fallback SCSV mechanism until SSLv3 can be disabled.",
            "cve": "CVE-2014-3566",
            "cvss3": "3.4",
            "cvss2": "4.3",
            "see_also": "https://www.imperialviolet.org/2014/10/14/poodle.html\nhttps://www.openssl.org/~bodo/ssl-poodle.pdf\nhttps://tools.ietf.org/html/draft-ietf-tls-downgrade-scsv-00",
            "plugin_output": "Nessus determined that the remote server supports SSLv3 with at least one CBC\ncipher suite, indicating that this server is vulnerable.\nIt appears that TLSv1 or newer is supported on the server. However, the\nFallback SCSV mechanism is not supported, allowing connections to be \"rolled\nback\" to SSLv3."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.116",
            "system": "EPSON Stylus Printer\nLinksys Wireless Access Point\nNetgear Wireless Router (WNR1000)\nOracle Integrated Lights Out Manager",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.116",
            "system": "EPSON Stylus Printer\nLinksys Wireless Access Point\nNetgear Wireless Router (WNR1000)\nOracle Integrated Lights Out Manager",
            "os": "other",
            "pluginid": "26928",
            "pluginname": "SSL Weak Cipher Suites Supported",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of SSL ciphers that offer weak encryption.\n\nNote: This is considerably easier to exploit if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application, if possible to avoid the use of weak ciphers.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "4.3",
            "see_also": "http://www.nessus.org/u?6527892d",
            "plugin_output": "Here is the list of weak SSL ciphers supported by the remote server :\nLow Strength Ciphers (<= 64-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC-SHA                   0x00, 0x09       RSA           RSA      DES-CBC(56)            SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.116",
            "system": "EPSON Stylus Printer\nLinksys Wireless Access Point\nNetgear Wireless Router (WNR1000)\nOracle Integrated Lights Out Manager",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.116",
            "system": "EPSON Stylus Printer\nLinksys Wireless Access Point\nNetgear Wireless Router (WNR1000)\nOracle Integrated Lights Out Manager",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.116",
            "system": "EPSON Stylus Printer\nLinksys Wireless Access Point\nNetgear Wireless Router (WNR1000)\nOracle Integrated Lights Out Manager",
            "os": "other",
            "pluginid": "42880",
            "pluginname": "SSL / TLS Renegotiation Handshakes MiTM Plaintext Data Injection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service encrypts traffic using TLS / SSL but allows a client to insecurely renegotiate the connection after the initial handshake.\nAn unauthenticated, remote attacker may be able to leverage this issue to inject an arbitrary amount of plaintext into the beginning of the application protocol stream, which could facilitate man-in-the-middle attacks if the service assumes that the sessions before and after renegotiation are from the same 'client' and merges them at the application layer.",
            "solution": "Contact the vendor for specific patch information.",
            "cve": "CVE-2009-3555",
            "cvss3": "",
            "cvss2": "5.8",
            "see_also": "http://www.ietf.org/mail-archive/web/tls/current/msg03948.html\nhttp://www.g-sec.lu/practicaltls.pdf\nhttps://tools.ietf.org/html/rfc5746",
            "plugin_output": "TLSv1 supports insecure renegotiation.\nSSLv3 supports insecure renegotiation."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.116",
            "system": "EPSON Stylus Printer\nLinksys Wireless Access Point\nNetgear Wireless Router (WNR1000)\nOracle Integrated Lights Out Manager",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=Aten/OU=SW1/CN=doris/E=doris@aten.com.tw"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.116",
            "system": "EPSON Stylus Printer\nLinksys Wireless Access Point\nNetgear Wireless Router (WNR1000)\nOracle Integrated Lights Out Manager",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=TW/ST=Taiwan/L=Taipei/O=Aten/OU=SW1/CN=doris/E=doris@aten.com.tw\n|-Not After : Jun 10 08:34:28 2009 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=Aten/OU=SW1/CN=doris/E=doris@aten.com.tw\n|-Issuer  : C=TW/ST=Taiwan/L=Taipei/O=Aten/OU=SW1/CN=doris/E=doris@aten.com.tw"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.116",
            "system": "EPSON Stylus Printer\nLinksys Wireless Access Point\nNetgear Wireless Router (WNR1000)\nOracle Integrated Lights Out Manager",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=TW, ST=Taiwan, L=Taipei, O=Aten, OU=SW1, CN=doris, emailAddress=doris@aten.com.tw\nIssuer           : C=TW, ST=Taiwan, L=Taipei, O=Aten, OU=SW1, CN=doris, emailAddress=doris@aten.com.tw\nNot valid before : Jun 10 08:34:28 2008 GMT\nNot valid after  : Jun 10 08:34:28 2009 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.116",
            "system": "EPSON Stylus Printer\nLinksys Wireless Access Point\nNetgear Wireless Router (WNR1000)\nOracle Integrated Lights Out Manager",
            "os": "other",
            "pluginid": "70545",
            "pluginname": "Dropbear SSH Server < 2013.59 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its self-reported banner, the version of Dropbear SSH running on this port is earlier than 2013.59.  As such, it is potentially affected by multiple vulnerabilities :\n\n  - A denial of service vulnerability caused by the way the     'buf_decompress()' function handles compressed files.\n    (CVE-2013-4421)\n\n  - User-enumeration is possible due to a timing error when     authenticating users. (CVE-2013-4434)",
            "solution": "Upgrade to the Dropbear SSH 2013.59 or later.",
            "cve": "CVE-2013-4421",
            "cvss3": "",
            "cvss2": "5.0",
            "see_also": "https://matt.ucc.asn.au/dropbear/CHANGES\nhttps://secure.ucc.asn.au/hg/dropbear/rev/0bf76f54de6f\nhttps://secure.ucc.asn.au/hg/dropbear/rev/a625f9e135a4",
            "plugin_output": "Version source    : SSH-2.0-dropbear_0.52\nInstalled version : 0.52\nFixed version     : 2013.59"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.116",
            "system": "EPSON Stylus Printer\nLinksys Wireless Access Point\nNetgear Wireless Router (WNR1000)\nOracle Integrated Lights Out Manager",
            "os": "other",
            "pluginid": "93650",
            "pluginname": "Dropbear SSH Server < 2016.72 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "4",
            "description": "According to its self-reported version in its banner, Dropbear SSH running on the remote host is prior to 2016.74. It is, therefore, affected by the following vulnerabilities :\n\n  - A format string flaw exists due to improper handling of     string format specifiers (e.g., %s and %x) in usernames     and host arguments. An unauthenticated, remote attacker     can exploit this to execute arbitrary code with root     privileges. (CVE-2016-7406)\n\n  - A flaw exists in dropbearconvert due to improper     handling of specially crafted OpenSSH key files. An     unauthenticated, remote attacker can exploit this to     execute arbitrary code. (CVE-2016-7407)\n\n  - A flaw exists in dbclient when handling the -m or -c     arguments in scripts. An unauthenticated, remote attacker     can exploit this, via a specially crafted script, to     execute arbitrary code. (CVE-2016-7408)\n\n  - A flaw exists in dbclient or dropbear server if they are     compiled with the DEBUG_TRACE option and then run using     the -v switch. A local attacker can exploit this to     disclose process memory. (CVE-2016-7409)",
            "solution": "Upgrade to Dropbear SSH version 2016.74 or later.",
            "cve": "CVE-2016-7406",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "https://matt.ucc.asn.au/dropbear/CHANGES",
            "plugin_output": "Version source    : SSH-2.0-dropbear_0.52\nInstalled version : 0.52\nFixed version     : 2016.74"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.116",
            "system": "EPSON Stylus Printer\nLinksys Wireless Access Point\nNetgear Wireless Router (WNR1000)\nOracle Integrated Lights Out Manager",
            "os": "other",
            "pluginid": "58183",
            "pluginname": "Dropbear SSH Server Channel Concurrency Use-after-free Remote Code Execution",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "3",
            "description": "According to its self-reported banner, the remote host is running a version of Dropbear SSH before 2012.55.  As such, it reportedly contains a flaw that might allow an attacker to run arbitrary code on the remote host with root privileges if they are authenticated using a public key and command restriction is enforced. \n\nNote that Nessus has not tried to exploit this vulnerability but instead has relied solely on the version in the service's banner. \n\nNote also, in cases where the host is running ESXi 4.0 or ESXi 4.1, VMware states in their KB article id 2037316 that this is a false positive since administrative access is required to login via SSH so there are no privileges to be gained by exploiting this issue.  That is true only in a default setup, not one in which SSH access has been enabled for non-root users.",
            "solution": "Upgrade to the Dropbear SSH 2012.55 or later.",
            "cve": "CVE-2012-0920",
            "cvss3": "",
            "cvss2": "7.1",
            "see_also": "https://matt.ucc.asn.au/dropbear/CHANGES\nhttps://secure.ucc.asn.au/hg/dropbear/rev/818108bf7749\nhttps://mantor.org/~northox/misc/CVE-2012-0920.html\nhttp://www.nessus.org/u?b2ca47ea",
            "plugin_output": "Version source    : SSH-2.0-dropbear_0.52\nInstalled version : 0.52\nFixed version     : 2012.55"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.116",
            "system": "EPSON Stylus Printer\nLinksys Wireless Access Point\nNetgear Wireless Router (WNR1000)\nOracle Integrated Lights Out Manager",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 1281 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.115",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.115",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.115",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.115",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.115/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.115",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.115/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.114",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.114",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.114/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.114",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.114/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.114",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.114",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.113",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.113",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.113",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.113",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.113/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.113",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.113/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.112",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.112",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.112",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.112",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.8.112/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.112",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.8.112/\nInstalled version : iDRAC9 with firmware 5.10.50.00.32\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.109",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.109",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.109",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Feb 24 09:11:35 2022 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.109",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Feb 24 09:11:35 2017 GMT\nNot valid after  : Feb 24 09:11:35 2022 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.109",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 244 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.108",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.108",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Feb 24 09:11:35 2022 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.108",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Feb 24 09:11:35 2017 GMT\nNot valid after  : Feb 24 09:11:35 2022 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.108",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.108",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.107",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.107",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Feb 24 09:11:35 2022 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.107",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Feb 24 09:11:35 2017 GMT\nNot valid after  : Feb 24 09:11:35 2022 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.107",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.107",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 243 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.106",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.106",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Feb 24 09:11:35 2022 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.106",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Feb 24 09:11:35 2017 GMT\nNot valid after  : Feb 24 09:11:35 2022 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.106",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.106",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.105",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.105",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Feb 24 09:11:35 2022 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.105",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Feb 24 09:11:35 2017 GMT\nNot valid after  : Feb 24 09:11:35 2022 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.105",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.105",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.104",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.104",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Feb 24 09:11:35 2022 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.104",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Feb 24 09:11:35 2017 GMT\nNot valid after  : Feb 24 09:11:35 2022 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.104",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.104",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 1 second."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.103",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.103",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.103",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Feb 24 09:11:35 2022 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.103",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Feb 24 09:11:35 2017 GMT\nNot valid after  : Feb 24 09:11:35 2022 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.103",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.102",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.102",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.102",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.102",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.102",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Mar 24 09:11:51 2016 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.102",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "69551",
            "pluginname": "SSL Certificate Chain Contains RSA Keys Less Than 2048 bits",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "At least one of the X.509 certificates sent by the remote host has a key that is shorter than 2048 bits. According to industry standards set by the Certification Authority/Browser (CA/B) Forum, certificates issued after January 1, 2014 must be at least 2048 bits.\n\nSome browser SSL implementations may reject keys less than 2048 bits after January 1, 2014. Additionally, some SSL certificate vendors may revoke certificates less than 2048 bits before January 1, 2014.\n\nNote that Nessus will not flag root certificates with RSA keys less than 2048 bits if they were issued prior to December 31, 2010, as the standard considers them exempt.",
            "solution": "Replace the certificate in the chain with the RSA key less than 2048 bits in length with a longer key, and reissue any certificates signed by the old certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "https://www.cabforum.org/wp-content/uploads/Baseline_Requirements_V1.pdf",
            "plugin_output": "The following certificates were part of the certificate chain\nsent by the remote host, but contain RSA keys that are considered\nto be weak :\n|-Subject        : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-RSA Key Length : 1024 bits"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.102",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Apr 20 09:11:51 2011 GMT\nNot valid after  : Mar 24 09:11:51 2016 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.102",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "84638",
            "pluginname": "OpenSSH < 6.9 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "3",
            "description": "According to its banner, the version of OpenSSH running on the remote host is prior to 6.9. It is, therefore, affected by the following vulnerabilities :\n\n  - A flaw exists within the x11_open_helper() function in     the 'channels.c' file that allows connections to be     permitted after 'ForwardX11Timeout' has expired. A     remote attacker can exploit this to bypass timeout     checks and XSECURITY restrictions. (CVE-2015-5352)\n\n  - Various issues were addressed by fixing the weakness in     agent locking by increasing the failure delay, storing     the salted hash of the password, and using a timing-safe     comparison function.\n\n  - An out-of-bounds read error exists when handling     incorrect pattern lengths. A remote attacker can exploit     this to cause a denial of service or disclose sensitive     information in the memory.\n\n  - An out-of-bounds read error exists when parsing the     'EscapeChar' configuration option.",
            "solution": "Upgrade to OpenSSH 6.9 or later.",
            "cve": "CVE-2015-5352",
            "cvss3": "",
            "cvss2": "8.5",
            "see_also": "http://www.openssh.com/txt/release-6.9\nhttp://www.nessus.org/u?725c4682",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_6.6\nInstalled version : 6.6\nFixed version     : 6.9"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.102",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "106608",
            "pluginname": "OpenSSH 5.4 < 7.1p2 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "3",
            "description": "According to its banner, the version of OpenSSH running on the remote host is 5.x prior to 5.4, 6.x or 7.x prior to 7.1p2. It is, therefore, affected by multiple vulnerabilities. \n\n  - A potential information disclosure vulnerability which     may allow remote servers to obtain sensitive information     from process memory by requesting transmission of an     entire buffer (CVE-2016-0777)\n\n  - A denial of service vulnerability due to a heap-base     overflow in roaming_common.c (CVE-2016-0778)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSH version 7.1p2 or later.",
            "cve": "CVE-2016-0777",
            "cvss3": "8.1",
            "cvss2": "4.6",
            "see_also": "http://www.openssh.com/txt/release-7.1p2",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_6.6\nInstalled version : 6.6\nFixed version     : 7.1p2 / 7.2"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.102",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "90023",
            "pluginname": "OpenSSH < 7.2p2 X11Forwarding xauth Command Injection",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its banner, the version of OpenSSH running on the remote host is prior to 7.2p2. It is, therefore, affected by a security bypass vulnerability due to improper sanitization of X11 authentication credentials. An authenticated, remote attacker can exploit this, via crafted credentials, to inject arbitrary xauth commands, resulting in gaining read and write access to arbitrary files, connecting to local ports, or performing further attacks on xauth itself. Note that exploiting this vulnerability requires X11Forwarding to have been enabled.",
            "solution": "Upgrade to OpenSSH version 7.2p2 / 7.3 or later.",
            "cve": "CVE-2016-3115",
            "cvss3": "6.4",
            "cvss2": "5.5",
            "see_also": "http://www.openssh.com/txt/release-7.2p2\nhttp://www.openssh.com/txt/x11fwd.adv",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_6.6\nInstalled version : 6.6\nFixed version     : 7.2p2 / 7.3"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.102",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "103781",
            "pluginname": "OpenSSH < 7.6",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its banner, the version of OpenSSH running on the remote host is prior to 7.6. It is, therefore, affected by a file creation restriction bypass vulnerability related to the 'process_open' function in the file 'sftp-server.c' that allows authenticated users to create zero-length files regardless of configuration.\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSH version 7.6 or later.",
            "cve": "CVE-2017-15906",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?09ca048b\nhttp://www.nessus.org/u?96a8ea52\nhttp://www.openssh.com/txt/release-7.6",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_6.6\nInstalled version : 6.6\nFixed version     : 7.6"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.102",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "93194",
            "pluginname": "OpenSSH < 7.3 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "3",
            "description": "According to its banner, the version of OpenSSH running on the remote host is prior to 7.3. It is, therefore, affected by multiple vulnerabilities :\n\n  - A local privilege escalation when the UseLogin feature     is enabled and PAM is configured to read .pam_environment     files from home directories. (CVE-2015-8325)\n\n  - A flaw exists that is due to the program returning     shorter response times for authentication requests with     overly long passwords for invalid users than for valid     users. This may allow a remote attacker to conduct a     timing attack and enumerate valid usernames.\n    (CVE-2016-6210)\n\n  - A denial of service vulnerability exists in the     auth_password() function in auth-passwd.c due to a     failure to limit password lengths for password     authentication. An unauthenticated, remote attacker can     exploit this, via a long string, to consume excessive     CPU resources, resulting in a denial of service     condition. (CVE-2016-6515)\n\n  - An unspecified flaw exists in the CBC padding oracle     countermeasures that allows an unauthenticated, remote     attacker to conduct a timing attack.\n\n  - A flaw exists due to improper operation ordering of MAC     verification for Encrypt-then-MAC (EtM) mode transport     MAC algorithms when verifying the MAC before decrypting     any ciphertext. An unauthenticated, remote attacker can     exploit this, via a timing attack, to disclose sensitive     information.\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSH version 7.3 or later.",
            "cve": "CVE-2015-8325",
            "cvss3": "7.8",
            "cvss2": "7.2",
            "see_also": "http://www.openssh.com/txt/release-7.3\nhttps://marc.info/?l=openbsd-announce&m=147005433429403",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_6.6\nInstalled version : 6.6\nFixed version     : 7.3"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.102",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "90022",
            "pluginname": "OpenSSH < 7.2 Untrusted X11 Forwarding Fallback Security Bypass",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "4",
            "description": "According to its banner, the version of OpenSSH running on the remote host is prior to 7.2. It is, therefore, affected by a security bypass vulnerability due to a flaw in ssh(1) that is triggered when it falls back from untrusted X11 forwarding to trusted forwarding when the SECURITY extension is disabled by the X server. This can result in untrusted X11 connections that can be exploited by a remote attacker.",
            "solution": "Upgrade to OpenSSH version 7.2 or later.",
            "cve": "CVE-2016-1908",
            "cvss3": "9.8",
            "cvss2": "7.5",
            "see_also": "http://www.openssh.com/txt/release-7.2",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_6.6\nInstalled version : 6.6\nFixed version     : 7.2"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.102",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "96151",
            "pluginname": "OpenSSH < 7.4 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "3",
            "description": "According to its banner, the version of OpenSSH running on the remote host is prior to 7.4. It is, therefore, affected by multiple vulnerabilities :\n\n  - A flaw exists in ssh-agent due to loading PKCS#11     modules from paths that are outside a trusted whitelist.\n    A local attacker can exploit this, by using a crafted     request to load hostile modules via agent forwarding, to     execute arbitrary code. To exploit this vulnerability,     the attacker would need to control the forwarded     agent-socket (on the host running the sshd server) and     the ability to write to the file system of the host     running ssh-agent. (CVE-2016-10009)\n\n  - A flaw exists in sshd due to creating forwarded     Unix-domain sockets with 'root' privileges whenever     privilege separation is disabled. A local attacker can     exploit this to gain elevated privileges.\n    (CVE-2016-10010)\n\n  - An information disclosure vulnerability exists in sshd     within the realloc() function due leakage of key     material to privilege-separated child processes when     reading keys. A local attacker can possibly exploit this     to disclose sensitive key material. Note that no such     leak has been observed in practice for normal-sized     keys, nor does a leak to the child processes directly     expose key material to unprivileged users.\n    (CVE-2016-10011)\n\n  - A flaw exists in sshd within the shared memory manager     used by pre-authenticating compression support due to a     bounds check being elided by some optimizing compilers     and due to the memory manager being incorrectly     accessible when pre-authenticating compression is     disabled. A local attacker can exploit this to gain     elevated privileges. (CVE-2016-10012)\n\n  - A denial of service vulnerability exists in sshd when     handling KEXINIT messages. An unauthenticated, remote     attacker can exploit this, by sending multiple KEXINIT     messages, to consume up to 128MB per connection.\n\n  - A flaw exists in sshd due to improper validation of     address ranges by the AllowUser and DenyUsers     directives at configuration load time. A local attacker     can exploit this, via an invalid CIDR address range, to     gain access to restricted areas.\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSH version 7.4 or later.",
            "cve": "CVE-2016-10009",
            "cvss3": "7.3",
            "cvss2": "7.5",
            "see_also": "http://www.openssh.com/txt/release-7.4",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_6.6\nInstalled version : 6.6\nFixed version     : 7.4"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.102",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "159490",
            "pluginname": "OpenSSH < 7.8",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its banner, the version of OpenSSH running on the remote host is prior to 7.8. It is, therefore, affected by an information disclosure vulnerability in the auth2-gss.c, auth2-hostbased.c, and auth2-pubkey due to not delaying for an invalid authenticating user. An unauthenticated, remote attacker can exploit this, via a malformed packet, to potentially enumerate users.\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSH version 7.8 or later.",
            "cve": "CVE-2018-15473",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "https://www.openwall.com/lists/oss-security/2018/08/15/5\nhttps://www.openssh.com/txt/release-7.8",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_6.6\nInstalled version : 6.6\nFixed version     : 7.8"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.102",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "159491",
            "pluginname": "OpenSSH < 8.0",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its banner, the version of OpenSSH running on the remote host is prior to 8.0. It is, therefore, affected by the following vulnerabilities:\n\n  - A permission bypass vulnerability due to improper directory name validation. An unauthenticated, remote     attacker can exploit this, with a specially crafted scp server, to change the permission of a directory     on the client. (CVE-2018-20685)\n\n  - Multiple arbitrary file downloads due to improper validation of object name and stderr output. An unauthenticated     remote attacker can exploit this, with a specially crafted scp server, to include additional hidden     files in the transfer. (CVE-2019-6109, CVE-2019-6110)\n\n  - An arbitrary file write vulnerability due to improper object name validation. An unauthenticated, remote     attacker can exploit this, with a specially crafted scp server, to overwrite arbitrary files in the     client directory. (CVE-2019-6111)\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSH version 8.0 or later.",
            "cve": "CVE-2018-20685",
            "cvss3": "6.8",
            "cvss2": "5.8",
            "see_also": "https://sintonen.fi/advisories/scp-client-multiple-vulnerabilities.txt\nhttps://www.openssh.com/txt/release-8.0",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_6.6\nInstalled version : 6.6\nFixed version     : 8.0"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.102",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "99359",
            "pluginname": "OpenSSH < 7.5 ",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its banner, the version of OpenSSH running on the remote host is prior to 7.5. It is, therefore, affected by an information disclosure vulnerability :\n\n  - An unspecified timing flaw exists in the CBC padding     oracle countermeasures, within the ssh and sshd     functions, that allows an unauthenticated, remote     attacker to disclose potentially sensitive information.\n    Note that the OpenSSH client disables CBC ciphers by     default. However, sshd offers them as lowest-preference     options, which will be removed by default in a future     release.\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSH version 7.5 or later.",
            "cve": "",
            "cvss3": "5.9",
            "cvss2": "5.0",
            "see_also": "http://www.openssh.com/txt/release-7.5",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_6.6\nInstalled version : 6.6\nFixed version     : 7.5"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.102",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "85382",
            "pluginname": "OpenSSH < 7.0 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its banner, the version of OpenSSH running on the remote host is prior to 7.0. It is, therefore, affected by the following vulnerabilities :\n\n  - A security bypass vulnerability exists in the     kbdint_next_device() function in file auth2-chall.c that     allows the circumvention of MaxAuthTries during     keyboard-interactive authentication. A remote attacker     can exploit this issue to force the same authentication     method to be tried thousands of times in a single pass     by using a crafted keyboard-interactive 'devices'     string, thus allowing a brute-force attack or causing a     denial of service. (CVE-2015-5600)\n\n  - A security bypass vulnerability exists in sshd due to     improper handling of username data in     MONITOR_REQ_PAM_INIT_CTX requests. A local attacker can     exploit this, by sending a MONITOR_REQ_PWNAM request, to     conduct an impersonation attack. Note that this issue     only affects Portable OpenSSH. (CVE-2015-6563)\n\n  - A privilege escalation vulnerability exists due to a     use-after-free error in sshd that is triggered when     handling a MONITOR_REQ_PAM_FREE_CTX request. A local     attacker can exploit this to gain elevated privileges.\n    Note that this issue only affects Portable OpenSSH.\n    (CVE-2015-6564)\n\n  - A local command execution vulnerability exists in sshd     due to setting insecure world-writable permissions for     TTYs. A local attacker can exploit this, by injecting     crafted terminal escape sequences, to execute commands     for logged-in users. (CVE-2015-6565)",
            "solution": "Upgrade to OpenSSH 7.0 or later.",
            "cve": "CVE-2015-5600",
            "cvss3": "6.1",
            "cvss2": "8.5",
            "see_also": "http://www.openssh.com/txt/release-7.0",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_6.6\nInstalled version : 6.6\nFixed version     : 7.0"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.102",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "187201",
            "pluginname": "OpenSSH < 9.6 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple vulnerabilities as referenced in the release-9.6 advisory.\n\n  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by     Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of     the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the     commencement of encryption, and deleting an equal number of consecutive messages immediately after     encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While     cryptographically novel, the security impact of this attack is fortunately very limited as it only allows     deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user     user authentication from proceeding and results in a stuck connection. The most serious identified impact     is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing     the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.\n    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this     protocol weakness through a new strict KEX protocol extension that will be automatically enabled when     both the client and server support it. This extension makes two changes to the SSH transport protocol to     improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the     connection if any unnecessary or unexpected message is received during key exchange (including messages     that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability     from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of     each key exchange, preventing previously inserted messages from being able to make persistent changes to     the sequence number across completion of a key exchange. Either of these changes should be sufficient to     thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source     distribition. (CVE-2023-48795)\n\n  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the     PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular     private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)\n\n  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a     ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h     or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could     potentially perform command injection depending on what quoting was present in the user-supplied     ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository     could contain a submodule with shell characters in its user/hostname. Git does not ban shell     metacharacters in user or host names when checking out repositories from untrusted sources. Although we     believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially     across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters     from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be     effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters     potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject     to these restrictions, allowing configurations that use strange names to continue to be used, under the     assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSH version 9.6 or later.",
            "cve": "CVE-2023-48795",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.openssh.com/txt/release-9.6",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_6.6\nInstalled version : 6.6\nFixed version     : 9.6p1 / 9.6"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.102",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "78655",
            "pluginname": "OpenSSH SSHFP Record Verification Weakness",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its banner, the version of OpenSSH running on the remote host is 6.1 through 6.6.\n\nIt is, therefore, affected by a host verification bypass vulnerability related to SSHFP and certificates that could allow a malicious SSH server to cause the supplied client to inappropriately trust the server.",
            "solution": "Update to OpenSSH version 6.7 or later or apply the vendor patch.",
            "cve": "CVE-2014-2653",
            "cvss3": "",
            "cvss2": "5.8",
            "see_also": "http://thread.gmane.org/gmane.network.openssh.devel/20679\nhttps://tools.ietf.org/html/rfc4255\nhttps://seclists.org/oss-sec/2014/q1/663",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_6.6\nInstalled version : 6.6\nFixed version     : 6.7"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.102",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.101",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.101",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Feb 24 09:11:35 2022 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.101",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Feb 24 09:11:35 2017 GMT\nNot valid after  : Feb 24 09:11:35 2022 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.101",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "80101",
            "pluginname": "IPMI v2.0 Password Hash Disclosure",
            "hostname": "",
            "port": "623",
            "protocol": "udp",
            "severity": "3",
            "description": "The remote host supports IPMI v2.0. The Intelligent Platform Management Interface (IPMI) protocol is affected by an information disclosure vulnerability due to the support of RMCP+ Authenticated Key-Exchange Protocol (RAKP) authentication. A remote attacker can obtain password hash information for valid user accounts via the HMAC from a RAKP message 2 response from a BMC.",
            "solution": "There is no patch for this vulnerability; it is an inherent problem with the specification for IPMI v2.0. Suggested mitigations include :\n\n  - Disabling IPMI over LAN if it is not needed.\n\n  - Using strong passwords to limit the successfulness of     off-line dictionary attacks.\n\n  - Using Access Control Lists (ACLs) or isolated networks     to limit access to your IPMI management interfaces.",
            "cve": "CVE-2013-4786",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://fish2.com/ipmi/remote-pw-cracking.html",
            "plugin_output": "Nessus detected that the remote server has IPMI v2.0 implemented.\nRemote unauthenticated users will be able to get password hashes\nfor valid users."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.101",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 5124 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.99",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "101025",
            "pluginname": "Elasticsearch Unrestricted Access Information Disclosure",
            "hostname": "",
            "port": "9200",
            "protocol": "tcp",
            "severity": "2",
            "description": "The Elasticsearch application running on the remote web server is affected by an information disclosure vulnerability due to a failure to restrict resources via authentication. An unauthenticated, remote attacker can exploit this to disclose sensitive information from the database.",
            "solution": "Enable native user authentication or integrate with an external user management system such as LDAP and Active Directory.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?d055e692\nhttp://www.nessus.org/u?b80612a1",
            "plugin_output": "Nessus detected an unprotected instance of Elasticsearch with the following indices :\nsoc-esmeps-2024.11.04\nsoc-esmeps-2024.11.05\nsoc-esmeps-2024.11.02\nsoc-esmeps-2024.11.03\nsoc-fw-2024.12.04_21\nsoc-esmeps-2024.11.08\nsoc-fw-2024.12.04_20\nsoc-esmeps-2024.11.09\nsoc-fw-2024.12.04_23\nsoc-esmeps-2024.11.06\nsoc-fw-2024.12.04_22\nsoc-esmeps-2024.11.07\nsoc-fw-2024.12.16_03\nsoc-fw-2024.12.16_04\nsoc-fw-2024.12.16_05\nsoc-fw-2024.12.16_06\nsoc-esmeps-2024.11.11\nsoc-fw-2024.12.16_07\nsoc-fw-2024.12.16_08\nsoc-esmeps-2024.11.12\nsoc-fw-2024.12.16_09\nsoc-esmeps-2024.11.10\nsoc-fw-2024.12.16_00\nsoc-fw-2024.12.16_01\nsoc-fw-2024.12.16_02\nsoc-fw-2024.12.16_14\nsoc-fw-2024.12.16_15\nsoc-fw-2024.12.16_16\nsoc-fw-2024.12.16_17\nsoc-fw-2024.11.22_23\nsoc-fw-2024.12.16_18\nsoc-fw-2024.12.16_19\nsoc-esmeps-2024.11.01\nsoc-fw-2024.11.22_21\nsoc-fw-2024.11.22_22\nsoc-fw-2024.11.22_20\nsoc-fw-2024.12.16_10\nsoc-fw-2024.12.16_11\nsoc-fw-2024.12.16_12\nsoc-fw-2024.12.16_13\nsoc-fw-2024.12.16_20\nsoc-fw-2024.12.16_21\nsoc-fw-2024.12.16_22\nsoc-fw-2024.12.16_23\nsoc-waf-2024.10.10\nsoc-waf-2024.10.18\nsoc-waf-2024.10.17\nsoc-waf-2024.10.16\nsoc-waf-2024.10.15\nsoc-waf-2024.10.14\nsoc-waf-2024.10.13\nsoc-waf-2024.10.12\nsoc-waf-2024.10.11\nsoc-os-2024.11.06\nsoc-waf-2024.10.21\nsoc-os-2024.11.05\nsoc-waf-2024.10.20\nsoc-os-2024.11.08\nsoc-os-2024.11.07\nsoc-fw-2024.10.20_08\nsoc-fw-2024.10.19_19\nsoc-fw-2024.10.20_09\nsoc-os-2024.11.09\nsoc-fw-2024.10.20_06\nsoc-fw-2024.10.20_07\nsoc-waf-2024.10.29\nsoc-fw-2024.10.19_15\nsoc-fw-2024.10.19_16\nsoc-waf-2024.10.28\nsoc-fw-2024.10.19_17\nsoc-waf-2024.10.27\nsoc-waf-2024.10.26\nsoc-fw-2024.10.19_18\nsoc-os-2024.11.02\nsoc-waf-2024.10.25\nsoc-fw-2024.10.19_11\nsoc-waf-2024.10.24\nsoc-fw-2024.10.19_12\nsoc-os-2024.11.01\nsoc-os-2024.11.04\nsoc-fw-2024.10.19_13\nsoc-waf-2024.10.23\nsoc-os-2024.11.03\nsoc-waf-2024.10.22\nsoc-fw-2024.10.19_14\nsoc-fw-2024.10.19_20\nsoc-fw-2024.10.19_21\nsoc-waf-2024.10.19\nsoc-fw-2024.10.20_04\nsoc-fw-2024.10.20_05\nsoc-fw-2024.10.20_02\nsoc-fw-2024.10.20_03\nsoc-fw-2024.10.20_00\nsoc-fw-2024.10.20_01\nsoc-waf-2024.10.31\nsoc-waf-2024.10.30\nsoc-fw-2024.10.20_19\nsoc-fw-2024.10.20_17\nsoc-fw-2024.10.20_18\nsoc-fw-2024.10.19_22\nsoc-fw-2024.10.19_23\nsoc-fw-2024.10.20_15\nsoc-fw-2024.10.20_16\nsoc-fw-2024.10.20_13\nsoc-fw-2024.10.20_14\nsoc-fw-2024.10.20_11\nsoc-fw-2024.10.20_12\nsoc-fw-2024.10.20_10\nsoc-fw-2024.11.02_11\nsoc-fw-2024.11.02_10\nsoc-fw-2024.11.02_13\nsoc-esmeps-2024.11.26\nsoc-esmeps-2024.11.27\nsoc-fw-2024.11.02_12\nsoc-fw-2024.11.02_15\nsoc-esmeps-2024.11.24\nsoc-fw-2024.11.02_14\nsoc-esmeps-2024.11.25\nsoc-fw-2024.11.02_17\nsoc-fw-2024.11.02_16\nsoc-esmeps-2024.11.28\nsoc-fw-2024.11.02_19\nsoc-esmeps-2024.11.29\nsoc-fw-2024.11.02_18\nsoc-esmeps-2024.11.30\nsoc-fw-2024.10.19_08\nsoc-fw-2024.10.19_09\nsoc-fw-2024.11.02_00\nsoc-esmeps-2024.11.15\nsoc-fw-2024.11.02_02\nsoc-fw-2024.10.19_04\nsoc-esmeps-2024.11.16\nsoc-fw-2024.11.02_01\nsoc-fw-2024.10.19_05\nsoc-fw-2024.11.02_04\nsoc-esmeps-2024.11.13\nsoc-fw-2024.10.19_06\nsoc-esmeps-2024.11.14\nsoc-fw-2024.11.02_03\nsoc-fw-2024.10.19_07\nsoc-esmeps-2024.11.19\nsoc-fw-2024.10.19_00\nsoc-fw-2024.11.02_06\nsoc-fw-2024.11.02_05\nsoc-fw-2024.10.19_01\nsoc-esmeps-2024.11.17\nsoc-fw-2024.10.19_02\nsoc-fw-2024.11.02_08\nsoc-fw-2024.11.02_07\nsoc-esmeps-2024.11.18\nsoc-fw-2024.10.19_03\nsoc-fw-2024.11.02_09\nsoc-fw-2024.10.19_10\nsoc-esmeps-2024.11.22\nsoc-esmeps-2024.11.23\nsoc-esmeps-2024.11.20\nsoc-esmeps-2024.11.21\nsoc-fw-2024.10.15_18\nsoc-fw-2024.10.15_17\nsoc-fw-2024.10.15_16\nsoc-fw-2024.10.15_15\nsoc-edr-2024.10.20\nsoc-fw-2024.10.15_19\nsoc-fw-2024.10.15_10\nsoc-fw-2024.10.15_14\nsoc-fw-2024.10.15_13\nsoc-fw-2024.10.15_12\nsoc-fw-2024.10.15_11\nsoc-edr-2024.10.18\nsoc-edr-2024.10.19\nsoc-fw-2024.11.14_10\nsoc-fw-2024.11.14_11\nsoc-fw-2024.11.14_12\nsoc-fw-2024.11.14_13\nsoc-edr-2024.10.14\nsoc-fw-2024.11.14_14\nsoc-edr-2024.10.15\nsoc-fw-2024.11.14_15\nsoc-edr-2024.10.16\nsoc-edr-2024.10.17\nsoc-fw-2024.11.14_16\nsoc-fw-2024.11.14_17\nsoc-edr-2024.10.10\nsoc-edr-2024.10.11\nsoc-fw-2024.11.14_18\nsoc-fw-2024.11.14_19\nsoc-edr-2024.10.12\nsoc-edr-2024.10.13\nsoc-edr-2024.10.30\nsoc-edr-2024.10.31\nsoc-fw-2024.11.02_20\nsoc-fw-2024.11.02_22\nsoc-fw-2024.11.02_21\nsoc-fw-2024.10.15_21\nsoc-fw-2024.10.15_20\nsoc-fw-2024.11.02_23\nsoc-fw-2024.10.15_23\nsoc-fw-2024.10.15_22\nsoc-fw-2024.10.27_07\nsoc-fw-2024.10.27_08\nsoc-fw-2024.10.27_05\nsoc-fw-2024.10.27_06\nsoc-edr-2024.10.29\nsoc-fw-2024.11.14_00\nsoc-fw-2024.10.27_09\nsoc-fw-2024.11.14_01\nsoc-fw-2024.11.14_02\nsoc-edr-2024.10.25\nsoc-edr-2024.10.26\nsoc-fw-2024.10.27_00\nsoc-fw-2024.11.14_03\nsoc-edr-2024.10.27\nsoc-fw-2024.11.14_04\nsoc-edr-2024.10.28\nsoc-fw-2024.11.14_05\nsoc-fw-2024.11.14_06\nsoc-fw-2024.10.27_03\nsoc-edr-2024.10.21\nsoc-fw-2024.11.14_07\nsoc-edr-2024.10.22\nsoc-fw-2024.10.27_04\nsoc-fw-2024.10.27_01\nsoc-fw-2024.11.14_08\nsoc-edr-2024.10.23\nsoc-fw-2024.11.14_09\nsoc-edr-2024.10.24\nsoc-fw-2024.10.27_02\nsoc-fw-2024.11.26_19\nsoc-fw-2024.11.26_18\nsoc-fw-2024.11.26_17\nsoc-fw-2024.11.26_16\nsoc-fw-2024.11.26_15\nsoc-fw-2024.11.26_14\nsoc-fw-2024.11.26_13\nsoc-fw-2024.11.26_12\nsoc-fw-2024.11.26_11\nsoc-fw-2024.11.26_10\nsoc-fw-2024.10.15_07\nsoc-fw-2024.10.15_06\nsoc-fw-2024.10.15_05\nsoc-fw-2024.10.15_04\nsoc-fw-2024.10.15_09\nsoc-fw-2024.10.15_08\nsoc-fw-2024.10.15_03\nsoc-fw-2024.10.15_02\nsoc-fw-2024.10.15_01\nsoc-fw-2024.10.15_00\nsoc-fw-2024.11.26_09\nsoc-fw-2024.11.26_08\nsoc-fw-2024.11.26_07\nsoc-fw-2024.11.14_20\nsoc-fw-2024.11.26_06\nsoc-fw-2024.11.14_21\nsoc-fw-2024.11.26_05\nsoc-fw-2024.11.14_22\nsoc-fw-2024.11.26_04\nsoc-fw-2024.11.26_03\nsoc-fw-2024.11.14_23\nsoc-fw-2024.11.26_02\nsoc-fw-2024.11.26_01\nsoc-fw-2024.11.26_00\nsoc-apt-2024.11.10\nsoc-apt-2024.11.12\nsoc-apt-2024.11.11\nsoc-apt-2024.11.18\nsoc-apt-2024.11.17\nsoc-apt-2024.11.19\nsoc-apt-2024.11.14\nsoc-apt-2024.11.13\nsoc-apt-2024.11.16\nsoc-apt-2024.11.15\nsoc-apt-2024.11.01\nsoc-apt-2024.11.07\nsoc-apt-2024.11.06\nsoc-fw-2024.11.26_23\nsoc-apt-2024.11.09\nsoc-fw-2024.11.26_22\nsoc-fw-2024.11.26_21\nsoc-apt-2024.11.08\nsoc-apt-2024.11.03\nsoc-fw-2024.11.26_20\nsoc-apt-2024.11.02\nsoc-apt-2024.11.05\nsoc-apt-2024.11.04\nsoc-fw-2024.12.04_03\nsoc-fw-2024.12.04_02\nsoc-fw-2024.12.04_05\nsoc-fw-2024.12.04_04\nsoc-fw-2024.12.04_07\nsoc-fw-2024.12.04_06\nsoc-fw-2024.12.04_09\nsoc-fw-2024.12.04_08\nsoc-fw-2024.12.04_01\nsoc-fw-2024.12.04_00\nsoc-fw-2024.10.27_18\nsoc-fw-2024.10.27_19\nsoc-fw-2024.10.27_16\nsoc-fw-2024.10.27_17\nsoc-fw-2024.10.27_10\nsoc-fw-2024.10.27_11\nsoc-fw-2024.10.27_14\nsoc-fw-2024.10.27_15\nsoc-fw-2024.10.27_12\nsoc-fw-2024.10.27_13\nsoc-fw-2024.12.04_14\nsoc-fw-2024.12.04_13\nsoc-fw-2024.12.04_16\nsoc-fw-2024.12.04_15\nsoc-fw-2024.12.04_18\nsoc-fw-2024.12.04_17\nsoc-fw-2024.12.04_19\nsoc-fw-2024.12.04_10\nsoc-fw-2024.12.04_12\nsoc-fw-2024.12.04_11\nsoc-fw-2024.10.27_21\nsoc-fw-2024.10.27_22\nsoc-fw-2024.10.27_20\nsoc-fw-2024.10.27_23\nsoc-antivirus-2024.12.04\nsoc-antivirus-2024.12.03\nsoc-antivirus-2024.12.02\nsoc-antivirus-2024.12.01\nsoc-antivirus-2024.12.08\nsoc-antivirus-2024.12.07\nsoc-antivirus-2024.12.06\nsoc-antivirus-2024.12.05\nsoc-fw-2024.11.06_11\nsoc-fw-2024.11.06_10\nsoc-fw-2024.11.06_15\nsoc-fw-2024.11.06_14\nsoc-fw-2024.11.06_13\nsoc-fw-2024.11.06_12\nsoc-spam-2024.11.25\nsoc-fw-2024.11.06_19\nsoc-fw-2024.11.06_18\nsoc-spam-2024.11.24\nsoc-spam-2024.11.27\nsoc-fw-2024.11.06_17\nsoc-fw-2024.11.06_16\nsoc-spam-2024.11.26\nsoc-spam-2024.11.29\nsoc-spam-2024.11.28\nsoc-fw-2024.10.23_12\nsoc-fw-2024.10.23_13\nsoc-fw-2024.10.23_14\nsoc-spam-2024.11.30\nsoc-fw-2024.10.23_15\nsoc-fw-2024.10.23_16\nsoc-fw-2024.10.23_17\nsoc-fw-2024.10.23_18\nsoc-fw-2024.10.23_19\nsoc-fw-2024.10.23_10\nsoc-fw-2024.10.23_11\nsoc-fw-2024.11.06_00\nsoc-antivirus-2024.12.11\nsoc-fw-2024.11.06_04\nsoc-antivirus-2024.12.10\nsoc-fw-2024.11.06_03\nsoc-fw-2024.11.06_02\nsoc-fw-2024.11.06_01\nsoc-spam-2024.11.14\nsoc-fw-2024.11.06_08\nsoc-antivirus-2024.12.15\nsoc-spam-2024.11.13\nsoc-fw-2024.11.06_07\nsoc-antivirus-2024.12.14\nsoc-antivirus-2024.12.13\nsoc-fw-2024.11.06_06\nsoc-spam-2024.11.16\nsoc-fw-2024.11.06_05\nsoc-antivirus-2024.12.12\nsoc-spam-2024.11.15\nsoc-spam-2024.11.18\nsoc-spam-2024.11.17\nsoc-antivirus-2024.12.18\nsoc-antivirus-2024.12.17\nsoc-antivirus-2024.12.16\nsoc-spam-2024.11.19\nsoc-fw-2024.11.06_09\nsoc-fw-2024.10.23_23\nsoc-antivirus-2024.12.09\nsoc-spam-2024.11.21\nsoc-spam-2024.11.20\nsoc-spam-2024.11.23\nsoc-spam-2024.11.22\nsoc-fw-2024.10.23_20\nsoc-fw-2024.10.23_21\nsoc-fw-2024.10.23_22\nsoc-soceps-2024.10.25\nsoc-fw-2024.11.18_11\nsoc-fw-2024.11.18_12\nsoc-soceps-2024.10.26\nsoc-soceps-2024.10.23\nsoc-fw-2024.11.18_10\nsoc-soceps-2024.10.24\nsoc-soceps-2024.10.29\nsoc-fw-2024.11.18_15\nsoc-fw-2024.11.18_16\nsoc-soceps-2024.10.27\nsoc-fw-2024.11.18_13\nsoc-fw-2024.11.18_14\nsoc-soceps-2024.10.28\nsoc-ids-2024.10.11\nsoc-fw-2024.11.18_19\nsoc-ids-2024.10.12\nsoc-ids-2024.10.13\nsoc-fw-2024.11.18_17\nsoc-fw-2024.11.18_18\nsoc-ids-2024.10.14\nsoc-soceps-2024.10.21\nsoc-soceps-2024.10.22\nsoc-soceps-2024.10.20\nsoc-ids-2024.10.10\nsoc-fw-2024.11.06_22\nsoc-ids-2024.10.19\nsoc-fw-2024.11.06_21\nsoc-fw-2024.11.06_20\nsoc-ids-2024.10.15\nsoc-ids-2024.10.16\nsoc-ids-2024.10.17\nsoc-ids-2024.10.18\nsoc-fw-2024.11.06_23\nsoc-fw-2024.12.01_06\nsoc-fw-2024.12.01_05\nsoc-fw-2024.12.01_04\nsoc-fw-2024.12.01_03\nsoc-fw-2024.12.01_02\nsoc-fw-2024.12.01_01\nsoc-fw-2024.12.01_00\nsoc-fw-2024.11.18_00\nsoc-fw-2024.11.18_01\nsoc-fw-2024.11.18_04\nsoc-fw-2024.12.01_09\nsoc-fw-2024.11.18_05\nsoc-fw-2024.12.01_08\nsoc-fw-2024.11.18_02\nsoc-fw-2024.11.18_03\nsoc-fw-2024.12.01_07\nsoc-ids-2024.10.22\nsoc-fw-2024.11.18_08\nsoc-ids-2024.10.23\nsoc-fw-2024.11.18_09\nsoc-fw-2024.11.18_06\nsoc-ids-2024.10.24\nsoc-fw-2024.11.18_07\nsoc-ids-2024.10.25\nsoc-ids-2024.10.20\nsoc-soceps-2024.10.30\nsoc-ids-2024.10.21\nsoc-soceps-2024.10.31\nsoc-ids-2024.10.26\nsoc-ids-2024.10.27\nsoc-ids-2024.10.28\nsoc-ids-2024.10.29\nsoc-fw-2024.12.01_17\nsoc-fw-2024.12.01_16\nsoc-fw-2024.12.01_15\nsoc-fw-2024.12.01_14\nsoc-fw-2024.12.01_13\nsoc-fw-2024.12.01_12\nsoc-fw-2024.12.01_11\nsoc-fw-2024.12.01_10\nsoc-fw-2024.12.01_19\nsoc-fw-2024.12.01_18\nsoc-ids-2024.10.30\nsoc-ids-2024.10.31\nsoc-fw-2024.12.01_20\nsoc-fw-2024.12.13_08\nsoc-fw-2024.12.13_09\nsoc-fw-2024.12.01_23\nsoc-fw-2024.12.01_22\nsoc-fw-2024.12.01_21\nsoc-soceps-2024.10.14\nsoc-fw-2024.11.18_22\nsoc-soceps-2024.10.15\nsoc-fw-2024.11.18_23\nsoc-soceps-2024.10.12\nsoc-fw-2024.11.18_20\nsoc-soceps-2024.10.13\nsoc-fw-2024.11.18_21\nsoc-soceps-2024.10.18\nsoc-soceps-2024.10.19\nsoc-soceps-2024.10.16\nsoc-soceps-2024.10.17\nsoc-fw-2024.12.13_06\nsoc-fw-2024.12.13_07\nsoc-fw-2024.12.13_04\nsoc-fw-2024.12.13_05\nsoc-fw-2024.12.13_02\nsoc-soceps-2024.10.10\nsoc-soceps-2024.10.11\nsoc-fw-2024.12.13_03\nsoc-fw-2024.12.13_00\nsoc-fw-2024.12.13_01\nsoc-fw-2024.12.08_08\nsoc-fw-2024.12.08_09\nsoc-fw-2024.12.08_06\nsoc-fw-2024.12.08_07\nsoc-fw-2024.12.08_00\nsoc-fw-2024.12.08_01\nsoc-fw-2024.12.08_04\nsoc-fw-2024.12.08_05\nsoc-fw-2024.12.08_02\nsoc-fw-2024.12.08_03\nsoc-fw-2024.12.08_19\nsoc-fw-2024.12.08_17\nsoc-fw-2024.12.08_18\nsoc-fw-2024.12.08_11\nsoc-fw-2024.12.08_12\nsoc-fw-2024.12.08_10\nsoc-fw-2024.12.08_15\nsoc-fw-2024.12.08_16\nsoc-fw-2024.12.08_13\nsoc-fw-2024.12.08_14\nsoc-fw-2024.10.11_12\nsoc-fw-2024.10.11_11\nsoc-fw-2024.10.11_14\nsoc-fw-2024.10.11_13\nsoc-fw-2024.10.11_16\nsoc-fw-2024.10.11_15\nsoc-fw-2024.10.11_18\nsoc-fw-2024.10.11_17\nsoc-spam-2024.11.03\nsoc-fw-2024.12.08_22\nsoc-fw-2024.12.08_23\nsoc-spam-2024.11.02\nsoc-spam-2024.11.05\nsoc-fw-2024.12.08_20\nsoc-spam-2024.11.04\nsoc-fw-2024.12.08_21\nsoc-spam-2024.11.07\nsoc-spam-2024.11.06\nsoc-fw-2024.10.11_10\nsoc-spam-2024.11.09\nsoc-spam-2024.11.08\nsoc-spam-2024.11.10\nsoc-spam-2024.11.12\nsoc-spam-2024.11.11\nsoc-fw-2024.10.11_19\nsoc-fw-2024.10.11_23\nsoc-fw-2024.10.11_22\nsoc-fw-2024.10.23_09\nsoc-fw-2024.10.11_21\nsoc-fw-2024.10.11_20\nsoc-fw-2024.10.23_01\nsoc-fw-2024.10.23_02\nsoc-fw-2024.10.23_03\nsoc-fw-2024.10.23_04\nsoc-fw-2024.10.23_05\nsoc-fw-2024.10.23_06\nsoc-fw-2024.10.23_07\nsoc-spam-2024.11.01\nsoc-fw-2024.10.23_08\nsoc-fw-2024.10.23_00\nsoc-fw-2024.11.11_06\nsoc-fw-2024.11.11_05\nsoc-fw-2024.11.11_04\nsoc-fw-2024.11.11_03\nsoc-fw-2024.11.11_02\nsoc-fw-2024.11.11_01\nsoc-fw-2024.11.11_00\nsoc-fw-2024.11.11_09\nsoc-fw-2024.11.11_08\nsoc-fw-2024.11.11_07\nsoc-fw-2024.10.11_01\nsoc-fw-2024.10.11_00\nsoc-fw-2024.10.11_03\nsoc-fw-2024.10.11_02\nsoc-fw-2024.10.11_05\nsoc-fw-2024.10.11_04\nsoc-fw-2024.10.11_07\nsoc-fw-2024.10.11_06\nsoc-fw-2024.10.11_09\nsoc-fw-2024.10.11_08\nsoc-fw-2024.11.11_23\nsoc-fw-2024.11.11_22\nsoc-fw-2024.11.11_21\nsoc-fw-2024.11.11_20\nsoc-fw-2024.11.23_08\nsoc-fw-2024.11.23_09\nsoc-fw-2024.11.23_06\nsoc-fw-2024.11.23_07\nsoc-fw-2024.11.23_04\nsoc-fw-2024.11.23_05\nsoc-fw-2024.11.23_02\nsoc-fw-2024.11.23_03\nsoc-fw-2024.11.23_00\nsoc-fw-2024.11.23_01\nsoc-fw-2024.11.11_17\nsoc-fw-2024.11.11_16\nsoc-fw-2024.11.11_15\nsoc-fw-2024.11.11_14\nsoc-fw-2024.11.11_13\nsoc-fw-2024.11.11_12\nsoc-fw-2024.11.11_11\nsoc-fw-2024.11.11_10\nsoc-esmeps-2024.10.25\nsoc-esmeps-2024.10.26\nsoc-esmeps-2024.10.23\nsoc-esmeps-2024.10.24\nsoc-esmeps-2024.10.29\nsoc-esmeps-2024.10.27\nsoc-esmeps-2024.10.28\nsoc-esmeps-2024.10.30\nsoc-esmeps-2024.10.31\nsoc-fw-2024.11.11_19\nsoc-fw-2024.11.11_18\nsoc-esmeps-2024.10.14\nsoc-esmeps-2024.10.15\nsoc-esmeps-2024.10.12\nsoc-esmeps-2024.10.13\nsoc-esmeps-2024.10.18\nsoc-esmeps-2024.10.19\nsoc-esmeps-2024.10.16\nsoc-esmeps-2024.10.17\nsoc-esmeps-2024.10.21\nsoc-esmeps-2024.10.22\nsoc-fw-2024.11.23_22\nsoc-fw-2024.11.23_23\nsoc-esmeps-2024.10.20\nsoc-fw-2024.10.28_22\nsoc-fw-2024.11.23_20\nsoc-fw-2024.11.23_21\nsoc-fw-2024.10.28_23\nsoc-fw-2024.10.28_20\nsoc-fw-2024.10.28_21\nsoc-fw-2024.11.23_19\nsoc-fw-2024.11.23_17\nsoc-fw-2024.11.23_18\nsoc-fw-2024.11.23_15\nsoc-fw-2024.11.23_16\nsoc-fw-2024.11.23_13\nsoc-esmeps-2024.10.10\nsoc-esmeps-2024.10.11\nsoc-fw-2024.11.23_14\nsoc-fw-2024.11.23_11\nsoc-fw-2024.11.23_12\nsoc-fw-2024.11.23_10\nsoc-os-2024.10.30\nsoc-os-2024.10.31\nsoc-os-2024.10.26\nsoc-os-2024.10.27\nsoc-os-2024.10.28\nsoc-os-2024.10.29\nsoc-os-2024.10.20\nsoc-os-2024.10.21\nsoc-os-2024.10.22\nsoc-os-2024.10.23\nsoc-os-2024.10.24\nsoc-os-2024.10.25\nsoc-os-2024.10.15\nsoc-os-2024.10.16\nsoc-os-2024.10.17\nsoc-os-2024.10.18\nsoc-os-2024.10.19\nsoc-os-2024.10.10\nsoc-os-2024.10.11\nsoc-os-2024.10.12\nsoc-os-2024.10.13\nsoc-os-2024.10.14\nsoc-os-2024.10.04\nsoc-fw-2024.12.07_07\nsoc-os-2024.10.05\nsoc-fw-2024.12.07_08\nsoc-os-2024.10.06\nsoc-fw-2024.12.07_05\nsoc-fw-2024.12.07_06\nsoc-os-2024.10.07\nsoc-os-2024.10.08\nsoc-os-2024.10.09\nsoc-fw-2024.12.07_09\nsoc-fw-2024.12.07_00\nsoc-fw-2024.12.07_03\nsoc-fw-2024.12.07_04\nsoc-os-2024.10.01\nsoc-fw-2024.12.07_01\nsoc-os-2024.10.02\nsoc-fw-2024.12.07_02\nsoc-os-2024.10.03\nsoc-fw-2024.11.03_00\nsoc-fw-2024.11.03_01\nsoc-fw-2024.11.03_04\nsoc-fw-2024.11.03_05\nsoc-fw-2024.11.03_02\nsoc-fw-2024.11.03_03\nsoc-fw-2024.11.03_08\nsoc-fw-2024.11.03_09\nsoc-fw-2024.11.03_06\nsoc-fw-2024.11.03_07\nsoc-fw-2024.11.03_22\nsoc-fw-2024.11.03_23\nsoc-fw-2024.11.03_20\nsoc-fw-2024.11.03_21\nsoc-fw-2024.11.15_00\nsoc-fw-2024.11.15_02\nsoc-fw-2024.11.15_01\nsoc-fw-2024.11.15_04\nsoc-fw-2024.11.15_03\nsoc-fw-2024.11.15_06\nsoc-fw-2024.11.15_05\nsoc-fw-2024.11.15_08\nsoc-fw-2024.11.15_07\nsoc-fw-2024.11.15_09\nsoc-fw-2024.12.03_01\nsoc-fw-2024.12.03_02\nsoc-fw-2024.12.03_03\nsoc-fw-2024.12.03_04\nsoc-fw-2024.11.03_11\nsoc-fw-2024.12.03_05\nsoc-fw-2024.12.03_06\nsoc-fw-2024.11.03_12\nsoc-fw-2024.12.03_07\nsoc-fw-2024.12.03_08\nsoc-fw-2024.11.03_10\nsoc-fw-2024.11.03_15\nsoc-fw-2024.11.03_16\nsoc-fw-2024.11.03_13\nsoc-fw-2024.11.03_14\nsoc-fw-2024.11.03_19\nsoc-fw-2024.11.03_17\nsoc-fw-2024.11.03_18\nsoc-fw-2024.12.03_00\nsoc-fw-2024.12.03_09\nsoc-fw-2024.12.03_12\nsoc-fw-2024.12.03_13\nsoc-fw-2024.12.03_14\nsoc-fw-2024.12.03_15\nsoc-fw-2024.11.27_10\nsoc-fw-2024.11.27_11\nsoc-fw-2024.12.03_16\nsoc-fw-2024.12.03_17\nsoc-fw-2024.11.27_12\nsoc-fw-2024.12.03_18\nsoc-fw-2024.11.27_13\nsoc-fw-2024.12.03_19\nsoc-fw-2024.11.27_14\nsoc-fw-2024.10.16_22\nsoc-fw-2024.11.27_15\nsoc-fw-2024.11.27_16\nsoc-fw-2024.10.16_21\nsoc-fw-2024.10.16_20\nsoc-fw-2024.11.27_17\nsoc-fw-2024.11.27_18\nsoc-fw-2024.11.27_19\nsoc-fw-2024.12.03_10\nsoc-fw-2024.12.03_11\nsoc-fw-2024.10.16_23\nsoc-fw-2024.10.28_08\nsoc-fw-2024.10.28_09\nsoc-fw-2024.10.28_06\nsoc-fw-2024.11.15_20\nsoc-fw-2024.10.28_07\nsoc-fw-2024.11.15_22\nsoc-fw-2024.11.15_21\nsoc-fw-2024.11.15_23\nsoc-fw-2024.10.28_00\nsoc-fw-2024.10.28_01\nsoc-fw-2024.10.28_04\nsoc-fw-2024.10.28_05\nsoc-fw-2024.10.28_02\nsoc-fw-2024.10.28_03\nsoc-fw-2024.12.03_23\nsoc-fw-2024.11.27_20\nsoc-fw-2024.11.27_21\nsoc-fw-2024.11.27_22\nsoc-fw-2024.11.27_23\nsoc-fw-2024.12.03_20\nsoc-fw-2024.12.03_21\nsoc-fw-2024.12.03_22\nsoc-fw-2024.12.15_01\nsoc-fw-2024.10.28_19\nsoc-fw-2024.12.15_00\nsoc-fw-2024.10.28_17\nsoc-fw-2024.10.28_18\nsoc-fw-2024.11.15_11\nsoc-fw-2024.11.15_10\nsoc-fw-2024.11.15_13\nsoc-fw-2024.11.15_12\nsoc-fw-2024.11.15_15\nsoc-fw-2024.10.28_11\nsoc-fw-2024.12.15_09\nsoc-fw-2024.12.15_08\nsoc-fw-2024.11.15_14\nsoc-fw-2024.10.28_12\nsoc-fw-2024.11.15_17\nsoc-fw-2024.12.15_07\nsoc-fw-2024.12.15_06\nsoc-fw-2024.11.15_16\nsoc-fw-2024.10.28_10\nsoc-fw-2024.10.28_15\nsoc-fw-2024.11.15_19\nsoc-fw-2024.12.15_05\nsoc-fw-2024.11.15_18\nsoc-fw-2024.12.15_04\nsoc-fw-2024.10.28_16\nsoc-fw-2024.10.28_13\nsoc-fw-2024.12.15_03\nsoc-fw-2024.12.15_02\nsoc-fw-2024.10.28_14\nsoc-fw-2024.10.16_08\nsoc-fw-2024.10.16_07\nsoc-fw-2024.10.16_06\nsoc-fw-2024.10.16_05\nsoc-fw-2024.10.16_09\nsoc-fw-2024.10.16_00\nsoc-fw-2024.10.16_04\nsoc-fw-2024.10.16_03\nsoc-fw-2024.10.16_02\nsoc-fw-2024.10.16_01\nsoc-fw-2024.12.15_12\nsoc-fw-2024.12.15_11\nsoc-fw-2024.12.15_10\nsoc-fw-2024.12.15_19\nsoc-fw-2024.12.15_18\nsoc-fw-2024.12.15_17\nsoc-fw-2024.12.15_16\nsoc-fw-2024.12.15_15\nsoc-fw-2024.12.15_14\nsoc-fw-2024.12.15_13\nsoc-fw-2024.10.16_19\nsoc-fw-2024.10.16_18\nsoc-fw-2024.10.16_17\nsoc-fw-2024.10.16_16\nsoc-fw-2024.11.27_00\nsoc-fw-2024.11.27_01\nsoc-fw-2024.11.27_02\nsoc-fw-2024.11.27_03\nsoc-fw-2024.11.27_04\nsoc-fw-2024.10.16_11\nsoc-fw-2024.11.27_05\nsoc-fw-2024.10.16_10\nsoc-fw-2024.11.27_06\nsoc-fw-2024.11.27_07\nsoc-fw-2024.11.27_08\nsoc-fw-2024.10.16_15\nsoc-fw-2024.11.27_09\nsoc-fw-2024.10.16_14\nsoc-fw-2024.10.16_13\nsoc-fw-2024.10.16_12\nsoc-fw-2024.12.15_23\nsoc-fw-2024.12.15_22\nsoc-fw-2024.12.15_21\nsoc-fw-2024.12.15_20\nsoc-fw-2024.10.12_23\nsoc-ids-2024.11.17\nsoc-ids-2024.11.16\nsoc-ids-2024.11.19\nsoc-ids-2024.11.18\nsoc-fw-2024.10.12_20\nsoc-fw-2024.10.12_22\nsoc-fw-2024.10.12_21\nsoc-fw-2024.10.24_02\nsoc-fw-2024.10.24_03\nsoc-fw-2024.10.24_04\nsoc-fw-2024.10.24_05\nsoc-fw-2024.10.24_06\nsoc-fw-2024.10.24_07\nsoc-fw-2024.10.24_08\nsoc-fw-2024.10.24_09\nsoc-ids-2024.11.24\nsoc-ids-2024.11.23\nsoc-ids-2024.11.26\nsoc-ids-2024.11.25\nsoc-ids-2024.11.20\nsoc-fw-2024.10.24_00\nsoc-ids-2024.11.22\nsoc-ids-2024.11.21\nsoc-fw-2024.10.24_01\nsoc-ids-2024.11.28\nsoc-ids-2024.11.27\nsoc-ids-2024.11.29\nsoc-fw-2024.10.24_13\nsoc-fw-2024.10.24_14\nsoc-fw-2024.10.24_15\nsoc-fw-2024.10.24_16\nsoc-fw-2024.10.24_17\nsoc-fw-2024.10.24_18\nsoc-fw-2024.10.24_19\nsoc-fw-2024.10.24_10\nsoc-ids-2024.11.30\nsoc-fw-2024.10.24_11\nsoc-fw-2024.10.24_12\nsoc-fw-2024.10.12_02\nsoc-fw-2024.10.12_01\nsoc-fw-2024.10.12_04\nsoc-fw-2024.10.12_03\nsoc-fw-2024.10.12_06\nsoc-fw-2024.10.12_05\nsoc-fw-2024.10.12_08\nsoc-apt-2024.11.30\nsoc-fw-2024.10.12_07\nsoc-fw-2024.10.12_00\nsoc-fw-2024.10.12_09\nsoc-apt-2024.11.21\nsoc-fw-2024.10.12_13\nsoc-apt-2024.11.20\nsoc-fw-2024.10.12_12\nsoc-apt-2024.11.23\nsoc-fw-2024.10.12_15\nsoc-apt-2024.11.22\nsoc-fw-2024.10.12_14\nsoc-fw-2024.10.12_17\nsoc-fw-2024.10.12_16\nsoc-fw-2024.10.12_19\nsoc-fw-2024.10.12_18\nsoc-fw-2024.10.12_11\nsoc-fw-2024.10.12_10\nsoc-apt-2024.11.29\nsoc-apt-2024.11.28\nsoc-apt-2024.11.25\nsoc-apt-2024.11.24\nsoc-apt-2024.11.27\nsoc-apt-2024.11.26\nsoc-fw-2024.11.07_02\nsoc-fw-2024.11.07_03\nsoc-fw-2024.11.07_04\nsoc-fw-2024.11.07_05\nsoc-fw-2024.12.12_09\nsoc-fw-2024.11.07_00\nsoc-fw-2024.12.12_07\nsoc-fw-2024.12.12_08\nsoc-fw-2024.11.07_01\nsoc-fw-2024.11.07_06\nsoc-fw-2024.11.07_07\nsoc-fw-2024.11.07_08\nsoc-fw-2024.11.07_09\nsoc-fw-2024.12.12_05\nsoc-fw-2024.12.12_06\nsoc-fw-2024.12.12_03\nsoc-fw-2024.12.12_04\nsoc-fw-2024.12.12_01\nsoc-fw-2024.12.12_02\nsoc-fw-2024.12.12_00\nsoc-fw-2024.12.12_18\nsoc-fw-2024.12.12_19\nsoc-fw-2024.12.12_16\nsoc-fw-2024.12.12_17\nsoc-fw-2024.12.12_14\nsoc-fw-2024.12.12_15\nsoc-fw-2024.12.12_12\nsoc-fw-2024.12.12_13\nsoc-fw-2024.12.12_10\nsoc-fw-2024.12.12_11\nsoc-fw-2024.11.07_20\nsoc-fw-2024.11.07_21\nsoc-fw-2024.11.07_22\nsoc-fw-2024.11.07_23\nsoc-fw-2024.11.19_02\nsoc-fw-2024.12.12_20\nsoc-fw-2024.11.19_01\nsoc-fw-2024.11.19_00\nsoc-fw-2024.11.19_06\nsoc-fw-2024.11.19_05\nsoc-fw-2024.11.19_04\nsoc-fw-2024.11.19_03\nsoc-ids-2024.11.02\nsoc-ids-2024.11.01\nsoc-fw-2024.11.19_09\nsoc-fw-2024.11.19_08\nsoc-ids-2024.11.04\nsoc-ids-2024.11.03\nsoc-fw-2024.11.19_07\nsoc-fw-2024.10.24_20\nsoc-fw-2024.12.12_23\nsoc-fw-2024.10.24_21\nsoc-fw-2024.12.12_21\nsoc-fw-2024.10.24_22\nsoc-fw-2024.10.24_23\nsoc-fw-2024.12.12_22\nsoc-fw-2024.11.07_13\nsoc-fw-2024.11.07_14\nsoc-ids-2024.11.09\nsoc-fw-2024.11.07_15\nsoc-fw-2024.11.07_16\nsoc-ids-2024.11.06\nsoc-fw-2024.11.07_10\nsoc-ids-2024.11.05\nsoc-fw-2024.11.07_11\nsoc-ids-2024.11.08\nsoc-ids-2024.11.07\nsoc-fw-2024.11.07_12\nsoc-fw-2024.11.07_17\nsoc-fw-2024.11.07_18\nsoc-fw-2024.11.07_19\nsoc-ids-2024.11.13\nsoc-ids-2024.11.12\nsoc-ids-2024.11.15\nsoc-ids-2024.11.14\nsoc-ids-2024.11.11\nsoc-ids-2024.11.10\nsoc-fw-2024.12.07_18\nsoc-fw-2024.12.07_19\nsoc-fw-2024.12.07_16\nsoc-fw-2024.12.07_17\nsoc-fw-2024.12.07_10\nsoc-fw-2024.12.07_11\nsoc-fw-2024.12.07_14\nsoc-fw-2024.11.20_17\nsoc-fw-2024.12.07_15\nsoc-fw-2024.11.20_16\nsoc-fw-2024.12.07_12\nsoc-fw-2024.11.20_19\nsoc-fw-2024.11.20_18\nsoc-fw-2024.12.07_13\nsoc-proxy-2024.10.20\nsoc-fw-2024.11.20_13\nsoc-proxy-2024.10.21\nsoc-fw-2024.11.20_12\nsoc-fw-2024.11.19_23\nsoc-fw-2024.11.19_22\nsoc-fw-2024.11.20_15\nsoc-proxy-2024.10.22\nsoc-proxy-2024.10.23\nsoc-fw-2024.11.19_21\nsoc-fw-2024.11.20_14\nsoc-fw-2024.11.20_11\nsoc-fw-2024.11.20_10\nsoc-proxy-2024.10.28\nsoc-proxy-2024.10.29\nsoc-proxy-2024.10.24\nsoc-proxy-2024.10.25\nsoc-proxy-2024.10.26\nsoc-proxy-2024.10.27\nsoc-fw-2024.12.07_21\nsoc-fw-2024.11.20_09\nsoc-fw-2024.12.07_22\nsoc-fw-2024.12.07_20\nsoc-fw-2024.11.19_20\nsoc-fw-2024.11.20_06\nsoc-fw-2024.11.20_05\nsoc-fw-2024.12.07_23\nsoc-fw-2024.11.20_08\nsoc-fw-2024.11.20_07\nsoc-fw-2024.11.19_13\nsoc-proxy-2024.10.31\nsoc-fw-2024.11.20_02\nsoc-fw-2024.11.20_01\nsoc-fw-2024.11.19_12\nsoc-fw-2024.11.19_11\nsoc-fw-2024.11.20_04\nsoc-fw-2024.11.19_10\nsoc-fw-2024.11.20_03\nsoc-fw-2024.11.19_17\nsoc-fw-2024.11.19_16\nsoc-fw-2024.11.20_00\nsoc-fw-2024.11.19_15\nsoc-fw-2024.11.19_14\nsoc-proxy-2024.10.30\nsoc-fw-2024.11.19_19\nsoc-fw-2024.11.19_18\nsoc-fw-2024.10.20_22\nsoc-fw-2024.10.20_23\nsoc-fw-2024.10.20_20\nsoc-fw-2024.10.20_21\nsoc-proxy-2024.10.10\nsoc-fw-2024.11.20_23\nsoc-proxy-2024.10.11\nsoc-proxy-2024.10.12\nsoc-fw-2024.11.20_20\nsoc-fw-2024.11.20_22\nsoc-fw-2024.11.20_21\nsoc-proxy-2024.10.17\nsoc-proxy-2024.10.18\nsoc-proxy-2024.10.19\nsoc-proxy-2024.10.13\nsoc-proxy-2024.10.14\nsoc-proxy-2024.10.15\nsoc-proxy-2024.10.16\nsoc-spam-2024.10.23\nsoc-spam-2024.10.24\nsoc-spam-2024.10.25\nsoc-spam-2024.10.26\nsoc-spam-2024.10.27\nsoc-spam-2024.10.28\nsoc-spam-2024.10.29\nsoc-spam-2024.10.30\nsoc-spam-2024.10.31\nsoc-spam-2024.10.12\nsoc-spam-2024.10.13\nsoc-spam-2024.10.14\nsoc-spam-2024.10.15\nsoc-spam-2024.10.16\nsoc-spam-2024.10.17\nsoc-spam-2024.10.18\nsoc-spam-2024.10.19\nsoc-spam-2024.10.20\nsoc-spam-2024.10.21\nsoc-spam-2024.10.22\nsoc-spam-2024.10.10\nsoc-spam-2024.10.11\nsoc-fw-2024.10.29_20\nsoc-fw-2024.10.30_13\nsoc-fw-2024.10.30_12\nsoc-fw-2024.10.30_15\nsoc-fw-2024.10.30_14\nsoc-fw-2024.10.30_11\nsoc-fw-2024.10.30_10\nsoc-fw-2024.10.29_19\nsoc-fw-2024.10.29_18\nsoc-fw-2024.10.30_17\nsoc-fw-2024.10.30_16\nsoc-fw-2024.10.30_19\nsoc-fw-2024.10.30_18\nsoc-fw-2024.10.29_13\nsoc-fw-2024.10.29_12\nsoc-fw-2024.10.29_11\nsoc-fw-2024.10.29_10\nsoc-fw-2024.10.29_17\nsoc-fw-2024.10.29_16\nsoc-fw-2024.10.29_15\nsoc-fw-2024.10.29_14\nsoc-fw-2024.10.30_02\nsoc-fw-2024.10.30_01\nsoc-fw-2024.10.30_04\nsoc-fw-2024.10.30_03\nsoc-fw-2024.10.30_00\nsoc-fw-2024.10.30_09\nsoc-fw-2024.10.30_06\nsoc-fw-2024.10.30_05\nsoc-fw-2024.10.30_08\nsoc-fw-2024.10.30_07\nsoc-fw-2024.10.29_23\nsoc-fw-2024.10.29_22\nsoc-fw-2024.10.29_21\nsoc-fw-2024.11.12_19\nsoc-fw-2024.10.17_17\nsoc-fw-2024.10.17_18\nsoc-fw-2024.10.17_19\nsoc-fw-2024.10.17_13\nsoc-fw-2024.10.17_14\nsoc-fw-2024.10.17_15\nsoc-fw-2024.10.17_16\nsoc-fw-2024.10.17_10\nsoc-fw-2024.10.17_11\nsoc-fw-2024.10.17_12\nsoc-fw-2024.11.12_10\nsoc-fw-2024.11.12_11\nsoc-fw-2024.11.12_12\nsoc-fw-2024.11.12_13\nsoc-fw-2024.11.12_14\nsoc-fw-2024.11.12_15\nsoc-fw-2024.11.12_16\nsoc-fw-2024.11.12_17\nsoc-fw-2024.11.12_18\nsoc-fw-2024.11.12_08\nsoc-fw-2024.11.12_09\nsoc-fw-2024.10.17_20\nsoc-fw-2024.10.17_21\nsoc-fw-2024.10.17_22\nsoc-fw-2024.10.17_23\nsoc-fw-2024.10.29_09\nsoc-fw-2024.10.29_08\nsoc-fw-2024.10.29_07\nsoc-fw-2024.10.29_02\nsoc-fw-2024.11.12_00\nsoc-fw-2024.11.12_01\nsoc-fw-2024.10.29_01\nsoc-fw-2024.11.12_02\nsoc-fw-2024.10.29_00\nsoc-fw-2024.11.12_03\nsoc-fw-2024.10.29_06\nsoc-fw-2024.11.12_04\nsoc-fw-2024.11.12_05\nsoc-fw-2024.10.29_05\nsoc-fw-2024.11.12_06\nsoc-fw-2024.10.29_04\nsoc-fw-2024.11.12_07\nsoc-fw-2024.10.29_03\nsoc-fw-2024.12.06_05\nsoc-fw-2024.12.06_04\nsoc-fw-2024.12.06_07\nsoc-fw-2024.12.06_06\nsoc-fw-2024.12.06_09\nsoc-fw-2024.12.06_08\nsoc-fw-2024.12.06_01\nsoc-fw-2024.12.06_00\nsoc-fw-2024.12.06_03\nsoc-fw-2024.12.06_02\nsoc-fw-2024.11.24_19\nsoc-fw-2024.11.24_18\nsoc-fw-2024.11.24_17\nsoc-fw-2024.11.24_16\nsoc-fw-2024.11.24_15\nsoc-fw-2024.11.24_14\nsoc-fw-2024.11.24_13\nsoc-fw-2024.11.24_12\nsoc-fw-2024.11.24_11\nsoc-fw-2024.11.24_10\nsoc-fw-2024.12.06_16\nsoc-fw-2024.12.06_15\nsoc-fw-2024.12.06_18\nsoc-fw-2024.12.06_17\nsoc-fw-2024.12.06_19\nsoc-fw-2024.12.06_10\nsoc-fw-2024.12.06_12\nsoc-fw-2024.12.06_11\nsoc-fw-2024.12.06_14\nsoc-fw-2024.11.24_09\nsoc-fw-2024.12.06_13\nsoc-fw-2024.11.24_08\nsoc-fw-2024.11.24_07\nsoc-fw-2024.11.24_06\nsoc-fw-2024.11.24_05\nsoc-fw-2024.11.24_04\nsoc-fw-2024.11.24_03\nsoc-fw-2024.11.24_02\nsoc-fw-2024.11.12_20\nsoc-fw-2024.11.24_01\nsoc-fw-2024.11.12_21\nsoc-fw-2024.11.24_00\nsoc-fw-2024.11.12_22\nsoc-fw-2024.11.12_23\nsoc-fw-2024.12.06_21\nsoc-fw-2024.12.06_20\nsoc-fw-2024.12.06_23\nsoc-fw-2024.12.06_22\nsoc-fw-2024.12.18_05\nsoc-fw-2024.12.18_06\nsoc-fw-2024.12.18_07\nsoc-fw-2024.12.18_08\nsoc-fw-2024.12.18_09\nsoc-fw-2024.12.18_00\nsoc-fw-2024.12.18_01\nsoc-fw-2024.12.18_02\nsoc-fw-2024.12.18_03\nsoc-fw-2024.12.18_04\nsoc-fw-2024.10.30_23\nsoc-fw-2024.10.30_20\nsoc-fw-2024.10.30_22\nsoc-fw-2024.10.30_21\nsoc-fw-2024.12.18_16\nsoc-fw-2024.12.18_17\nsoc-fw-2024.12.18_18\nsoc-fw-2024.12.18_19\nsoc-fw-2024.11.24_23\nsoc-fw-2024.11.24_22\nsoc-fw-2024.11.24_21\nsoc-fw-2024.11.24_20\nsoc-fw-2024.12.18_10\nsoc-fw-2024.12.18_11\nsoc-fw-2024.12.18_12\nsoc-fw-2024.12.18_13\nsoc-fw-2024.12.18_14\nsoc-fw-2024.12.18_15\nsoc-waf-2024.12.02\nsoc-fw-2024.12.02_00\nsoc-fw-2024.12.02_01\nsoc-waf-2024.12.03\nsoc-waf-2024.12.04\nsoc-fw-2024.12.02_02\nsoc-waf-2024.12.05\nsoc-fw-2024.12.02_03\nsoc-fw-2024.12.02_04\nsoc-waf-2024.12.06\nsoc-fw-2024.12.02_05\nsoc-waf-2024.12.07\nsoc-fw-2024.12.02_06\nsoc-waf-2024.12.08\nsoc-fw-2024.12.02_07\nsoc-waf-2024.12.09\nsoc-waf-2024.12.01\nsoc-fw-2024.12.02_08\nsoc-fw-2024.12.02_09\nsoc-waf-2024.12.13\nsoc-fw-2024.12.02_11\nsoc-waf-2024.12.14\nsoc-fw-2024.12.02_12\nsoc-fw-2024.12.02_13\nsoc-waf-2024.12.15\nsoc-waf-2024.12.16\nsoc-fw-2024.12.02_14\nsoc-waf-2024.12.17\nsoc-fw-2024.12.02_15\nsoc-fw-2024.12.02_16\nsoc-waf-2024.12.18\nsoc-fw-2024.12.02_17\nsoc-fw-2024.12.02_18\nsoc-waf-2024.12.10\nsoc-waf-2024.12.11\nsoc-fw-2024.12.02_10\nsoc-waf-2024.12.12\nsoc-fw-2024.12.02_19\nsoc-fw-2024.12.02_22\nsoc-fw-2024.12.02_23\nsoc-fw-2024.12.14_09\nsoc-fw-2024.12.02_20\nsoc-fw-2024.12.02_21\nsoc-fw-2024.12.14_00\nsoc-fw-2024.12.14_08\nsoc-fw-2024.12.14_07\nsoc-fw-2024.12.14_06\nsoc-fw-2024.12.14_05\nsoc-fw-2024.12.14_04\nsoc-fw-2024.12.14_03\nsoc-fw-2024.12.14_02\nsoc-fw-2024.12.14_01\nsoc-fw-2024.12.14_11\nsoc-fw-2024.12.14_10\nsoc-fw-2024.12.14_19\nsoc-fw-2024.12.14_18\nsoc-fw-2024.12.14_17\nsoc-fw-2024.12.14_16\nsoc-fw-2024.12.14_15\nsoc-fw-2024.12.14_14\nsoc-fw-2024.12.14_13\nsoc-fw-2024.12.14_12\nsoc-fw-2024.11.04_12\nsoc-fw-2024.11.04_13\nsoc-fw-2024.11.04_10\nsoc-fw-2024.11.04_11\nsoc-fw-2024.11.04_16\nsoc-fw-2024.11.04_17\nsoc-fw-2024.11.04_14\nsoc-fw-2024.11.04_15\nsoc-fw-2024.11.04_18\nsoc-fw-2024.11.04_19\nsoc-fw-2024.12.14_22\nsoc-fw-2024.12.14_21\nsoc-fw-2024.12.14_20\nsoc-fw-2024.12.14_23\nsoc-edr-2024.12.11\nsoc-edr-2024.12.10\nsoc-fw-2024.10.17_06\nsoc-fw-2024.11.04_01\nsoc-fw-2024.10.17_07\nsoc-fw-2024.11.04_02\nsoc-fw-2024.10.17_08\nsoc-fw-2024.11.04_00\nsoc-fw-2024.10.17_09\nsoc-fw-2024.10.17_02\nsoc-fw-2024.11.04_05\nsoc-fw-2024.11.04_06\nsoc-fw-2024.10.17_03\nsoc-fw-2024.11.04_03\nsoc-fw-2024.10.17_04\nsoc-fw-2024.10.17_05\nsoc-fw-2024.11.04_04\nsoc-fw-2024.11.04_09\nsoc-fw-2024.10.17_00\nsoc-fw-2024.11.04_07\nsoc-fw-2024.11.04_08\nsoc-fw-2024.10.17_01\nsoc-edr-2024.12.09\nsoc-edr-2024.12.06\nsoc-edr-2024.12.05\nsoc-edr-2024.12.08\nsoc-edr-2024.12.07\nsoc-edr-2024.12.02\nsoc-edr-2024.12.01\nsoc-edr-2024.12.04\nsoc-edr-2024.12.03\nsoc-fw-2024.11.16_10\nsoc-fw-2024.11.16_12\nsoc-fw-2024.11.16_11\nsoc-fw-2024.11.16_14\nsoc-fw-2024.11.16_13\nsoc-fw-2024.11.16_16\nsoc-fw-2024.11.16_15\nsoc-fw-2024.11.16_18\nsoc-fw-2024.11.16_17\nsoc-fw-2024.11.16_19\nsoc-fw-2024.11.04_20\nsoc-fw-2024.11.04_23\nsoc-fw-2024.11.04_21\nsoc-fw-2024.11.04_22\nsoc-fw-2024.11.16_01\nsoc-fw-2024.11.16_00\nsoc-fw-2024.11.16_03\nsoc-fw-2024.11.16_02\nsoc-fw-2024.11.16_05\nsoc-fw-2024.11.16_04\nsoc-fw-2024.11.16_07\nsoc-fw-2024.11.16_06\nsoc-fw-2024.11.16_09\nsoc-fw-2024.11.16_08\nsoc-fw-2024.11.28_20\nsoc-fw-2024.11.28_21\nsoc-fw-2024.11.28_22\nsoc-fw-2024.11.28_23\nsoc-soceps-2024.12.06\nsoc-soceps-2024.12.05\nsoc-soceps-2024.12.04\nsoc-soceps-2024.12.03\nsoc-soceps-2024.12.09\nsoc-soceps-2024.12.08\nsoc-soceps-2024.12.07\napi\nsoc-soceps-2024.12.02\nsoc-soceps-2024.12.01\nsoc-fw-2024.10.13_04\nsoc-apt-2024.12.11\nsoc-fw-2024.10.13_05\nsoc-apt-2024.12.10\nsoc-fw-2024.10.13_02\nsoc-apt-2024.12.13\nsoc-apt-2024.12.12\nsoc-fw-2024.10.13_03\nsoc-fw-2024.12.11_07\nsoc-fw-2024.10.13_08\nsoc-fw-2024.12.11_06\nsoc-fw-2024.10.13_09\nsoc-fw-2024.10.13_06\nsoc-fw-2024.12.11_09\nsoc-fw-2024.10.13_07\nsoc-fw-2024.12.11_08\nsoc-fw-2024.10.13_00\nsoc-fw-2024.10.13_01\nsoc-soceps-2024.12.17\nsoc-soceps-2024.12.16\nsoc-soceps-2024.12.15\nsoc-fw-2024.11.16_21\nsoc-fw-2024.11.16_20\nsoc-soceps-2024.12.14\nsoc-fw-2024.11.16_23\nsoc-fw-2024.11.16_22\nsoc-soceps-2024.12.18\nsoc-fw-2024.12.11_03\nsoc-ids-2024.12.03\nsoc-apt-2024.12.18\nsoc-fw-2024.12.11_02\nsoc-ids-2024.12.02\nsoc-ids-2024.12.05\nsoc-fw-2024.12.11_05\nsoc-fw-2024.12.11_04\nsoc-ids-2024.12.04\nsoc-soceps-2024.12.13\nsoc-apt-2024.12.15\nsoc-apt-2024.12.14\nsoc-soceps-2024.12.12\nsoc-fw-2024.12.11_01\nsoc-apt-2024.12.17\nsoc-soceps-2024.12.11\nsoc-ids-2024.12.01\nsoc-soceps-2024.12.10\nsoc-fw-2024.12.11_00\nsoc-apt-2024.12.16\nsoc-apt-2024.12.02\nsoc-apt-2024.12.01\nsoc-fw-2024.11.28_00\nsoc-fw-2024.11.28_01\nsoc-fw-2024.12.11_18\nsoc-ids-2024.12.07\nsoc-ids-2024.12.06\nsoc-fw-2024.11.28_02\nsoc-fw-2024.12.11_17\nsoc-ids-2024.12.09\nsoc-fw-2024.11.28_03\nsoc-ids-2024.12.08\nsoc-fw-2024.11.28_04\nsoc-fw-2024.12.11_19\nsoc-fw-2024.11.28_05\nsoc-fw-2024.11.28_06\nsoc-fw-2024.11.28_07\nsoc-fw-2024.11.28_08\nsoc-fw-2024.11.28_09\nsoc-apt-2024.12.08\nsoc-edr-2024.12.17\nsoc-fw-2024.12.11_14\nsoc-ids-2024.12.14\nsoc-ids-2024.12.13\nsoc-edr-2024.12.16\nsoc-fw-2024.12.11_13\nsoc-apt-2024.12.07\nsoc-fw-2024.12.11_16\nsoc-ids-2024.12.16\nsoc-ids-2024.12.15\nsoc-edr-2024.12.18\nsoc-apt-2024.12.09\nsoc-fw-2024.12.11_15\nsoc-edr-2024.12.13\nsoc-ids-2024.12.10\nsoc-fw-2024.12.11_10\nsoc-apt-2024.12.04\nsoc-edr-2024.12.12\nsoc-apt-2024.12.03\nsoc-apt-2024.12.06\nsoc-edr-2024.12.15\nsoc-ids-2024.12.12\nsoc-fw-2024.12.11_12\nsoc-ids-2024.12.11\nsoc-apt-2024.12.05\nsoc-edr-2024.12.14\nsoc-fw-2024.12.11_11\nsoc-fw-2024.11.28_10\nsoc-fw-2024.11.28_11\nsoc-fw-2024.11.28_12\nsoc-ids-2024.12.18\nsoc-fw-2024.11.28_13\nsoc-ids-2024.12.17\nsoc-fw-2024.11.28_14\nsoc-fw-2024.11.28_15\nsoc-fw-2024.11.28_16\nsoc-fw-2024.11.28_17\nsoc-fw-2024.11.28_18\nsoc-fw-2024.11.28_19\nsoc-fw-2024.12.11_21\nsoc-fw-2024.12.11_20\nsoc-fw-2024.12.11_23\nsoc-fw-2024.12.11_22\nsoc-fw-2024.10.25_15\nsoc-fw-2024.10.25_14\nsoc-fw-2024.10.25_17\nsoc-fw-2024.10.25_16\nsoc-fw-2024.10.25_19\nsoc-fw-2024.10.25_18\nsoc-fw-2024.10.25_11\nsoc-fw-2024.10.25_10\nsoc-fw-2024.10.25_13\nsoc-fw-2024.10.25_12\nsoc-fw-2024.10.25_20\nsoc-fw-2024.10.25_22\nsoc-fw-2024.10.25_21\nsoc-fw-2024.10.25_23\nsoc-fw-2024.10.13_15\nsoc-fw-2024.10.13_16\nsoc-fw-2024.10.13_13\nsoc-fw-2024.10.13_14\nsoc-fw-2024.10.13_19\nsoc-fw-2024.10.13_17\nsoc-fw-2024.10.13_18\nsoc-fw-2024.10.13_11\nsoc-fw-2024.10.13_12\nsoc-fw-2024.10.13_10\nsoc-fw-2024.10.13_22\nsoc-fw-2024.10.13_23\nsoc-fw-2024.10.13_20\nsoc-fw-2024.10.13_21\nsoc-fw-2024.10.25_04\nsoc-fw-2024.10.25_03\nsoc-fw-2024.10.25_06\nsoc-fw-2024.10.25_05\nsoc-fw-2024.10.25_08\nsoc-fw-2024.10.25_07\nsoc-fw-2024.10.25_09\nsoc-fw-2024.10.25_00\nsoc-fw-2024.10.25_02\nsoc-fw-2024.10.25_01\nsoc-os-2024.12.18\nsoc-fw-2024.11.08_14\nsoc-os-2024.12.17\nsoc-fw-2024.11.08_15\nsoc-fw-2024.11.08_16\nsoc-fw-2024.11.08_17\nsoc-fw-2024.11.08_10\nsoc-fw-2024.11.08_11\nsoc-fw-2024.10.21_19\nsoc-fw-2024.11.08_12\nsoc-fw-2024.10.21_18\nsoc-fw-2024.11.08_13\nsoc-os-2024.12.10\nsoc-os-2024.12.12\nsoc-os-2024.12.11\nsoc-os-2024.12.14\nsoc-fw-2024.11.08_18\nsoc-os-2024.12.13\nsoc-fw-2024.11.08_19\nsoc-os-2024.12.16\nsoc-os-2024.12.15\nsoc-fw-2024.10.21_17\nsoc-fw-2024.10.21_16\nsoc-fw-2024.12.18_20\nsoc-fw-2024.10.21_15\nsoc-fw-2024.12.18_21\nsoc-fw-2024.12.18_22\nsoc-fw-2024.11.08_20\nsoc-fw-2024.10.21_14\nsoc-fw-2024.10.21_13\nsoc-fw-2024.12.18_23\nsoc-fw-2024.10.21_12\nsoc-fw-2024.10.21_11\nsoc-fw-2024.10.21_10\nsoc-os-2024.12.07\nsoc-fw-2024.11.08_03\nsoc-os-2024.12.06\nsoc-fw-2024.11.08_04\nsoc-fw-2024.11.08_05\nsoc-os-2024.12.09\nsoc-os-2024.12.08\nsoc-fw-2024.11.08_06\nsoc-fw-2024.11.08_00\nsoc-fw-2024.11.08_01\nsoc-fw-2024.11.08_02\nsoc-os-2024.12.01\nsoc-fw-2024.11.08_07\nsoc-os-2024.12.03\nsoc-os-2024.12.02\nsoc-fw-2024.11.08_08\nsoc-fw-2024.11.08_09\nsoc-os-2024.12.05\nsoc-os-2024.12.04\nsoc-fw-2024.10.21_20\nsoc-proxy-2024.11.01\nsoc-proxy-2024.11.02\nsoc-proxy-2024.11.07\nsoc-proxy-2024.11.08\nsoc-proxy-2024.11.09\nsoc-proxy-2024.11.03\nsoc-proxy-2024.11.04\nsoc-fw-2024.10.21_23\nsoc-fw-2024.10.21_22\nsoc-proxy-2024.11.05\nsoc-fw-2024.10.21_21\nsoc-proxy-2024.11.06\nsoc-fw-2024.11.21_07\nsoc-fw-2024.11.21_06\nsoc-fw-2024.11.21_09\nsoc-fw-2024.11.21_08\nsoc-fw-2024.11.21_03\nsoc-fw-2024.11.21_02\nsoc-fw-2024.11.21_05\nsoc-fw-2024.11.21_04\nsoc-fw-2024.11.21_01\nsoc-fw-2024.11.21_00\nsoc-fw-2024.11.08_21\nsoc-fw-2024.10.21_09\nsoc-fw-2024.11.08_22\nsoc-fw-2024.11.08_23\nsoc-fw-2024.10.21_08\nsoc-fw-2024.10.21_07\nsoc-fw-2024.10.21_06\nsoc-fw-2024.10.21_05\nsoc-fw-2024.10.21_04\nsoc-fw-2024.10.21_03\nsoc-fw-2024.10.21_02\nsoc-fw-2024.10.21_01\nsoc-fw-2024.10.21_00\nsoc-antivirus-2024.10.20\nsoc-antivirus-2024.10.23\nsoc-antivirus-2024.10.24\nsoc-antivirus-2024.10.21\nsoc-antivirus-2024.10.22\nsoc-antivirus-2024.10.27\nsoc-antivirus-2024.10.28\nsoc-antivirus-2024.10.25\nsoc-antivirus-2024.10.26\nsoc-antivirus-2024.10.18\nsoc-antivirus-2024.10.19\nsoc-fw-2024.11.21_21\nsoc-fw-2024.11.21_20\nsoc-proxy-2024.11.30\nsoc-fw-2024.11.21_23\nsoc-fw-2024.11.21_22\nsoc-antivirus-2024.10.12\nsoc-antivirus-2024.10.13\nsoc-antivirus-2024.10.10\nsoc-antivirus-2024.10.11\nsoc-antivirus-2024.10.16\nsoc-fw-2024.11.21_18\nsoc-antivirus-2024.10.17\nsoc-fw-2024.11.21_17\nsoc-antivirus-2024.10.14\nsoc-fw-2024.11.21_19\nsoc-antivirus-2024.10.15\nsoc-fw-2024.11.21_14\nsoc-fw-2024.11.21_13\nsoc-fw-2024.11.21_16\nsoc-fw-2024.11.21_15\nsoc-fw-2024.11.21_10\nsoc-fw-2024.11.21_12\nsoc-fw-2024.11.21_11\nsoc-proxy-2024.11.10\nsoc-proxy-2024.11.11\nsoc-proxy-2024.11.12\nsoc-proxy-2024.11.13\nsoc-proxy-2024.11.18\nsoc-proxy-2024.11.19\nsoc-proxy-2024.11.14\nsoc-proxy-2024.11.15\nsoc-proxy-2024.11.16\nsoc-proxy-2024.11.17\nsoc-antivirus-2024.10.30\nsoc-antivirus-2024.10.31\nsoc-proxy-2024.11.21\nsoc-proxy-2024.11.22\nsoc-antivirus-2024.10.29\nsoc-proxy-2024.11.23\nsoc-proxy-2024.11.24\nsoc-proxy-2024.11.20\nsoc-proxy-2024.11.29\nsoc-proxy-2024.11.25\nsoc-proxy-2024.11.26\nsoc-proxy-2024.11.27\nsoc-proxy-2024.11.28\nsoc-fw-2024.10.18_07\nsoc-fw-2024.10.18_08\nsoc-fw-2024.10.18_09\nsoc-fw-2024.10.18_03\nsoc-fw-2024.10.18_04\nsoc-fw-2024.10.18_05\nsoc-fw-2024.10.18_06\nsoc-fw-2024.10.18_00\nsoc-fw-2024.10.18_01\nsoc-fw-2024.10.18_02\nsoc-fw-2024.12.05_04\nsoc-fw-2024.12.05_03\nsoc-fw-2024.12.05_06\nsoc-fw-2024.12.05_05\nsoc-fw-2024.12.05_08\nsoc-fw-2024.10.18_18\nsoc-fw-2024.10.18_19\nsoc-fw-2024.12.05_07\nsoc-fw-2024.12.05_09\nsoc-fw-2024.10.18_14\nsoc-fw-2024.10.18_15\nsoc-fw-2024.10.18_16\nsoc-fw-2024.10.18_17\nsoc-fw-2024.10.18_10\nsoc-fw-2024.12.05_00\nsoc-fw-2024.10.18_11\nsoc-fw-2024.10.18_12\nsoc-fw-2024.12.05_02\nsoc-fw-2024.10.18_13\nsoc-fw-2024.12.05_01\nsoc-fw-2024.10.18_20\nsoc-fw-2024.12.05_15\nsoc-fw-2024.12.05_14\nsoc-fw-2024.12.05_17\nsoc-fw-2024.12.05_16\nsoc-fw-2024.12.05_19\nsoc-fw-2024.12.05_18\nsoc-fw-2024.11.01_01\nsoc-fw-2024.11.01_00\nsoc-fw-2024.11.01_03\nsoc-fw-2024.11.01_02\nsoc-fw-2024.11.01_05\nsoc-fw-2024.12.05_11\nsoc-fw-2024.12.05_10\nsoc-fw-2024.11.01_04\nsoc-fw-2024.12.05_13\nsoc-fw-2024.11.01_07\nsoc-fw-2024.11.01_06\nsoc-fw-2024.12.05_12\nsoc-fw-2024.11.01_09\nsoc-fw-2024.11.01_08\nsoc-fw-2024.12.05_20\nsoc-fw-2024.12.05_22\nsoc-fw-2024.12.05_21\nsoc-fw-2024.12.05_23\nsoc-fw-2024.12.17_04\nsoc-fw-2024.12.17_05\nsoc-fw-2024.12.17_06\nsoc-fw-2024.12.17_07\nsoc-fw-2024.12.17_08\nsoc-fw-2024.12.17_09\nsoc-fw-2024.12.17_00\nsoc-fw-2024.12.17_01\nsoc-fw-2024.12.17_02\nsoc-fw-2024.12.17_03\nsoc-fw-2024.11.13_09\nsoc-fw-2024.11.01_21\nsoc-fw-2024.11.01_20\nsoc-fw-2024.11.01_23\nsoc-esmeps-2024.12.16\nsoc-esmeps-2024.12.17\nsoc-fw-2024.11.01_22\nsoc-esmeps-2024.12.14\nsoc-esmeps-2024.12.15\nsoc-fw-2024.10.31_21\nsoc-fw-2024.10.31_20\nsoc-fw-2024.10.31_23\nsoc-esmeps-2024.12.18\nsoc-fw-2024.10.31_22\nsoc-fw-2024.12.17_15\nsoc-fw-2024.12.17_16\nsoc-fw-2024.12.17_17\nsoc-fw-2024.12.17_18\nsoc-fw-2024.12.17_19\nsoc-fw-2024.11.13_00\nsoc-fw-2024.11.13_01\nsoc-fw-2024.11.13_02\nsoc-fw-2024.11.13_03\nsoc-fw-2024.12.17_10\nsoc-fw-2024.11.13_04\nsoc-fw-2024.11.13_05\nsoc-fw-2024.12.17_11\nsoc-fw-2024.11.13_06\nsoc-fw-2024.12.17_12\nsoc-fw-2024.11.13_07\nsoc-fw-2024.12.17_13\nsoc-fw-2024.11.13_08\nsoc-fw-2024.12.17_14\nsoc-fw-2024.11.01_10\nsoc-fw-2024.11.01_12\nsoc-waf-2024.11.08\nsoc-esmeps-2024.12.05\nsoc-fw-2024.10.31_14\nsoc-fw-2024.10.31_13\nsoc-fw-2024.11.01_11\nsoc-waf-2024.11.07\nsoc-esmeps-2024.12.06\nsoc-esmeps-2024.12.03\nsoc-fw-2024.11.01_14\nsoc-waf-2024.11.06\nsoc-fw-2024.10.31_16\nsoc-fw-2024.11.01_13\nsoc-fw-2024.10.31_15\nsoc-esmeps-2024.12.04\nsoc-waf-2024.11.05\nsoc-fw-2024.10.31_10\nsoc-waf-2024.11.04\nsoc-fw-2024.11.01_16\nsoc-esmeps-2024.12.09\nsoc-fw-2024.11.01_15\nsoc-waf-2024.11.03\nsoc-fw-2024.11.01_18\nsoc-waf-2024.11.02\nsoc-fw-2024.10.31_12\nsoc-esmeps-2024.12.07\nsoc-waf-2024.11.01\nsoc-esmeps-2024.12.08\nsoc-fw-2024.11.01_17\nsoc-fw-2024.10.31_11\nsoc-fw-2024.11.01_19\nsoc-esmeps-2024.12.12\nsoc-fw-2024.10.31_18\nsoc-fw-2024.10.31_17\nsoc-esmeps-2024.12.13\nsoc-esmeps-2024.12.10\nsoc-fw-2024.10.31_19\nsoc-esmeps-2024.12.11\nsoc-fw-2024.12.17_20\nsoc-fw-2024.12.17_21\nsoc-fw-2024.12.17_22\nsoc-fw-2024.12.17_23\nsoc-waf-2024.11.11\nsoc-waf-2024.11.10\nsoc-fw-2024.10.31_03\nsoc-waf-2024.11.19\nsoc-fw-2024.10.31_02\nsoc-waf-2024.11.18\nsoc-fw-2024.10.31_05\nsoc-waf-2024.11.17\nsoc-fw-2024.10.31_04\nsoc-waf-2024.11.16\nsoc-waf-2024.11.15\nsoc-fw-2024.10.18_21\nsoc-fw-2024.10.18_22\nsoc-waf-2024.11.14\nsoc-fw-2024.10.31_01\nsoc-fw-2024.10.18_23\nsoc-waf-2024.11.13\nsoc-waf-2024.11.12\nsoc-fw-2024.10.31_00\nsoc-fw-2024.11.25_09\nsoc-fw-2024.11.25_08\nsoc-fw-2024.11.25_07\nsoc-fw-2024.11.25_06\nsoc-fw-2024.11.25_05\nsoc-esmeps-2024.12.01\nsoc-fw-2024.10.31_07\nsoc-fw-2024.11.25_04\nsoc-fw-2024.11.13_20\nsoc-fw-2024.10.31_06\nsoc-esmeps-2024.12.02\nsoc-fw-2024.10.31_09\nsoc-fw-2024.11.25_03\nsoc-fw-2024.11.13_21\nsoc-fw-2024.10.31_08\nsoc-fw-2024.11.25_02\nsoc-fw-2024.11.13_22\nsoc-waf-2024.11.09\nsoc-fw-2024.11.13_23\nsoc-fw-2024.11.25_01\nsoc-fw-2024.11.25_00\nsoc-waf-2024.11.22\nsoc-waf-2024.11.21\nsoc-waf-2024.11.20\nsoc-waf-2024.11.29\nsoc-waf-2024.11.28\nsoc-waf-2024.11.27\nsoc-waf-2024.11.26\nsoc-waf-2024.11.25\nsoc-waf-2024.11.24\nsoc-waf-2024.11.23\nsoc-fw-2024.11.13_10\nsoc-fw-2024.11.13_11\nsoc-fw-2024.11.13_12\nsoc-fw-2024.11.13_13\nsoc-fw-2024.11.13_14\nsoc-fw-2024.11.13_15\nsoc-fw-2024.11.13_16\nsoc-fw-2024.11.13_17\nsoc-fw-2024.11.13_18\nsoc-fw-2024.11.13_19\nsoc-waf-2024.11.30\nsoc-fw-2024.12.13_19\nsoc-fw-2024.12.13_10\nsoc-fw-2024.12.13_17\nsoc-fw-2024.11.25_23\nsoc-fw-2024.11.25_22\nsoc-fw-2024.12.13_18\nsoc-fw-2024.12.13_15\nsoc-fw-2024.10.26_21\nsoc-fw-2024.11.25_21\nsoc-fw-2024.10.26_20\nsoc-fw-2024.11.25_20\nsoc-fw-2024.12.13_16\nsoc-fw-2024.10.26_23\nsoc-fw-2024.12.13_13\nsoc-fw-2024.12.13_14\nsoc-fw-2024.10.26_22\nsoc-fw-2024.12.13_11\nsoc-fw-2024.12.13_12\nsoc-fw-2024.12.13_20\nsoc-fw-2024.11.25_19\nsoc-fw-2024.12.13_21\nsoc-fw-2024.11.25_18\nsoc-fw-2024.11.25_17\nsoc-fw-2024.11.25_16\nsoc-fw-2024.11.25_15\nsoc-fw-2024.11.25_14\nsoc-fw-2024.11.25_13\nsoc-fw-2024.11.25_12\nsoc-fw-2024.11.25_11\nsoc-fw-2024.11.25_10\nsoc-fw-2024.12.13_22\nsoc-fw-2024.12.13_23\nsoc-fw-2024.10.14_20\nsoc-fw-2024.10.14_23\nsoc-fw-2024.10.14_21\nsoc-fw-2024.10.14_22\nsoc-fw-2024.10.26_05\nsoc-fw-2024.10.26_04\nsoc-fw-2024.10.26_07\nsoc-fw-2024.10.26_06\nsoc-fw-2024.10.26_09\nsoc-fw-2024.10.26_08\nsoc-fw-2024.10.26_01\nsoc-fw-2024.10.26_00\nsoc-fw-2024.10.26_03\nsoc-fw-2024.10.26_02\nsoc-fw-2024.10.26_16\nsoc-fw-2024.10.26_15\nsoc-fw-2024.10.26_18\nsoc-fw-2024.10.26_17\nsoc-fw-2024.10.26_19\nsoc-fw-2024.10.26_10\nsoc-fw-2024.10.26_12\nsoc-fw-2024.10.26_11\nsoc-fw-2024.10.26_14\nsoc-fw-2024.10.26_13\nsoc-edr-2024.11.30\nsoc-edr-2024.11.26\nsoc-edr-2024.11.27\nsoc-edr-2024.11.28\nsoc-edr-2024.11.29\nsoc-edr-2024.11.22\nsoc-edr-2024.11.23\nsoc-edr-2024.11.24\nsoc-edr-2024.11.25\nsoc-apt-2024.10.30\nsoc-apt-2024.10.31\nsoc-apt-2024.10.20\nsoc-apt-2024.10.21\nsoc-edr-2024.11.10\nsoc-apt-2024.10.22\nsoc-fw-2024.11.05_03\nsoc-fw-2024.11.05_02\nsoc-fw-2024.11.05_01\nsoc-fw-2024.11.05_00\nsoc-fw-2024.11.05_07\nsoc-fw-2024.11.05_06\nsoc-fw-2024.11.05_05\nsoc-fw-2024.11.05_04\nsoc-fw-2024.11.05_09\nsoc-fw-2024.11.05_08\nsoc-edr-2024.11.08\nsoc-edr-2024.11.09\nsoc-edr-2024.11.04\nsoc-apt-2024.10.27\nsoc-edr-2024.11.05\nsoc-apt-2024.10.28\nsoc-apt-2024.10.29\nsoc-edr-2024.11.06\nsoc-edr-2024.11.07\nsoc-apt-2024.10.23\nsoc-apt-2024.10.24\nsoc-edr-2024.11.01\nsoc-edr-2024.11.02\nsoc-apt-2024.10.25\nsoc-edr-2024.11.03\nsoc-apt-2024.10.26\nsoc-apt-2024.10.10\nsoc-edr-2024.11.20\nsoc-edr-2024.11.21\nsoc-apt-2024.10.11\nsoc-edr-2024.11.19\nsoc-apt-2024.10.16\nsoc-edr-2024.11.15\nsoc-edr-2024.11.16\nsoc-apt-2024.10.17\nsoc-apt-2024.10.18\nsoc-edr-2024.11.17\nsoc-apt-2024.10.19\nsoc-edr-2024.11.18\nsoc-edr-2024.11.11\nsoc-apt-2024.10.12\nsoc-apt-2024.10.13\nsoc-edr-2024.11.12\nsoc-apt-2024.10.14\nsoc-edr-2024.11.13\nsoc-edr-2024.11.14\nsoc-apt-2024.10.15\nsoc-fw-2024.11.05_21\nsoc-fw-2024.11.05_20\nsoc-antivirus-2024.11.30\nsoc-fw-2024.11.05_23\nsoc-fw-2024.11.05_22\nsoc-spam-2024.12.15\nsoc-spam-2024.12.14\nsoc-spam-2024.12.17\nsoc-spam-2024.12.16\nsoc-spam-2024.12.18\nsoc-fw-2024.11.17_00\nsoc-fw-2024.11.17_03\nsoc-fw-2024.11.17_04\nsoc-fw-2024.11.17_01\nsoc-fw-2024.11.17_02\nsoc-soceps-2024.11.30\nsoc-fw-2024.11.17_07\nsoc-fw-2024.12.10_23\nsoc-fw-2024.11.17_08\nsoc-fw-2024.11.17_05\nsoc-fw-2024.11.17_06\nsoc-fw-2024.12.10_20\nsoc-fw-2024.12.10_22\nsoc-fw-2024.11.17_09\nsoc-fw-2024.12.10_21\nsoc-fw-2024.11.05_10\nsoc-fw-2024.11.29_01\nsoc-fw-2024.11.29_00\nsoc-antivirus-2024.11.21\nsoc-fw-2024.11.05_14\nsoc-fw-2024.11.29_03\nsoc-fw-2024.11.29_02\nsoc-antivirus-2024.11.20\nsoc-fw-2024.11.05_13\nsoc-fw-2024.11.29_05\nsoc-fw-2024.11.05_12\nsoc-fw-2024.11.29_04\nsoc-fw-2024.11.05_11\nsoc-spam-2024.12.04\nsoc-antivirus-2024.11.25\nsoc-fw-2024.11.29_07\nsoc-fw-2024.11.05_18\nsoc-fw-2024.11.29_06\nsoc-antivirus-2024.11.24\nsoc-fw-2024.11.05_17\nsoc-spam-2024.12.03\nsoc-fw-2024.11.29_09\nsoc-antivirus-2024.11.23\nsoc-spam-2024.12.06\nsoc-fw-2024.11.05_16\nsoc-spam-2024.12.05\nsoc-fw-2024.11.05_15\nsoc-antivirus-2024.11.22\nsoc-fw-2024.11.29_08\nsoc-spam-2024.12.08\nsoc-antivirus-2024.11.29\nsoc-spam-2024.12.07\nsoc-antivirus-2024.11.28\nsoc-antivirus-2024.11.27\nsoc-fw-2024.11.05_19\nsoc-antivirus-2024.11.26\nsoc-spam-2024.12.09\nsoc-antivirus-2024.11.19\nsoc-spam-2024.12.11\nsoc-spam-2024.12.10\nsoc-spam-2024.12.13\nsoc-spam-2024.12.12\nsoc-fw-2024.11.17_21\nsoc-soceps-2024.11.16\nsoc-fw-2024.11.17_22\nsoc-soceps-2024.11.15\nsoc-soceps-2024.11.14\nsoc-soceps-2024.11.13\nsoc-fw-2024.11.17_20\nsoc-soceps-2024.11.19\nsoc-soceps-2024.11.18\nsoc-spam-2024.12.02\nsoc-fw-2024.11.17_23\nsoc-soceps-2024.11.17\nsoc-spam-2024.12.01\nsoc-soceps-2024.11.12\nsoc-soceps-2024.11.11\nsoc-soceps-2024.11.10\nsoc-fw-2024.11.17_10\nsoc-soceps-2024.11.27\nsoc-fw-2024.11.17_11\nsoc-soceps-2024.11.26\nsoc-soceps-2024.11.25\nsoc-soceps-2024.11.24\nsoc-fw-2024.11.17_14\nsoc-fw-2024.11.17_15\nsoc-soceps-2024.11.29\nsoc-fw-2024.11.17_12\nsoc-fw-2024.11.17_13\nsoc-soceps-2024.11.28\nsoc-fw-2024.11.17_18\nsoc-fw-2024.11.17_19\nsoc-fw-2024.11.17_16\nsoc-fw-2024.11.17_17\nsoc-soceps-2024.11.23\nsoc-soceps-2024.11.22\nsoc-soceps-2024.11.21\nsoc-soceps-2024.11.20\nsoc-fw-2024.10.14_05\nsoc-fw-2024.11.30_21\nsoc-fw-2024.11.30_20\nsoc-fw-2024.10.14_06\nsoc-fw-2024.10.14_03\nsoc-fw-2024.10.14_04\nsoc-fw-2024.10.14_09\nsoc-fw-2024.11.30_23\nsoc-fw-2024.10.14_07\nsoc-fw-2024.11.30_22\nsoc-fw-2024.10.14_08\nsoc-fw-2024.10.14_01\nsoc-fw-2024.10.14_02\nsoc-fw-2024.10.14_00\nsoc-fw-2024.10.14_16\nsoc-fw-2024.10.14_17\nsoc-fw-2024.10.14_14\nsoc-fw-2024.10.14_15\nsoc-fw-2024.10.14_18\nsoc-fw-2024.10.14_19\nsoc-fw-2024.10.14_12\nsoc-fw-2024.10.14_13\nsoc-fw-2024.10.14_10\nsoc-fw-2024.10.14_11\nsoc-soceps-2024.11.05\nsoc-soceps-2024.11.04\nsoc-soceps-2024.11.03\nsoc-soceps-2024.11.02\nsoc-soceps-2024.11.09\nsoc-soceps-2024.11.08\nsoc-soceps-2024.11.07\nsoc-soceps-2024.11.06\nsoc-soceps-2024.11.01\nsoc-fw-2024.11.29_10\nsoc-fw-2024.11.29_12\nsoc-fw-2024.11.29_11\nsoc-fw-2024.11.29_14\nsoc-fw-2024.11.30_03\nsoc-fw-2024.11.30_02\nsoc-fw-2024.11.29_13\nsoc-fw-2024.11.30_01\nsoc-fw-2024.11.29_16\nsoc-fw-2024.11.29_15\nsoc-fw-2024.11.30_00\nsoc-fw-2024.11.29_18\nsoc-fw-2024.11.29_17\nsoc-fw-2024.11.29_19\nsoc-fw-2024.11.30_07\nsoc-fw-2024.11.30_06\nsoc-fw-2024.11.30_05\nsoc-fw-2024.11.30_04\nsoc-fw-2024.11.30_09\nsoc-fw-2024.11.30_08\nsoc-fw-2024.11.29_21\nsoc-fw-2024.11.30_10\nsoc-fw-2024.11.29_20\nsoc-fw-2024.11.29_23\nsoc-fw-2024.11.29_22\nsoc-fw-2024.11.30_14\nsoc-fw-2024.11.30_13\nsoc-fw-2024.11.30_12\nsoc-fw-2024.11.30_11\nsoc-fw-2024.11.30_18\nsoc-fw-2024.11.30_17\nsoc-fw-2024.11.30_16\nsoc-fw-2024.11.30_15\nsoc-fw-2024.11.30_19\nsoc-fw-2024.10.10_00\nsoc-fw-2024.10.10_01\nsoc-fw-2024.10.10_02\nsoc-fw-2024.10.10_03\nsoc-fw-2024.10.10_04\nsoc-fw-2024.10.10_05\nsoc-fw-2024.10.10_06\nsoc-fw-2024.10.10_07\nsoc-fw-2024.10.10_08\nsoc-fw-2024.10.10_09\nsoc-fw-2024.10.10_10\nsoc-fw-2024.10.10_11\nsoc-fw-2024.10.10_12\nsoc-fw-2024.10.10_13\nsoc-fw-2024.10.10_14\nsoc-fw-2024.10.10_15\nsoc-fw-2024.10.10_16\nsoc-fw-2024.10.10_17\nsoc-os-2024.11.30\nsoc-fw-2024.10.10_18\nsoc-fw-2024.10.10_19\nsoc-fw-2024.11.09_05\nsoc-os-2024.11.28\nsoc-os-2024.11.27\nsoc-fw-2024.11.09_04\nsoc-fw-2024.11.09_07\nsoc-fw-2024.11.09_06\nsoc-os-2024.11.29\nsoc-fw-2024.11.09_01\nsoc-fw-2024.11.09_00\nsoc-fw-2024.11.09_03\nsoc-fw-2024.11.09_02\nsoc-os-2024.11.20\nsoc-os-2024.11.22\nsoc-os-2024.11.21\nsoc-fw-2024.11.09_09\nsoc-os-2024.11.24\nsoc-os-2024.11.23\nsoc-fw-2024.11.09_08\nsoc-os-2024.11.26\nsoc-os-2024.11.25\nsoc-fw-2024.11.09_10\nsoc-os-2024.11.17\nsoc-os-2024.11.16\nsoc-os-2024.11.19\nsoc-os-2024.11.18\nsoc-os-2024.11.11\nsoc-os-2024.11.10\nsoc-os-2024.11.13\nsoc-os-2024.11.12\nsoc-os-2024.11.15\nsoc-os-2024.11.14\nsoc-fw-2024.11.10_16\nsoc-fw-2024.11.10_15\nsoc-fw-2024.11.10_14\nsoc-fw-2024.11.10_13\nsoc-fw-2024.11.10_12\nsoc-fw-2024.11.09_23\nsoc-fw-2024.11.10_11\nsoc-fw-2024.11.09_22\nsoc-fw-2024.11.10_10\nsoc-proxy-2024.12.01\nsoc-fw-2024.10.22_21\nsoc-fw-2024.10.22_20\nsoc-proxy-2024.12.03\nsoc-proxy-2024.12.02\nsoc-proxy-2024.12.09\nsoc-proxy-2024.12.08\nsoc-proxy-2024.12.05\nsoc-fw-2024.11.10_19\nsoc-proxy-2024.12.04\nsoc-proxy-2024.12.07\nsoc-fw-2024.11.10_18\nsoc-fw-2024.10.22_23\nsoc-proxy-2024.12.06\nsoc-fw-2024.11.10_17\nsoc-fw-2024.10.22_22\nsoc-fw-2024.11.10_05\nsoc-fw-2024.11.09_16\nsoc-fw-2024.11.10_04\nsoc-fw-2024.11.09_15\nsoc-fw-2024.12.09_09\nsoc-fw-2024.12.09_08\nsoc-fw-2024.11.09_18\nsoc-fw-2024.11.10_03\nsoc-fw-2024.11.09_17\nsoc-fw-2024.12.09_07\nsoc-fw-2024.11.10_02\nsoc-fw-2024.11.09_12\nsoc-fw-2024.11.10_01\nsoc-fw-2024.11.09_11\nsoc-fw-2024.11.10_00\nsoc-fw-2024.11.09_14\nsoc-fw-2024.11.09_13\nsoc-fw-2024.12.09_02\nsoc-fw-2024.12.09_01\nsoc-fw-2024.12.09_00\nsoc-fw-2024.12.09_06\nsoc-fw-2024.12.09_05\nsoc-fw-2024.11.09_19\nsoc-fw-2024.12.09_04\nsoc-fw-2024.12.09_03\nsoc-proxy-2024.12.12\nsoc-proxy-2024.12.11\nsoc-proxy-2024.12.14\nsoc-proxy-2024.12.13\nsoc-proxy-2024.12.10\nsoc-fw-2024.11.09_21\nsoc-fw-2024.11.09_20\nsoc-fw-2024.11.10_09\nsoc-proxy-2024.12.16\nsoc-fw-2024.11.10_08\nsoc-proxy-2024.12.15\nsoc-fw-2024.11.10_07\nsoc-proxy-2024.12.18\nsoc-fw-2024.11.10_06\nsoc-proxy-2024.12.17\nsoc-fw-2024.10.10_21\nsoc-fw-2024.10.10_22\nsoc-fw-2024.12.10_09\nsoc-fw-2024.12.09_19\nsoc-fw-2024.10.10_23\nsoc-fw-2024.12.09_18\nsoc-antivirus-2024.11.10\nsoc-fw-2024.12.10_06\nsoc-fw-2024.12.10_05\nsoc-fw-2024.10.22_09\nsoc-fw-2024.12.10_08\nsoc-fw-2024.10.22_08\nsoc-fw-2024.12.10_07\nsoc-antivirus-2024.11.14\nsoc-fw-2024.12.09_13\nsoc-antivirus-2024.11.13\nsoc-fw-2024.12.09_12\nsoc-antivirus-2024.11.12\nsoc-fw-2024.12.09_11\nsoc-antivirus-2024.11.11\nsoc-fw-2024.12.09_10\nsoc-fw-2024.12.09_17\nsoc-antivirus-2024.11.18\nsoc-fw-2024.12.09_16\nsoc-antivirus-2024.11.17\nsoc-fw-2024.11.22_18\nsoc-antivirus-2024.11.16\nsoc-fw-2024.12.09_15\nsoc-fw-2024.11.22_19\nsoc-fw-2024.10.10_20\nsoc-antivirus-2024.11.15\nsoc-fw-2024.12.09_14\nsoc-fw-2024.11.22_16\nsoc-fw-2024.11.22_17\nsoc-fw-2024.11.22_14\nsoc-antivirus-2024.11.09\nsoc-fw-2024.11.22_15\nsoc-antivirus-2024.11.08\nsoc-fw-2024.12.09_20\nsoc-fw-2024.11.22_12\nsoc-fw-2024.11.22_13\nsoc-fw-2024.11.22_10\nsoc-fw-2024.11.22_11\nsoc-fw-2024.12.10_02\nsoc-fw-2024.10.22_07\nsoc-fw-2024.12.10_01\nsoc-fw-2024.10.22_06\nsoc-fw-2024.12.10_04\nsoc-fw-2024.10.22_05\nsoc-fw-2024.12.10_03\nsoc-fw-2024.10.22_04\nsoc-fw-2024.10.22_03\nsoc-fw-2024.10.22_02\nsoc-fw-2024.10.22_01\nsoc-fw-2024.12.10_00\nsoc-fw-2024.10.22_00\nsoc-fw-2024.12.10_17\nsoc-fw-2024.11.10_23\nsoc-fw-2024.12.10_16\nsoc-fw-2024.11.10_22\nsoc-fw-2024.12.10_19\nsoc-fw-2024.11.10_21\nsoc-fw-2024.11.10_20\nsoc-fw-2024.10.22_19\nsoc-fw-2024.12.10_18\nsoc-antivirus-2024.11.03\nsoc-antivirus-2024.11.02\nsoc-fw-2024.12.09_23\nsoc-fw-2024.12.09_22\nsoc-antivirus-2024.11.01\nsoc-fw-2024.12.09_21\nsoc-antivirus-2024.11.07\nsoc-fw-2024.11.22_09\nsoc-antivirus-2024.11.06\nsoc-fw-2024.11.22_07\nsoc-antivirus-2024.11.05\nsoc-antivirus-2024.11.04\nsoc-fw-2024.11.22_08\nsoc-fw-2024.10.22_10\nsoc-fw-2024.11.22_05\nsoc-fw-2024.11.22_06\nsoc-fw-2024.11.22_03\nsoc-fw-2024.11.22_04\nsoc-fw-2024.11.22_01\nsoc-fw-2024.11.22_02\nsoc-fw-2024.11.22_00\nsoc-fw-2024.12.10_13\nsoc-fw-2024.10.22_18\nsoc-fw-2024.12.10_12\nsoc-fw-2024.10.22_17\nsoc-fw-2024.10.22_16\nsoc-fw-2024.12.10_15\nsoc-fw-2024.10.22_15\nsoc-fw-2024.12.10_14\nsoc-fw-2024.10.22_14\nsoc-fw-2024.10.22_13\nsoc-fw-2024.10.22_12\nsoc-fw-2024.12.10_11\nsoc-fw-2024.10.22_11\nsoc-fw-2024.12.10_10"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.99",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.98",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "101025",
            "pluginname": "Elasticsearch Unrestricted Access Information Disclosure",
            "hostname": "",
            "port": "9202",
            "protocol": "tcp",
            "severity": "2",
            "description": "The Elasticsearch application running on the remote web server is affected by an information disclosure vulnerability due to a failure to restrict resources via authentication. An unauthenticated, remote attacker can exploit this to disclose sensitive information from the database.",
            "solution": "Enable native user authentication or integrate with an external user management system such as LDAP and Active Directory.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?d055e692\nhttp://www.nessus.org/u?b80612a1",
            "plugin_output": "Nessus detected an unprotected instance of Elasticsearch with the following indices :\nsoc-hackerurl-2024.12.19\nsoc-null-2024.12.19\nsoc-os-2024.12.19\nsoc-fw-2024.12.18_07\nsoc-fw-2024.12.18_08\nsoc-fw-2024.12.18_09\nsoc-fw-2024.12.18_20\nsoc-fw-2024.12.18_21\nsoc-fw-2024.12.18_22\napi\nsoc-fw-2024.12.18_23\nsoc-dns-2024.12.19\nsoc-2024.12.19\nsoc-waf-2024.12.19\nsoc-ids-2024.12.19\nsoc-ai-2024.12.19\nsoc-antivirus-2024.12.19\nsoc-fw-2024.12.19_07\nsoc-fw-2024.12.18_16\nsoc-fw-2024.12.19_06\nsoc-fw-2024.12.18_17\nsoc-fw-2024.12.18_18\nsoc-fw-2024.12.18_19\nsoc-proxy-2024.12.19\nsoc-fw-2024.12.19_01\nsoc-fw-2024.12.18_10\nsoc-fw-2024.12.18_11\nsoc-fw-2024.12.19_00\nsoc-fw-2024.12.19_03\nsoc-fw-2024.12.18_12\nsoc-fw-2024.12.19_02\nsoc-fw-2024.12.18_13\nsoc-fw-2024.12.19_05\nsoc-fw-2024.12.18_14\nsoc-fw-2024.12.18_15\nsoc-fw-2024.12.19_04"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.98",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "101025",
            "pluginname": "Elasticsearch Unrestricted Access Information Disclosure",
            "hostname": "",
            "port": "9200",
            "protocol": "tcp",
            "severity": "2",
            "description": "The Elasticsearch application running on the remote web server is affected by an information disclosure vulnerability due to a failure to restrict resources via authentication. An unauthenticated, remote attacker can exploit this to disclose sensitive information from the database.",
            "solution": "Enable native user authentication or integrate with an external user management system such as LDAP and Active Directory.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?d055e692\nhttp://www.nessus.org/u?b80612a1",
            "plugin_output": "Nessus detected an unprotected instance of Elasticsearch with the following indices :\nsoc-hackerurl-2024.12.19\nsoc-null-2024.12.19\nsoc-os-2024.12.19\nsoc-fw-2024.12.18_07\nsoc-fw-2024.12.18_08\nsoc-fw-2024.12.18_09\nsoc-fw-2024.12.18_20\nsoc-fw-2024.12.18_21\napi\nsoc-fw-2024.12.18_22\nsoc-fw-2024.12.18_23\nsoc-dns-2024.12.19\nsoc-2024.12.19\nsoc-waf-2024.12.19\nsoc-ids-2024.12.19\nsoc-ai-2024.12.19\nsoc-antivirus-2024.12.19\nsoc-fw-2024.12.18_16\nsoc-fw-2024.12.19_07\nsoc-fw-2024.12.18_17\nsoc-fw-2024.12.19_06\nsoc-fw-2024.12.18_18\nsoc-fw-2024.12.18_19\nsoc-proxy-2024.12.19\nsoc-fw-2024.12.19_01\nsoc-fw-2024.12.18_10\nsoc-fw-2024.12.19_00\nsoc-fw-2024.12.18_11\nsoc-fw-2024.12.19_03\nsoc-fw-2024.12.18_12\nsoc-fw-2024.12.18_13\nsoc-fw-2024.12.19_02\nsoc-fw-2024.12.18_14\nsoc-fw-2024.12.19_05\nsoc-fw-2024.12.19_04\nsoc-fw-2024.12.18_15"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.98",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "101025",
            "pluginname": "Elasticsearch Unrestricted Access Information Disclosure",
            "hostname": "",
            "port": "9204",
            "protocol": "tcp",
            "severity": "2",
            "description": "The Elasticsearch application running on the remote web server is affected by an information disclosure vulnerability due to a failure to restrict resources via authentication. An unauthenticated, remote attacker can exploit this to disclose sensitive information from the database.",
            "solution": "Enable native user authentication or integrate with an external user management system such as LDAP and Active Directory.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?d055e692\nhttp://www.nessus.org/u?b80612a1",
            "plugin_output": "Nessus detected an unprotected instance of Elasticsearch with the following indices :\nsoc-hackerurl-2024.12.19\nsoc-null-2024.12.19\nsoc-os-2024.12.19\nsoc-fw-2024.12.18_07\nsoc-fw-2024.12.18_08\nsoc-fw-2024.12.18_09\nsoc-fw-2024.12.18_20\nsoc-fw-2024.12.18_21\nsoc-fw-2024.12.18_22\napi\nsoc-fw-2024.12.18_23\nsoc-dns-2024.12.19\nsoc-2024.12.19\nsoc-waf-2024.12.19\nsoc-ids-2024.12.19\nsoc-ai-2024.12.19\nsoc-antivirus-2024.12.19\nsoc-fw-2024.12.18_16\nsoc-fw-2024.12.19_07\nsoc-fw-2024.12.18_17\nsoc-fw-2024.12.19_06\nsoc-fw-2024.12.18_18\nsoc-fw-2024.12.18_19\nsoc-proxy-2024.12.19\nsoc-fw-2024.12.18_10\nsoc-fw-2024.12.19_01\nsoc-fw-2024.12.18_11\nsoc-fw-2024.12.19_00\nsoc-fw-2024.12.19_03\nsoc-fw-2024.12.18_12\nsoc-fw-2024.12.19_02\nsoc-fw-2024.12.18_13\nsoc-fw-2024.12.19_05\nsoc-fw-2024.12.18_14\nsoc-fw-2024.12.19_04\nsoc-fw-2024.12.18_15"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.98",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "101025",
            "pluginname": "Elasticsearch Unrestricted Access Information Disclosure",
            "hostname": "",
            "port": "9205",
            "protocol": "tcp",
            "severity": "2",
            "description": "The Elasticsearch application running on the remote web server is affected by an information disclosure vulnerability due to a failure to restrict resources via authentication. An unauthenticated, remote attacker can exploit this to disclose sensitive information from the database.",
            "solution": "Enable native user authentication or integrate with an external user management system such as LDAP and Active Directory.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?d055e692\nhttp://www.nessus.org/u?b80612a1",
            "plugin_output": "Nessus detected an unprotected instance of Elasticsearch with the following indices :\nsoc-hackerurl-2024.12.19\nsoc-null-2024.12.19\nsoc-os-2024.12.19\nsoc-fw-2024.12.18_07\nsoc-fw-2024.12.18_08\nsoc-fw-2024.12.18_09\nsoc-fw-2024.12.18_20\nsoc-fw-2024.12.18_21\nsoc-fw-2024.12.18_22\napi\nsoc-fw-2024.12.18_23\nsoc-dns-2024.12.19\nsoc-2024.12.19\nsoc-waf-2024.12.19\nsoc-ids-2024.12.19\nsoc-ai-2024.12.19\nsoc-antivirus-2024.12.19\nsoc-fw-2024.12.18_16\nsoc-fw-2024.12.19_07\nsoc-fw-2024.12.18_17\nsoc-fw-2024.12.19_06\nsoc-fw-2024.12.18_18\nsoc-fw-2024.12.18_19\nsoc-proxy-2024.12.19\nsoc-fw-2024.12.18_10\nsoc-fw-2024.12.19_01\nsoc-fw-2024.12.18_11\nsoc-fw-2024.12.19_00\nsoc-fw-2024.12.19_03\nsoc-fw-2024.12.18_12\nsoc-fw-2024.12.18_13\nsoc-fw-2024.12.19_02\nsoc-fw-2024.12.18_14\nsoc-fw-2024.12.19_05\nsoc-fw-2024.12.18_15\nsoc-fw-2024.12.19_04"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.98",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "101025",
            "pluginname": "Elasticsearch Unrestricted Access Information Disclosure",
            "hostname": "",
            "port": "9203",
            "protocol": "tcp",
            "severity": "2",
            "description": "The Elasticsearch application running on the remote web server is affected by an information disclosure vulnerability due to a failure to restrict resources via authentication. An unauthenticated, remote attacker can exploit this to disclose sensitive information from the database.",
            "solution": "Enable native user authentication or integrate with an external user management system such as LDAP and Active Directory.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?d055e692\nhttp://www.nessus.org/u?b80612a1",
            "plugin_output": "Nessus detected an unprotected instance of Elasticsearch with the following indices :\nsoc-hackerurl-2024.12.19\nsoc-null-2024.12.19\nsoc-os-2024.12.19\nsoc-fw-2024.12.18_07\nsoc-fw-2024.12.18_08\nsoc-fw-2024.12.18_09\nsoc-fw-2024.12.18_20\nsoc-fw-2024.12.18_21\nsoc-fw-2024.12.18_22\napi\nsoc-fw-2024.12.18_23\nsoc-dns-2024.12.19\nsoc-2024.12.19\nsoc-waf-2024.12.19\nsoc-ids-2024.12.19\nsoc-ai-2024.12.19\nsoc-antivirus-2024.12.19\nsoc-fw-2024.12.19_07\nsoc-fw-2024.12.18_16\nsoc-fw-2024.12.19_06\nsoc-fw-2024.12.18_17\nsoc-fw-2024.12.18_18\nsoc-fw-2024.12.18_19\nsoc-proxy-2024.12.19\nsoc-fw-2024.12.19_01\nsoc-fw-2024.12.18_10\nsoc-fw-2024.12.18_11\nsoc-fw-2024.12.19_00\nsoc-fw-2024.12.18_12\nsoc-fw-2024.12.19_03\nsoc-fw-2024.12.18_13\nsoc-fw-2024.12.19_02\nsoc-fw-2024.12.18_14\nsoc-fw-2024.12.19_05\nsoc-fw-2024.12.18_15\nsoc-fw-2024.12.19_04"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.98",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "101025",
            "pluginname": "Elasticsearch Unrestricted Access Information Disclosure",
            "hostname": "",
            "port": "9201",
            "protocol": "tcp",
            "severity": "2",
            "description": "The Elasticsearch application running on the remote web server is affected by an information disclosure vulnerability due to a failure to restrict resources via authentication. An unauthenticated, remote attacker can exploit this to disclose sensitive information from the database.",
            "solution": "Enable native user authentication or integrate with an external user management system such as LDAP and Active Directory.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?d055e692\nhttp://www.nessus.org/u?b80612a1",
            "plugin_output": "Nessus detected an unprotected instance of Elasticsearch with the following indices :\nsoc-hackerurl-2024.12.19\nsoc-null-2024.12.19\nsoc-os-2024.12.19\nsoc-fw-2024.12.18_07\nsoc-fw-2024.12.18_08\nsoc-fw-2024.12.18_09\nsoc-fw-2024.12.18_20\nsoc-fw-2024.12.18_21\napi\nsoc-fw-2024.12.18_22\nsoc-fw-2024.12.18_23\nsoc-dns-2024.12.19\nsoc-2024.12.19\nsoc-waf-2024.12.19\nsoc-ids-2024.12.19\nsoc-ai-2024.12.19\nsoc-antivirus-2024.12.19\nsoc-fw-2024.12.19_07\nsoc-fw-2024.12.18_16\nsoc-fw-2024.12.19_06\nsoc-fw-2024.12.18_17\nsoc-fw-2024.12.18_18\nsoc-fw-2024.12.18_19\nsoc-proxy-2024.12.19\nsoc-fw-2024.12.19_01\nsoc-fw-2024.12.18_10\nsoc-fw-2024.12.19_00\nsoc-fw-2024.12.18_11\nsoc-fw-2024.12.19_03\nsoc-fw-2024.12.18_12\nsoc-fw-2024.12.19_02\nsoc-fw-2024.12.18_13\nsoc-fw-2024.12.18_14\nsoc-fw-2024.12.19_05\nsoc-fw-2024.12.18_15\nsoc-fw-2024.12.19_04"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.98",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.97",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.96",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.95",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.94",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.93",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.92",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "6443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.92",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.92",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "6443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=kube-apiserver\n|-Issuer  : CN=kubernetes"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.92",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=kube-apiserver\n|-Issuer  : CN=kubernetes"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.92",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.91",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "6443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.91",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.91",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "6443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=kube-apiserver\n|-Issuer  : CN=kubernetes"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.91",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=kube-apiserver\n|-Issuer  : CN=kubernetes"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.91",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.90",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "6443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.90",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.90",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "6443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=kube-apiserver\n|-Issuer  : CN=kubernetes"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.90",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=kube-apiserver\n|-Issuer  : CN=kubernetes"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.90",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.89",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.88",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.87",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.86",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.75",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.74",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.73",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.72",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.71",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.70",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "25",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.70",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "25",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.70",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "184357",
            "pluginname": "Grafana Labs Stored XSS (CVE-2022-31097)",
            "hostname": "",
            "port": "3000",
            "protocol": "tcp",
            "severity": "3",
            "description": "According to its self-reported version number, the version of Grafana Labs running on the remote host is affected by a stored cross-site scripting vulnerability:\n\n - XSS vulnerability in the Unified Alerting feature of Grafana. After analysis, this stored XSS could be used to    elevate privileges from Editor to Admin. (CVE-2022-31097)   Note that Nessus has not tested for these issues but has instead relied only on the application's self-reported version  number.",
            "solution": "Upgrade to Grafana 8.3.10, 8.4.10, 8.5.9, 9.0.3, 9.2.7, 9.3.0 or later",
            "cve": "CVE-2022-31097",
            "cvss3": "8.7",
            "cvss2": "8.5",
            "see_also": "http://www.nessus.org/u?3b104bbb\nhttp://www.nessus.org/u?d56588b2",
            "plugin_output": "URL               : http://10.27.8.70:3000/login\nInstalled version : 8.2.7\nFixed version     : 8.3.10"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.70",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "190601",
            "pluginname": "Grafana Labs Incorrect Authorization (CVE-2023-6152)",
            "hostname": "",
            "port": "3000",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its self-reported version number, the version of Grafana Labs running on the remote host is a version 9.5.x prior to 9.5.16, 10.0.x prior to 10.0.11, 10.1.x prior to 10.1.7, 10.2.x prior to 10.2.4 or 10.3.x prior to 10.3.3. It is, therefore, affected by an incorrect authorization vulnerability where a user changing their email after signing up and verifying it can change it without verification in profile settings. The configuration option 'verify_email_enabled' will only validate email only on sign up.\n  Note that Nessus has not tested for these issues but has instead relied only on the application's self-reported version  number.",
            "solution": "Upgrade to Grafana 9.5.16, 10.0.11, 10.1.7, 10.2.4, 10.3.3 or later",
            "cve": "CVE-2023-6152",
            "cvss3": "5.4",
            "cvss2": "5.5",
            "see_also": "http://www.nessus.org/u?908ad804\nhttp://www.nessus.org/u?f02486e0",
            "plugin_output": "URL               : http://10.27.8.70:3000/login\nInstalled version : 8.2.7\nFixed version     : 9.5.16"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.70",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "25",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=''/ST=''/L=''/O=''/CN=''"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.70",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=ACSI Inc./OU=ICD820/E=Service@acercsi.com/CN=localhost"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.70",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "25",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=''/ST=''/L=''/O=''/CN=''\n|-Issuer  : C=''/ST=''/L=''/O=''/CN=''"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.70",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=ACSI Inc./OU=ICD820/E=Service@acercsi.com/CN=localhost\n|-Issuer  : C=TW/ST=Taiwan/L=Taipei/O=ACSI Inc./OU=ICD820/E=Service@acercsi.com/CN=localhost"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.70",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.69",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "148367",
            "pluginname": "Python Unsupported Version Detection",
            "hostname": "",
            "port": "5555",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote host contains one or more unsupported versions of Python.\n\nLack of support implies that no new security patches for the product will be released by the vendor. As a result, it is likely to contain security vulnerabilities.",
            "solution": "Upgrade to a version of Python that is currently supported.",
            "cve": "",
            "cvss3": "10.0",
            "cvss2": "10.0",
            "see_also": "https://www.python.org/downloads/\nhttps://devguide.python.org/devcycle/",
            "plugin_output": "The following Python installation is unsupported :\nPath              : /\nPort              : 5555\nInstalled version : 3.8.10\nLatest version    : 3.10\nSupport dates     : 2024-10-14 (end of life)"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.69",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.68",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "148367",
            "pluginname": "Python Unsupported Version Detection",
            "hostname": "",
            "port": "5555",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote host contains one or more unsupported versions of Python.\n\nLack of support implies that no new security patches for the product will be released by the vendor. As a result, it is likely to contain security vulnerabilities.",
            "solution": "Upgrade to a version of Python that is currently supported.",
            "cve": "",
            "cvss3": "10.0",
            "cvss2": "10.0",
            "see_also": "https://www.python.org/downloads/\nhttps://devguide.python.org/devcycle/",
            "plugin_output": "The following Python installation is unsupported :\nPath              : /\nPort              : 5555\nInstalled version : 3.8.10\nLatest version    : 3.10\nSupport dates     : 2024-10-14 (end of life)"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.68",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "159490",
            "pluginname": "OpenSSH < 7.8",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its banner, the version of OpenSSH running on the remote host is prior to 7.8. It is, therefore, affected by an information disclosure vulnerability in the auth2-gss.c, auth2-hostbased.c, and auth2-pubkey due to not delaying for an invalid authenticating user. An unauthenticated, remote attacker can exploit this, via a malformed packet, to potentially enumerate users.\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSH version 7.8 or later.",
            "cve": "CVE-2018-15473",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "https://www.openwall.com/lists/oss-security/2018/08/15/5\nhttps://www.openssh.com/txt/release-7.8",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_7.6p1 Ubuntu-4ubuntu0.7\nInstalled version : 7.6p1\nFixed version     : 7.8"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.68",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "159491",
            "pluginname": "OpenSSH < 8.0",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its banner, the version of OpenSSH running on the remote host is prior to 8.0. It is, therefore, affected by the following vulnerabilities:\n\n  - A permission bypass vulnerability due to improper directory name validation. An unauthenticated, remote     attacker can exploit this, with a specially crafted scp server, to change the permission of a directory     on the client. (CVE-2018-20685)\n\n  - Multiple arbitrary file downloads due to improper validation of object name and stderr output. An unauthenticated     remote attacker can exploit this, with a specially crafted scp server, to include additional hidden     files in the transfer. (CVE-2019-6109, CVE-2019-6110)\n\n  - An arbitrary file write vulnerability due to improper object name validation. An unauthenticated, remote     attacker can exploit this, with a specially crafted scp server, to overwrite arbitrary files in the     client directory. (CVE-2019-6111)\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSH version 8.0 or later.",
            "cve": "CVE-2018-20685",
            "cvss3": "6.8",
            "cvss2": "5.8",
            "see_also": "https://sintonen.fi/advisories/scp-client-multiple-vulnerabilities.txt\nhttps://www.openssh.com/txt/release-8.0",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_7.6p1 Ubuntu-4ubuntu0.7\nInstalled version : 7.6p1\nFixed version     : 8.0"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.68",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "187201",
            "pluginname": "OpenSSH < 9.6 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple vulnerabilities as referenced in the release-9.6 advisory.\n\n  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by     Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of     the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the     commencement of encryption, and deleting an equal number of consecutive messages immediately after     encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While     cryptographically novel, the security impact of this attack is fortunately very limited as it only allows     deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user     user authentication from proceeding and results in a stuck connection. The most serious identified impact     is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing     the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.\n    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this     protocol weakness through a new strict KEX protocol extension that will be automatically enabled when     both the client and server support it. This extension makes two changes to the SSH transport protocol to     improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the     connection if any unnecessary or unexpected message is received during key exchange (including messages     that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability     from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of     each key exchange, preventing previously inserted messages from being able to make persistent changes to     the sequence number across completion of a key exchange. Either of these changes should be sufficient to     thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source     distribition. (CVE-2023-48795)\n\n  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the     PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular     private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)\n\n  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a     ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h     or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could     potentially perform command injection depending on what quoting was present in the user-supplied     ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository     could contain a submodule with shell characters in its user/hostname. Git does not ban shell     metacharacters in user or host names when checking out repositories from untrusted sources. Although we     believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially     across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters     from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be     effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters     potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject     to these restrictions, allowing configurations that use strange names to continue to be used, under the     assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSH version 9.6 or later.",
            "cve": "CVE-2023-48795",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.openssh.com/txt/release-9.6",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_7.6p1 Ubuntu-4ubuntu0.7\nInstalled version : 7.6p1\nFixed version     : 9.6p1 / 9.6"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.68",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.67",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "148367",
            "pluginname": "Python Unsupported Version Detection",
            "hostname": "",
            "port": "5555",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote host contains one or more unsupported versions of Python.\n\nLack of support implies that no new security patches for the product will be released by the vendor. As a result, it is likely to contain security vulnerabilities.",
            "solution": "Upgrade to a version of Python that is currently supported.",
            "cve": "",
            "cvss3": "10.0",
            "cvss2": "10.0",
            "see_also": "https://www.python.org/downloads/\nhttps://devguide.python.org/devcycle/",
            "plugin_output": "The following Python installation is unsupported :\nPath              : /\nPort              : 5555\nInstalled version : 3.8.10\nLatest version    : 3.10\nSupport dates     : 2024-10-14 (end of life)"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.67",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.66",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.65",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.64",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.63",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "159490",
            "pluginname": "OpenSSH < 7.8",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its banner, the version of OpenSSH running on the remote host is prior to 7.8. It is, therefore, affected by an information disclosure vulnerability in the auth2-gss.c, auth2-hostbased.c, and auth2-pubkey due to not delaying for an invalid authenticating user. An unauthenticated, remote attacker can exploit this, via a malformed packet, to potentially enumerate users.\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSH version 7.8 or later.",
            "cve": "CVE-2018-15473",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "https://www.openwall.com/lists/oss-security/2018/08/15/5\nhttps://www.openssh.com/txt/release-7.8",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_7.6p1 Ubuntu-4ubuntu0.7\nInstalled version : 7.6p1\nFixed version     : 7.8"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.63",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "159491",
            "pluginname": "OpenSSH < 8.0",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its banner, the version of OpenSSH running on the remote host is prior to 8.0. It is, therefore, affected by the following vulnerabilities:\n\n  - A permission bypass vulnerability due to improper directory name validation. An unauthenticated, remote     attacker can exploit this, with a specially crafted scp server, to change the permission of a directory     on the client. (CVE-2018-20685)\n\n  - Multiple arbitrary file downloads due to improper validation of object name and stderr output. An unauthenticated     remote attacker can exploit this, with a specially crafted scp server, to include additional hidden     files in the transfer. (CVE-2019-6109, CVE-2019-6110)\n\n  - An arbitrary file write vulnerability due to improper object name validation. An unauthenticated, remote     attacker can exploit this, with a specially crafted scp server, to overwrite arbitrary files in the     client directory. (CVE-2019-6111)\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSH version 8.0 or later.",
            "cve": "CVE-2018-20685",
            "cvss3": "6.8",
            "cvss2": "5.8",
            "see_also": "https://sintonen.fi/advisories/scp-client-multiple-vulnerabilities.txt\nhttps://www.openssh.com/txt/release-8.0",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_7.6p1 Ubuntu-4ubuntu0.7\nInstalled version : 7.6p1\nFixed version     : 8.0"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.63",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "187201",
            "pluginname": "OpenSSH < 9.6 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple vulnerabilities as referenced in the release-9.6 advisory.\n\n  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by     Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of     the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the     commencement of encryption, and deleting an equal number of consecutive messages immediately after     encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While     cryptographically novel, the security impact of this attack is fortunately very limited as it only allows     deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user     user authentication from proceeding and results in a stuck connection. The most serious identified impact     is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing     the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.\n    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this     protocol weakness through a new strict KEX protocol extension that will be automatically enabled when     both the client and server support it. This extension makes two changes to the SSH transport protocol to     improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the     connection if any unnecessary or unexpected message is received during key exchange (including messages     that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability     from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of     each key exchange, preventing previously inserted messages from being able to make persistent changes to     the sequence number across completion of a key exchange. Either of these changes should be sufficient to     thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source     distribition. (CVE-2023-48795)\n\n  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the     PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular     private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)\n\n  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a     ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h     or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could     potentially perform command injection depending on what quoting was present in the user-supplied     ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository     could contain a submodule with shell characters in its user/hostname. Git does not ban shell     metacharacters in user or host names when checking out repositories from untrusted sources. Although we     believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially     across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters     from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be     effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters     potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject     to these restrictions, allowing configurations that use strange names to continue to be used, under the     assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSH version 9.6 or later.",
            "cve": "CVE-2023-48795",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.openssh.com/txt/release-9.6",
            "plugin_output": "Version source    : SSH-2.0-OpenSSH_7.6p1 Ubuntu-4ubuntu0.7\nInstalled version : 7.6p1\nFixed version     : 9.6p1 / 9.6"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.63",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.62",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.61",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.60",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.59",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "101025",
            "pluginname": "Elasticsearch Unrestricted Access Information Disclosure",
            "hostname": "",
            "port": "9200",
            "protocol": "tcp",
            "severity": "2",
            "description": "The Elasticsearch application running on the remote web server is affected by an information disclosure vulnerability due to a failure to restrict resources via authentication. An unauthenticated, remote attacker can exploit this to disclose sensitive information from the database.",
            "solution": "Enable native user authentication or integrate with an external user management system such as LDAP and Active Directory.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?d055e692\nhttp://www.nessus.org/u?b80612a1",
            "plugin_output": "Nessus detected an unprotected instance of Elasticsearch with the following indices :\nsoc-antivirus-2023.01.19\nsoc-antivirus-2023.01.17\nsoc-antivirus-2023.01.18\nsoc-antivirus-2023.01.15\nsoc-antivirus-2023.01.16\nsoc-antivirus-2023.01.13\nsoc-antivirus-2023.01.14\nsoc-antivirus-2023.01.11\nsoc-antivirus-2023.01.12\nsoc-antivirus-2023.01.10\nsoc-antivirus-2024.05.30\nsoc-antivirus-2024.05.31\nsoc-antivirus-2023.01.08\nsoc-antivirus-2023.01.09\nsoc-antivirus-2023.01.06\nsoc-antivirus-2023.01.07\nsoc-antivirus-2023.01.04\nsoc-antivirus-2023.01.05\nsoc-antivirus-2023.01.02\nsoc-antivirus-2023.01.03\nsoc-antivirus-2022.08.05\nsoc-antivirus-2022.08.04\nsoc-antivirus-2023.01.01\nsoc-antivirus-2022.08.03\nsoc-antivirus-2022.08.02\nsoc-antivirus-2022.08.09\nsoc-antivirus-2022.08.08\nsoc-antivirus-2022.08.07\nsoc-antivirus-2022.08.06\nsoc-antivirus-2024.05.25\nsoc-antivirus-2024.05.26\nsoc-antivirus-2024.05.23\nsoc-antivirus-2024.05.24\nsoc-antivirus-2022.08.01\nsoc-antivirus-2024.05.21\nsoc-antivirus-2024.05.22\nsoc-antivirus-2024.05.20\nsoc-antivirus-2024.05.29\nsoc-antivirus-2024.05.27\nsoc-antivirus-2024.05.28\nsoc-antivirus-2023.01.31\nsoc-antivirus-2023.01.30\n.kibana_log_1\nsoc-antivirus-2022.06.30\nsoc-antivirus-2023.01.28\nsoc-antivirus-2023.01.29\nsoc-antivirus-2023.01.26\nsoc-antivirus-2023.01.27\nsoc-antivirus-2023.01.24\nsoc-antivirus-2023.01.25\nsoc-antivirus-2023.01.22\nsoc-antivirus-2023.01.23\nsoc-antivirus-2023.01.20\nsoc-antivirus-2023.01.21\nsoc-antivirus-2021.04.24\nsoc-antivirus-2021.04.23\nsoc-antivirus-2021.04.22\nsoc-antivirus-2021.04.21\nsoc-antivirus-2021.04.28\nsoc-antivirus-2021.04.27\nsoc-antivirus-2021.04.26\nsoc-antivirus-2021.04.25\nsoc-antivirus-2021.04.29\nsoc-antivirus-2022.08.30\nsoc-antivirus-2024.07.17\nsoc-antivirus-2024.07.16\nsoc-antivirus-2024.07.15\nsoc-antivirus-2024.07.14\nsoc-antivirus-2024.07.13\nsoc-antivirus-2024.07.12\nsoc-antivirus-2024.07.11\nsoc-antivirus-2024.07.10\nsoc-antivirus-2022.08.31\nsoc-antivirus-2021.04.20\nsoc-antivirus-2024.07.19\nsoc-antivirus-2024.07.18\nsoc-antivirus-2021.04.13\nsoc-antivirus-2021.04.12\nsoc-antivirus-2021.04.11\nsoc-antivirus-2021.04.10\nsoc-antivirus-2021.04.17\nsoc-antivirus-2021.04.16\nsoc-antivirus-2021.04.15\nsoc-antivirus-2021.04.14\nsoc-antivirus-2021.04.19\nsoc-antivirus-2021.04.18\nsoc-antivirus-2024.07.06\nsoc-antivirus-2024.07.05\nsoc-antivirus-2024.07.04\nsoc-antivirus-2024.07.03\nsoc-antivirus-2024.07.02\nsoc-antivirus-2024.07.01\nsoc-antivirus-2024.07.09\nsoc-antivirus-2024.07.08\nsoc-antivirus-2024.07.07\nsoc-antivirus-2021.04.02\nsoc-antivirus-2021.04.01\nsoc-antivirus-2023.03.19\nsoc-antivirus-2021.04.06\nsoc-antivirus-2023.03.18\nsoc-antivirus-2021.04.05\nsoc-antivirus-2023.03.17\nsoc-antivirus-2021.04.04\nsoc-antivirus-2023.03.16\nsoc-antivirus-2023.03.15\nsoc-antivirus-2021.04.03\nsoc-antivirus-2024.07.31\nsoc-antivirus-2023.03.14\nsoc-antivirus-2022.08.16\nsoc-antivirus-2023.03.13\nsoc-antivirus-2022.08.15\nsoc-antivirus-2024.07.30\nsoc-antivirus-2021.04.09\nsoc-antivirus-2023.03.12\nsoc-antivirus-2021.04.08\nsoc-antivirus-2022.08.14\nsoc-antivirus-2023.03.11\nsoc-antivirus-2022.08.13\nsoc-antivirus-2021.04.07\nsoc-antivirus-2023.03.10\nsoc-antivirus-2022.08.19\nsoc-antivirus-2022.08.18\nsoc-antivirus-2022.08.17\nsoc-antivirus-2022.08.12\nsoc-antivirus-2022.08.11\nsoc-antivirus-2022.08.10\nsoc-antivirus-2023.03.09\nsoc-antivirus-2023.03.08\nsoc-antivirus-2023.03.07\nsoc-antivirus-2023.03.06\nsoc-antivirus-2023.03.05\nsoc-antivirus-2023.03.04\nsoc-antivirus-2024.07.20\nsoc-antivirus-2023.03.03\nsoc-antivirus-2022.08.27\nsoc-antivirus-2023.03.02\nsoc-antivirus-2022.08.26\nsoc-antivirus-2022.08.25\nsoc-antivirus-2023.03.01\nsoc-antivirus-2022.08.24\n.kibana_1\nsoc-antivirus-2022.08.29\nsoc-antivirus-2022.08.28\nsoc-antivirus-2024.07.28\nsoc-antivirus-2024.07.27\nsoc-antivirus-2024.07.26\nsoc-antivirus-2024.07.25\nsoc-antivirus-2022.08.23\nsoc-antivirus-2024.07.24\nsoc-antivirus-2024.07.23\nsoc-antivirus-2022.08.22\nsoc-antivirus-2024.07.22\nsoc-antivirus-2022.08.21\nsoc-antivirus-2024.07.21\nsoc-antivirus-2022.08.20\nsoc-antivirus-2024.07.29\nsoc-antivirus-2021.06.05\nsoc-antivirus-2021.06.06\nsoc-antivirus-2021.06.07\nsoc-antivirus-2021.06.08\nsoc-antivirus-2021.06.01\nsoc-antivirus-2021.06.02\nsoc-antivirus-2021.06.03\nsoc-antivirus-2021.06.04\nsoc-antivirus-2021.06.09\nsoc-antivirus-2023.03.31\nsoc-antivirus-2023.03.30\nsoc-antivirus-2024.03.11\nsoc-antivirus-2024.03.10\nsoc-antivirus-2024.03.13\nsoc-antivirus-2024.03.12\nsoc-antivirus-2022.04.30\nsoc-antivirus-2024.03.19\nsoc-antivirus-2024.03.18\nsoc-antivirus-2024.03.15\nsoc-antivirus-2024.03.14\nsoc-antivirus-2024.03.17\nsoc-antivirus-2024.03.16\nsoc-antivirus-2023.03.29\nsoc-antivirus-2023.03.28\nsoc-antivirus-2023.03.27\nsoc-antivirus-2023.03.26\nsoc-antivirus-2023.03.25\nsoc-antivirus-2023.03.24\nsoc-antivirus-2023.03.23\nsoc-antivirus-2023.03.22\nsoc-antivirus-2023.03.21\nsoc-antivirus-2023.03.20\nsoc-antivirus-2024.03.02\nsoc-antivirus-2024.03.01\nsoc-antivirus-2024.03.08\nsoc-antivirus-2024.03.07\nsoc-antivirus-2024.03.09\nsoc-antivirus-2024.03.04\nsoc-antivirus-2024.03.03\nsoc-antivirus-2024.03.06\nsoc-antivirus-2024.03.05\nsoc-antivirus-2022.04.18\nsoc-antivirus-2022.04.17\nsoc-antivirus-2022.04.19\nsoc-antivirus-2022.04.10\nsoc-antivirus-2022.04.12\nsoc-antivirus-2022.04.11\nsoc-antivirus-2022.04.14\nsoc-antivirus-2022.04.13\nsoc-antivirus-2022.04.16\nsoc-antivirus-2022.04.15\nsoc-antivirus-2024.03.31\nsoc-antivirus-2024.03.30\nsoc-antivirus-2022.04.29\nsoc-antivirus-2022.04.28\nsoc-antivirus-2022.04.21\nsoc-antivirus-2022.04.20\nsoc-antivirus-2022.04.23\nsoc-antivirus-2022.04.22\nsoc-antivirus-2022.04.25\nsoc-antivirus-2022.04.24\nsoc-antivirus-2022.04.27\nsoc-antivirus-2022.04.26\nsoc-antivirus-2024.03.22\nsoc-antivirus-2024.03.21\nsoc-antivirus-2024.03.24\nsoc-antivirus-2024.03.23\nsoc-antivirus-2024.03.20\nsoc-antivirus-2024.03.29\nsoc-antivirus-2024.03.26\nsoc-antivirus-2021.04.30\nsoc-antivirus-2024.03.25\nsoc-antivirus-2024.03.28\nsoc-antivirus-2024.03.27\nsoc-antivirus-2022.06.19\nsoc-antivirus-2022.06.13\nsoc-antivirus-2022.06.14\nsoc-antivirus-2022.06.11\nsoc-antivirus-2022.06.12\nsoc-antivirus-2022.06.17\nsoc-antivirus-2022.06.18\nsoc-antivirus-2022.06.15\nsoc-antivirus-2022.06.16\nsoc-antivirus-2023.05.20\nsoc-antivirus-2023.05.21\nsoc-antivirus-2023.05.22\nsoc-antivirus-2023.05.23\nsoc-antivirus-2023.05.24\nsoc-antivirus-2022.06.10\nsoc-antivirus-2023.05.25\nsoc-antivirus-2023.05.26\nsoc-antivirus-2023.05.27\nsoc-antivirus-2023.05.28\nsoc-antivirus-2023.05.29\nsoc-antivirus-2022.06.24\nsoc-antivirus-2022.06.25\nsoc-antivirus-2022.06.22\nsoc-antivirus-2022.06.23\nsoc-antivirus-2022.06.28\nsoc-antivirus-2022.06.29\nsoc-antivirus-2022.06.26\nsoc-antivirus-2023.05.30\nsoc-antivirus-2022.06.27\nsoc-antivirus-2023.05.31\nsoc-antivirus-2022.06.20\nsoc-antivirus-2022.06.21\nsoc-antivirus-2021.06.30\nsoc-antivirus-2021.06.27\nsoc-antivirus-2021.06.28\nsoc-antivirus-2021.06.29\nsoc-antivirus-2021.06.23\nsoc-antivirus-2021.06.24\nsoc-antivirus-2021.06.25\nsoc-antivirus-2021.06.26\nsoc-antivirus-2024.05.14\nsoc-antivirus-2024.05.15\nsoc-antivirus-2024.05.12\nsoc-antivirus-2024.05.13\nsoc-antivirus-2023.05.01\nsoc-antivirus-2024.05.10\nsoc-antivirus-2021.10.18_121\nsoc-antivirus-2023.05.02\nsoc-antivirus-2023.05.03\nsoc-antivirus-2024.05.11\nsoc-antivirus-2023.05.04\nsoc-antivirus-2023.05.05\nsoc-antivirus-2023.05.06\nsoc-antivirus-2023.05.07\nsoc-antivirus-2021.06.20\nsoc-antivirus-2023.05.08\nsoc-antivirus-2021.06.21\nsoc-antivirus-2021.06.22\nsoc-antivirus-2023.05.09\nsoc-antivirus-2024.05.18\nsoc-antivirus-2024.05.19\nsoc-antivirus-2024.05.16\nsoc-antivirus-2024.05.17\nsoc-antivirus-2021.06.16\nsoc-antivirus-2021.06.17\nsoc-antivirus-2021.06.18\nsoc-antivirus-2022.06.08\nsoc-antivirus-2022.06.09\nsoc-antivirus-2021.06.19\nsoc-antivirus-2021.06.12\nsoc-antivirus-2021.06.13\nsoc-antivirus-2021.06.14\nsoc-antivirus-2021.06.15\nsoc-antivirus-2022.06.02\nsoc-antivirus-2022.06.03\nsoc-antivirus-2022.06.01\nsoc-antivirus-2022.06.06\nsoc-antivirus-2022.06.07\nsoc-antivirus-2022.06.04\nsoc-antivirus-2022.06.05\nsoc-antivirus-2024.05.03\nsoc-antivirus-2023.05.10\nsoc-antivirus-2024.05.04\nsoc-antivirus-2023.05.11\nsoc-antivirus-2024.05.01\nsoc-antivirus-2023.05.12\nsoc-antivirus-2024.05.02\nsoc-antivirus-2023.05.13\nsoc-antivirus-2023.05.14\nsoc-antivirus-2023.05.15\nsoc-antivirus-2023.05.16\nsoc-antivirus-2023.05.17\nsoc-antivirus-2023.05.18\nsoc-antivirus-2023.05.19\nsoc-antivirus-2021.06.10\nsoc-antivirus-2024.05.09\nsoc-antivirus-2021.06.11\nsoc-antivirus-2024.05.07\nsoc-antivirus-2024.05.08\nsoc-antivirus-2024.05.05\nsoc-antivirus-2024.05.06\nsoc-antivirus-2022.02.16\nsoc-antivirus-2022.02.15\nsoc-antivirus-2022.02.18\nsoc-antivirus-2022.02.17\nsoc-antivirus-2022.02.19\nsoc-antivirus-2024.12.04\nsoc-antivirus-2024.12.03\nsoc-antivirus-2022.02.10\nsoc-antivirus-2024.12.02\nsoc-antivirus-2024.12.01\nsoc-antivirus-2022.02.12\nsoc-antivirus-2024.12.08\nsoc-antivirus-2022.02.11\nsoc-antivirus-2024.12.07\nsoc-antivirus-2024.12.06\nsoc-antivirus-2022.02.14\nsoc-antivirus-2024.12.05\nsoc-antivirus-2022.02.13\nsoc-antivirus-2023.07.01\nsoc-antivirus-2023.07.03\nsoc-antivirus-2023.07.02\nsoc-antivirus-2023.07.05\nsoc-antivirus-2023.07.04\nsoc-antivirus-2023.07.07\nsoc-antivirus-2023.07.06\nsoc-antivirus-2023.07.09\nsoc-antivirus-2023.07.08\napi\nsoc-antivirus-2022.02.27\nsoc-antivirus-2022.02.26\nsoc-antivirus-2022.02.28\nsoc-antivirus-2022.02.21\nsoc-antivirus-2022.02.20\nsoc-antivirus-2022.02.23\nsoc-antivirus-2022.02.22\nsoc-antivirus-2023.07.10\nsoc-antivirus-2022.02.25\nsoc-antivirus-2022.02.24\nsoc-antivirus-2023.07.12\nsoc-antivirus-2023.07.11\nsoc-antivirus-2023.07.14\nsoc-antivirus-2023.07.13\nsoc-antivirus-2023.07.16\nsoc-antivirus-2023.07.15\nsoc-antivirus-2023.07.18\nsoc-antivirus-2023.07.17\nsoc-antivirus-2023.07.19\nsoc-antivirus-2021.07.31\nsoc-antivirus-2021.07.30\nsoc-antivirus-2022.02.05\nsoc-antivirus-2021.07.29\nsoc-antivirus-2021.07.28\nsoc-antivirus-2022.02.04\nsoc-antivirus-2022.02.07\nsoc-antivirus-2022.02.06\nsoc-antivirus-2022.02.09\nsoc-antivirus-2021.07.25\nsoc-antivirus-2024.12.11\nsoc-antivirus-2024.12.10\nsoc-antivirus-2021.07.24\nsoc-antivirus-2022.02.08\nsoc-antivirus-2021.07.27\nsoc-antivirus-2021.07.26\nsoc-antivirus-2024.12.15\nsoc-antivirus-2024.12.14\nsoc-antivirus-2024.12.13\nsoc-antivirus-2024.12.12\nsoc-antivirus-2022.02.01\nsoc-antivirus-2024.12.18\nsoc-antivirus-2024.12.17\nsoc-antivirus-2022.02.03\nsoc-antivirus-2024.12.16\nsoc-antivirus-2022.02.02\nsoc-antivirus-2024.12.09\nsoc-antivirus-2022.12.31\nsoc-antivirus-2022.12.30\nsoc-antivirus-2021.07.21\nsoc-antivirus-2021.07.20\nsoc-antivirus-2021.07.23\nsoc-antivirus-2021.07.22\nsoc-antivirus-2021.10.29\nsoc-antivirus-2021.10.28\nsoc-antivirus-2021.10.27\nsoc-antivirus-2021.10.26\nsoc-antivirus-2021.10.25\nsoc-antivirus-2021.10.24\nsoc-antivirus-2021.10.23\nsoc-antivirus-2021.10.22\nsoc-antivirus-2021.10.21\nsoc-antivirus-2021.10.20\nsoc-antivirus-2024.02.01\nsoc-antivirus-2024.02.07\nsoc-antivirus-2024.02.06\nsoc-antivirus-2024.02.09\nsoc-antivirus-2024.02.08\nsoc-antivirus-2021.09.30\nsoc-antivirus-2024.02.03\nsoc-antivirus-2024.02.02\nsoc-antivirus-2024.02.05\nsoc-antivirus-2024.02.04\nsoc-antivirus-2022.04.07\nsoc-antivirus-2021.10.19\nsoc-antivirus-2022.04.06\nsoc-antivirus-2021.10.18\nsoc-antivirus-2022.04.09\nsoc-antivirus-2021.10.17\nsoc-antivirus-2022.04.08\nsoc-antivirus-2021.10.16\nsoc-antivirus-2021.09.27\nsoc-antivirus-2021.09.26\nsoc-antivirus-2021.10.15\nsoc-antivirus-2021.10.14\nsoc-antivirus-2021.09.29\nsoc-antivirus-2021.10.13\nsoc-antivirus-2021.09.28\nsoc-antivirus-2021.10.12\nsoc-antivirus-2021.10.11\nsoc-antivirus-2021.10.10\nsoc-antivirus-2022.04.01\nsoc-antivirus-2022.04.03\nsoc-antivirus-2022.04.02\nsoc-antivirus-2022.04.05\nsoc-antivirus-2022.04.04\nsoc-antivirus-2021.09.23\nsoc-antivirus-2021.09.22\nsoc-antivirus-2021.09.25\nsoc-antivirus-2021.09.24\nsoc-antivirus-2021.09.21\nsoc-antivirus-2021.09.20\nsoc-antivirus-2021.10.09\nsoc-antivirus-2021.10.08\nsoc-antivirus-2021.09.19\nsoc-antivirus-2021.10.07\nsoc-antivirus-2021.10.06\nsoc-antivirus-2021.10.05\nsoc-antivirus-2021.09.16\nsoc-antivirus-2021.09.15\nsoc-antivirus-2021.10.04\nsoc-antivirus-2021.10.03\nsoc-antivirus-2021.09.18\nsoc-antivirus-2021.09.17\nsoc-antivirus-2021.10.02\nsoc-antivirus-2021.10.01\nsoc-antivirus-2023.07.21\nsoc-antivirus-2023.07.20\nsoc-antivirus-2023.07.23\nsoc-antivirus-2024.02.21\nsoc-antivirus-2024.02.20\nsoc-antivirus-2023.07.22\nsoc-antivirus-2024.02.23\nsoc-antivirus-2023.07.25\nsoc-antivirus-2024.02.22\nsoc-antivirus-2023.07.24\nsoc-antivirus-2023.07.27\nsoc-antivirus-2023.07.26\nsoc-antivirus-2023.07.29\nsoc-antivirus-2023.07.28\nsoc-antivirus-2021.09.12\nsoc-antivirus-2024.02.29\nsoc-antivirus-2021.09.11\nsoc-antivirus-2024.02.28\nsoc-antivirus-2021.09.14\nsoc-antivirus-2021.09.13\nsoc-antivirus-2024.02.25\nsoc-antivirus-2024.02.24\nsoc-antivirus-2021.09.10\nsoc-antivirus-2024.02.27\nsoc-antivirus-2024.02.26\nsoc-antivirus-2021.09.09\nsoc-antivirus-2021.09.08\nsoc-antivirus-2021.09.05\nsoc-antivirus-2021.09.04\nsoc-antivirus-2021.09.07\nsoc-antivirus-2021.09.06\nsoc-antivirus-2023.07.30\nsoc-antivirus-2023.07.31\nsoc-antivirus-2024.02.10\nsoc-antivirus-2024.02.12\nsoc-antivirus-2024.02.11\nsoc-antivirus-2024.02.18\nsoc-antivirus-2021.09.01\nsoc-antivirus-2024.02.17\nsoc-antivirus-2021.09.03\nsoc-antivirus-2021.09.02\nsoc-antivirus-2024.02.19\nsoc-antivirus-2024.02.14\nsoc-antivirus-2024.02.13\nsoc-antivirus-2024.02.16\nsoc-antivirus-2024.02.15\nsoc-antivirus-2023.09.22\nsoc-antivirus-2023.10.08\nsoc-antivirus-2023.09.23\nsoc-antivirus-2023.10.09\nsoc-antivirus-2023.09.20\nsoc-antivirus-2023.09.21\nsoc-antivirus-2023.09.26\nsoc-antivirus-2023.10.15\nsoc-antivirus-2023.09.27\nsoc-antivirus-2023.10.16\nsoc-antivirus-2023.09.24\nsoc-antivirus-2023.10.17\nsoc-antivirus-2023.10.18\nsoc-antivirus-2023.09.25\nsoc-antivirus-2021.12.10\nsoc-antivirus-2023.10.11\nsoc-antivirus-2021.12.11\nsoc-antivirus-2021.12.12\nsoc-antivirus-2023.10.12\nsoc-antivirus-2021.12.13\nsoc-antivirus-2023.10.13\nsoc-antivirus-2023.09.28\nsoc-antivirus-2023.10.14\nsoc-antivirus-2021.12.14\nsoc-antivirus-2023.09.29\nsoc-antivirus-2021.12.15\nsoc-antivirus-2021.12.16\nsoc-antivirus-2021.12.17\nsoc-antivirus-2023.10.10\nsoc-antivirus-2021.12.18\nsoc-antivirus-2021.12.19\nsoc-antivirus-2023.09.30\nsoc-antivirus-2023.10.19\nsoc-antivirus-2023.10.26\nsoc-antivirus-2023.10.27\nsoc-antivirus-2021.12.20\nsoc-antivirus-2022.10.30\nsoc-antivirus-2023.10.28\nsoc-antivirus-2021.12.21\nsoc-antivirus-2022.10.31\nsoc-antivirus-2023.10.29\nsoc-antivirus-2021.12.22\nsoc-antivirus-2023.10.22\nsoc-antivirus-2021.12.23\nsoc-antivirus-2023.10.23\nsoc-antivirus-2021.12.24\nsoc-antivirus-2023.10.24\nsoc-antivirus-2023.10.25\nsoc-antivirus-2021.12.25\nsoc-antivirus-2021.12.26\nsoc-antivirus-2021.12.27\nsoc-antivirus-2023.10.20\nsoc-antivirus-2021.12.28\nsoc-antivirus-2021.12.29\nsoc-antivirus-2023.10.21\nsoc-antivirus-2021.10.20_121\nsoc-antivirus-2024.09.10\nsoc-antivirus-2024.09.11\nsoc-antivirus-2022.09.29\nsoc-antivirus-2024.10.01\nsoc-antivirus-2024.10.02\nsoc-antivirus-2022.09.25\nsoc-antivirus-2024.10.05\nsoc-antivirus-2024.10.06\nsoc-antivirus-2023.09.01\nsoc-antivirus-2022.09.26\nsoc-antivirus-2022.09.27\nsoc-antivirus-2024.10.03\nsoc-antivirus-2024.10.04\nsoc-antivirus-2022.09.28\nsoc-antivirus-2023.09.04\nsoc-antivirus-2022.09.21\nsoc-antivirus-2022.10.21\nsoc-antivirus-2022.10.22\nsoc-antivirus-2022.09.22\nsoc-antivirus-2021.12.30\nsoc-antivirus-2023.09.05\nsoc-antivirus-2021.12.31\nsoc-antivirus-2022.09.23\nsoc-antivirus-2023.09.02\nsoc-antivirus-2023.09.03\nsoc-antivirus-2022.09.24\nsoc-antivirus-2022.10.20\nsoc-antivirus-2023.09.08\nsoc-antivirus-2023.09.09\nsoc-antivirus-2023.09.06\nsoc-antivirus-2022.09.20\nsoc-antivirus-2023.09.07\nsoc-antivirus-2024.09.12\nsoc-antivirus-2022.10.29\nsoc-antivirus-2024.09.13\nsoc-antivirus-2024.09.14\nsoc-antivirus-2022.10.27\nsoc-antivirus-2024.09.15\nsoc-antivirus-2022.10.28\nsoc-antivirus-2022.10.25\nsoc-antivirus-2024.09.16\nsoc-antivirus-2022.10.26\nsoc-antivirus-2024.09.17\nsoc-antivirus-2022.10.23\nsoc-antivirus-2024.09.18\nsoc-antivirus-2022.10.24\nsoc-antivirus-2024.09.19\nsoc-antivirus-2022.10.09\nsoc-antivirus-2021.10.31\nsoc-antivirus-2021.10.30\nsoc-antivirus-2023.09.11\nsoc-antivirus-2023.09.12\nsoc-antivirus-2023.09.10\nsoc-antivirus-2023.09.15\nsoc-antivirus-2022.10.10\nsoc-antivirus-2024.09.09\nsoc-antivirus-2023.10.04\nsoc-antivirus-2023.09.16\nsoc-antivirus-2022.10.11\nsoc-antivirus-2023.10.05\nsoc-antivirus-2023.10.06\nsoc-antivirus-2023.09.13\nsoc-antivirus-2023.09.14\nsoc-antivirus-2023.10.07\nsoc-antivirus-2023.09.19\nsoc-antivirus-2023.10.01\nsoc-antivirus-2023.10.02\nsoc-antivirus-2022.09.30\nsoc-antivirus-2023.09.17\nsoc-antivirus-2023.09.18\nsoc-antivirus-2023.10.03\nsoc-antivirus-2024.09.01\nsoc-antivirus-2022.10.18\nsoc-antivirus-2022.10.19\nsoc-antivirus-2024.09.02\nsoc-antivirus-2024.09.03\nsoc-antivirus-2022.10.16\nsoc-antivirus-2024.09.04\nsoc-antivirus-2022.10.17\nsoc-antivirus-2022.10.14\nsoc-antivirus-2024.09.05\nsoc-antivirus-2022.10.15\nsoc-antivirus-2024.09.06\nsoc-antivirus-2022.10.12\nsoc-antivirus-2024.09.07\nsoc-antivirus-2022.10.13\nsoc-antivirus-2024.09.08\nsoc-antivirus-2024.09.30\nsoc-antivirus-2024.10.20\nsoc-antivirus-2024.10.23\nsoc-antivirus-2024.10.24\nsoc-antivirus-2024.10.21\nsoc-antivirus-2024.10.22\nsoc-antivirus-2024.10.27\nsoc-antivirus-2024.10.28\nsoc-antivirus-2024.10.25\nsoc-antivirus-2024.10.26\nsoc-antivirus-2022.12.24\nsoc-antivirus-2022.12.23\nsoc-antivirus-2022.12.22\nsoc-antivirus-2024.10.18\nsoc-antivirus-2022.12.21\nsoc-antivirus-2024.10.19\nsoc-antivirus-2022.12.20\nsoc-antivirus-2022.12.29\nsoc-antivirus-2022.12.28\nsoc-antivirus-2022.12.27\nsoc-antivirus-2022.12.26\nsoc-antivirus-2022.12.25\nsoc-antivirus-2024.09.20\nsoc-antivirus-2024.09.21\nsoc-antivirus-2024.09.22\nsoc-antivirus-2024.10.12\nsoc-antivirus-2024.10.13\nsoc-antivirus-2024.10.10\nsoc-antivirus-2024.10.11\nsoc-antivirus-2024.10.16\nsoc-antivirus-2024.10.17\nsoc-antivirus-2024.10.14\nsoc-antivirus-2024.10.15\nsoc-antivirus-2024.10.09\nsoc-antivirus-2022.12.13\nsoc-antivirus-2023.12.07\nsoc-antivirus-2023.12.06\nsoc-antivirus-2022.12.12\nsoc-antivirus-2024.10.07\nsoc-antivirus-2023.12.09\nsoc-antivirus-2022.12.11\nsoc-antivirus-2023.12.08\nsoc-antivirus-2022.12.10\nsoc-antivirus-2024.10.08\nsoc-antivirus-2023.12.03\nsoc-antivirus-2023.12.02\nsoc-antivirus-2023.12.05\nsoc-antivirus-2023.12.04\nsoc-antivirus-2024.09.23\nsoc-antivirus-2024.09.24\nsoc-antivirus-2024.09.25\nsoc-antivirus-2023.12.01\nsoc-antivirus-2022.12.19\nsoc-antivirus-2024.09.26\nsoc-antivirus-2022.12.18\nsoc-antivirus-2022.12.17\nsoc-antivirus-2024.09.27\nsoc-antivirus-2024.09.28\nsoc-antivirus-2022.12.16\nsoc-antivirus-2024.09.29\nsoc-antivirus-2022.12.15\nsoc-antivirus-2022.12.14\nsoc-antivirus-2022.12.02\nsoc-antivirus-2022.12.01\nsoc-antivirus-2023.10.30\nsoc-antivirus-2022.12.09\nsoc-antivirus-2023.10.31\nsoc-antivirus-2022.12.08\nsoc-antivirus-2022.12.07\nsoc-antivirus-2022.12.06\nsoc-antivirus-2022.12.05\nsoc-antivirus-2022.12.04\nsoc-antivirus-2022.12.03\nsoc-antivirus-2024.10.30\nsoc-antivirus-2024.10.31\nsoc-antivirus-2024.10.29\nsoc-antivirus-2021.12.01\nsoc-antivirus-2021.12.02\nsoc-antivirus-2021.12.03\nsoc-antivirus-2021.12.04\nsoc-antivirus-2021.12.05\nsoc-antivirus-2021.12.06\nsoc-antivirus-2021.12.07\nsoc-antivirus-2021.12.08\nsoc-antivirus-2021.12.09\nsoc-antivirus-2021.03.12\nsoc-antivirus-2021.03.11\nsoc-antivirus-2021.03.10\nsoc-antivirus-2021.03.16\nsoc-antivirus-2021.03.15\nsoc-antivirus-2021.03.14\nsoc-antivirus-2021.03.13\nsoc-antivirus-2022.07.26\nsoc-antivirus-2021.03.19\nsoc-antivirus-2022.07.25\nsoc-antivirus-2021.03.18\nsoc-antivirus-2022.07.24\nsoc-antivirus-2022.07.23\nsoc-antivirus-2021.03.17\nsoc-antivirus-2022.07.29\nsoc-antivirus-2022.07.28\nsoc-antivirus-2022.07.27\nsoc-antivirus-2024.06.05\nsoc-antivirus-2024.06.04\nsoc-antivirus-2024.06.03\nsoc-antivirus-2021.10.22_123\nsoc-antivirus-2024.06.02\nsoc-antivirus-2022.07.22\nsoc-antivirus-2024.06.01\nsoc-antivirus-2022.07.21\nsoc-antivirus-2022.07.20\nsoc-antivirus-2023.12.31\nsoc-antivirus-2024.06.09\nsoc-antivirus-2024.06.08\nsoc-antivirus-2024.06.07\nsoc-antivirus-2023.12.30\nsoc-antivirus-2024.06.06\nsoc-antivirus-2021.03.01\nsoc-antivirus-2021.03.05\nsoc-antivirus-2021.03.04\nsoc-antivirus-2021.03.03\nsoc-antivirus-2021.03.02\nsoc-antivirus-2021.03.09\nsoc-antivirus-2021.03.08\nsoc-antivirus-2021.03.07\nsoc-antivirus-2021.03.06\nsoc-antivirus-2022.07.31\nsoc-antivirus-2022.07.30\nsoc-antivirus-2023.02.09\nsoc-antivirus-2023.02.08\nsoc-antivirus-2023.02.07\nsoc-antivirus-2022.07.09\nsoc-antivirus-2023.02.06\nsoc-antivirus-2023.02.05\nsoc-antivirus-2023.02.04\nsoc-antivirus-2023.02.03\nsoc-antivirus-2023.02.02\nsoc-antivirus-2022.07.04\nsoc-antivirus-2022.07.03\nsoc-antivirus-2023.02.01\nsoc-antivirus-2022.07.02\nsoc-antivirus-2022.07.01\nsoc-antivirus-2022.07.08\nsoc-antivirus-2022.07.07\nsoc-antivirus-2022.07.06\nsoc-antivirus-2022.07.05\nsoc-antivirus-2024.06.27\nsoc-antivirus-2023.12.18\nsoc-antivirus-2024.06.26\nsoc-antivirus-2023.12.17\nsoc-antivirus-2024.06.25\nsoc-antivirus-2023.12.19\nsoc-antivirus-2024.06.24\nsoc-antivirus-2023.12.14\nsoc-antivirus-2024.06.23\nsoc-antivirus-2023.12.13\nsoc-antivirus-2024.06.22\nsoc-antivirus-2024.06.21\nsoc-antivirus-2023.12.16\nsoc-antivirus-2024.06.20\nsoc-antivirus-2023.12.15\nsoc-antivirus-2023.12.10\nsoc-antivirus-2023.12.12\nsoc-antivirus-2023.12.11\nsoc-antivirus-2024.06.29\nsoc-antivirus-2024.06.28\nsoc-antivirus-2022.07.15\nsoc-antivirus-2022.07.14\nsoc-antivirus-2022.07.13\nsoc-antivirus-2022.07.12\nsoc-antivirus-2022.07.19\nsoc-antivirus-2022.07.18\nsoc-antivirus-2022.07.17\nsoc-antivirus-2022.07.16\nsoc-antivirus-2024.06.16\nsoc-antivirus-2023.12.29\nsoc-antivirus-2023.12.28\nsoc-antivirus-2024.06.15\nsoc-antivirus-2024.06.14\nsoc-antivirus-2024.06.13\nsoc-antivirus-2024.06.12\nsoc-antivirus-2022.07.11\nsoc-antivirus-2023.12.25\nsoc-antivirus-2022.07.10\nsoc-antivirus-2023.12.24\nsoc-antivirus-2024.06.11\nsoc-antivirus-2023.12.27\nsoc-antivirus-2024.06.10\nsoc-antivirus-2023.12.26\nsoc-antivirus-2023.12.21\nsoc-antivirus-2023.12.20\nsoc-antivirus-2023.12.23\nsoc-antivirus-2023.12.22\nsoc-antivirus-2024.06.19\nsoc-antivirus-2024.06.18\nsoc-antivirus-2024.06.17\nsoc-antivirus-2023.02.28\nsoc-antivirus-2023.02.27\nsoc-antivirus-2023.02.26\nsoc-antivirus-2023.02.25\nsoc-antivirus-2023.02.24\nsoc-antivirus-2022.09.07\nsoc-antivirus-2022.09.08\nsoc-antivirus-2023.02.23\nsoc-antivirus-2022.09.09\nsoc-antivirus-2023.02.22\nsoc-antivirus-2021.10.21_121\nsoc-antivirus-2023.02.21\nsoc-antivirus-2022.09.03\nsoc-antivirus-2023.02.20\nsoc-antivirus-2022.09.04\nsoc-antivirus-2022.09.05\nsoc-antivirus-2022.09.06\nsoc-antivirus-2022.09.01\nsoc-antivirus-2022.09.02\nsoc-antivirus-2022.10.07\nsoc-antivirus-2022.10.08\nsoc-antivirus-2022.10.05\nsoc-antivirus-2022.10.06\nsoc-antivirus-2022.10.03\nsoc-antivirus-2022.10.04\nsoc-antivirus-2022.10.01\nsoc-antivirus-2022.10.02\nsoc-antivirus-2023.02.19\nsoc-antivirus-2023.02.18\nsoc-antivirus-2023.02.17\nsoc-antivirus-2023.02.16\nsoc-antivirus-2023.02.15\nsoc-antivirus-2023.02.14\nsoc-antivirus-2022.09.18\nsoc-antivirus-2024.06.30\nsoc-antivirus-2023.02.13\nsoc-antivirus-2022.09.19\nsoc-antivirus-2023.02.12\nsoc-antivirus-2023.02.11\nsoc-antivirus-2023.02.10\nsoc-antivirus-2022.09.14\nsoc-antivirus-2022.09.15\nsoc-antivirus-2022.09.16\nsoc-antivirus-2022.09.17\nsoc-antivirus-2022.09.10\nsoc-antivirus-2022.09.11\nsoc-antivirus-2022.09.12\nsoc-antivirus-2022.09.13\nsoc-antivirus-2021.03.31\nsoc-antivirus-2024.08.08\nsoc-antivirus-2024.08.09\nsoc-antivirus-2024.08.01\nsoc-antivirus-2024.08.02\nsoc-antivirus-2024.08.03\nsoc-antivirus-2024.08.04\nsoc-antivirus-2021.03.30\nsoc-antivirus-2024.08.05\nsoc-antivirus-2024.08.06\nsoc-antivirus-2024.08.07\nsoc-antivirus-2021.03.23\nsoc-antivirus-2021.03.22\nsoc-antivirus-2021.03.21\nsoc-antivirus-2021.03.20\nsoc-antivirus-2021.03.27\nsoc-antivirus-2021.03.26\nsoc-antivirus-2021.03.25\nsoc-antivirus-2021.03.24\nsoc-antivirus-2021.03.29\nsoc-antivirus-2021.03.28\nsoc-antivirus-2022.05.09\nsoc-antivirus-2022.05.07\nsoc-antivirus-2022.05.08\nsoc-antivirus-2022.05.01\nsoc-antivirus-2022.05.02\nsoc-antivirus-2022.05.05\nsoc-antivirus-2022.05.06\nsoc-antivirus-2022.05.03\nsoc-antivirus-2022.05.04\nsoc-antivirus-2023.04.10\nsoc-antivirus-2023.04.11\nsoc-antivirus-2023.04.12\nsoc-antivirus-2023.04.13\nsoc-antivirus-2023.04.14\nsoc-antivirus-2023.04.15\nsoc-antivirus-2023.04.16\nsoc-antivirus-2021.05.30\nsoc-antivirus-2023.04.17\nsoc-antivirus-2021.05.31\nsoc-antivirus-2023.04.18\nsoc-antivirus-2023.04.19\nsoc-antivirus-2021.05.26\nsoc-antivirus-2021.05.27\nsoc-antivirus-2021.05.28\nsoc-antivirus-2022.05.18\nsoc-antivirus-2022.05.19\nsoc-antivirus-2021.05.29\nsoc-antivirus-2021.05.22\nsoc-antivirus-2021.05.23\nsoc-antivirus-2021.05.24\nsoc-antivirus-2021.05.25\nsoc-antivirus-2022.05.12\nsoc-antivirus-2022.05.13\nsoc-antivirus-2022.05.10\nsoc-antivirus-2022.05.11\nsoc-antivirus-2022.05.16\nsoc-antivirus-2022.05.17\nsoc-antivirus-2022.05.14\nsoc-antivirus-2022.05.15\nsoc-antivirus-2023.04.20\nsoc-antivirus-2023.04.21\nsoc-antivirus-2023.04.22\nsoc-antivirus-2023.04.23\nsoc-antivirus-2023.04.24\nsoc-antivirus-2023.04.25\nsoc-antivirus-2023.04.26\nsoc-antivirus-2023.04.27\nsoc-antivirus-2023.04.28\nsoc-antivirus-2023.04.29\nsoc-antivirus-2021.05.20\nsoc-antivirus-2021.05.21\nsoc-antivirus-2021.05.15\nsoc-antivirus-2021.05.16\nsoc-antivirus-2021.05.17\nsoc-antivirus-2021.05.18\nsoc-antivirus-2021.05.11\nsoc-antivirus-2021.05.12\nsoc-antivirus-2021.05.13\nsoc-antivirus-2021.05.14\nsoc-antivirus-2021.05.19\nsoc-antivirus-2024.04.02\nsoc-antivirus-2024.04.03\nsoc-antivirus-2024.04.01\nsoc-antivirus-2024.04.08\nsoc-antivirus-2021.05.10\nsoc-antivirus-2024.04.09\nsoc-antivirus-2024.04.06\nsoc-antivirus-2024.04.07\nsoc-antivirus-2024.04.04\nsoc-antivirus-2024.04.05\nsoc-antivirus-2021.05.04\nsoc-antivirus-2021.05.05\nsoc-antivirus-2021.05.06\nsoc-antivirus-2021.10.23_123\nsoc-antivirus-2021.05.07\nsoc-antivirus-2021.05.01\nsoc-antivirus-2021.05.02\nsoc-antivirus-2021.05.03\nsoc-antivirus-2021.05.08\nsoc-antivirus-2021.05.09\nsoc-antivirus-2023.04.01\nsoc-antivirus-2023.04.02\nsoc-antivirus-2023.04.03\nsoc-antivirus-2023.04.04\nsoc-antivirus-2023.04.05\nsoc-antivirus-2023.04.06\nsoc-antivirus-2023.04.07\nsoc-antivirus-2023.04.08\nsoc-antivirus-2023.04.09\nsoc-antivirus-2021.07.18\nsoc-antivirus-2021.07.17\nsoc-antivirus-2021.07.19\nsoc-antivirus-2021.07.14\nsoc-antivirus-2021.07.13\nsoc-antivirus-2021.07.16\nsoc-antivirus-2021.07.15\nsoc-antivirus-2024.04.24\nsoc-antivirus-2024.04.25\nsoc-antivirus-2024.04.22\nsoc-antivirus-2024.04.23\nsoc-antivirus-2024.04.20\nsoc-antivirus-2024.04.21\nsoc-antivirus-2021.07.10\nsoc-antivirus-2021.07.12\nsoc-antivirus-2021.07.11\nsoc-antivirus-2024.04.28\nsoc-antivirus-2024.04.29\nsoc-antivirus-2024.04.26\nsoc-antivirus-2024.04.27\nsoc-antivirus-2021.07.07\nsoc-antivirus-2021.07.06\nsoc-antivirus-2021.07.09\nsoc-antivirus-2021.07.08\nsoc-antivirus-2021.07.03\nsoc-antivirus-2021.07.02\nsoc-antivirus-2021.07.05\nsoc-antivirus-2021.07.04\nsoc-antivirus-2024.04.13\nsoc-antivirus-2024.04.14\nsoc-antivirus-2023.06.02\nsoc-antivirus-2024.04.11\nsoc-antivirus-2024.04.12\nsoc-antivirus-2023.06.01\nsoc-antivirus-2023.06.04\nsoc-antivirus-2024.04.10\nsoc-antivirus-2023.06.03\nsoc-antivirus-2023.06.06\nsoc-antivirus-2023.06.05\nsoc-antivirus-2023.06.08\nsoc-antivirus-2023.06.07\nsoc-antivirus-2024.04.19\nsoc-antivirus-2021.07.01\nsoc-antivirus-2023.06.09\nsoc-antivirus-2024.04.17\nsoc-antivirus-2024.04.18\nsoc-antivirus-2024.04.15\nsoc-antivirus-2024.04.16\nsoc-antivirus-2022.05.29\nsoc-antivirus-2022.05.23\nsoc-antivirus-2022.05.24\nsoc-antivirus-2022.05.21\nsoc-antivirus-2022.05.22\nsoc-antivirus-2022.05.27\nsoc-antivirus-2022.05.28\nsoc-antivirus-2022.05.25\nsoc-antivirus-2022.05.26\nsoc-antivirus-2023.04.30\nsoc-antivirus-2022.05.20\nsoc-antivirus-2022.05.30\nsoc-antivirus-2022.05.31\nsoc-antivirus-2024.04.30\nsoc-antivirus-2021.10.24_123\nsoc-antivirus-2021.08.29\nsoc-antivirus-2021.08.26\nsoc-antivirus-2021.08.25\nsoc-antivirus-2021.08.28\nsoc-antivirus-2024.11.30\nsoc-antivirus-2021.08.27\nsoc-antivirus-2023.06.30\nsoc-antivirus-2021.08.22\nsoc-antivirus-2021.08.21\nsoc-antivirus-2021.08.24\nsoc-antivirus-2021.08.23\nsoc-antivirus-2021.08.20\nsoc-antivirus-2021.08.19\nsoc-antivirus-2021.08.18\nsoc-antivirus-2021.08.15\nsoc-antivirus-2024.11.21\nsoc-antivirus-2021.08.14\nsoc-antivirus-2024.11.20\nsoc-antivirus-2021.08.17\nsoc-antivirus-2021.08.16\nsoc-antivirus-2024.11.25\nsoc-antivirus-2024.11.24\nsoc-antivirus-2024.11.23\nsoc-antivirus-2024.11.22\nsoc-antivirus-2024.11.29\nsoc-antivirus-2024.11.28\nsoc-antivirus-2024.11.27\nsoc-antivirus-2024.11.26\nsoc-antivirus-2024.11.19\nsoc-antivirus-2021.08.11\nsoc-antivirus-2021.08.10\nsoc-antivirus-2021.08.13\nsoc-antivirus-2021.08.12\nsoc-antivirus-2022.01.25\nsoc-antivirus-2021.08.08\nsoc-antivirus-2022.01.26\nsoc-antivirus-2021.08.07\nsoc-antivirus-2022.01.27\nsoc-antivirus-2022.01.28\nsoc-antivirus-2021.08.09\nsoc-antivirus-2022.01.29\nsoc-antivirus-2021.08.04\nsoc-antivirus-2024.01.09\nsoc-antivirus-2021.08.03\nsoc-antivirus-2021.08.06\nsoc-antivirus-2021.08.05\nsoc-antivirus-2022.01.20\nsoc-antivirus-2022.01.21\nsoc-antivirus-2022.01.22\nsoc-antivirus-2022.01.23\nsoc-antivirus-2022.01.24\nsoc-antivirus-2023.06.11\nsoc-antivirus-2023.06.10\nsoc-antivirus-2024.01.11\nsoc-antivirus-2023.06.13\nsoc-antivirus-2024.01.10\nsoc-antivirus-2023.06.12\nsoc-antivirus-2023.06.15\nsoc-antivirus-2023.06.14\nsoc-antivirus-2023.06.17\nsoc-antivirus-2023.06.16\nsoc-antivirus-2024.01.17\nsoc-antivirus-2023.06.19\nsoc-antivirus-2023.06.18\nsoc-antivirus-2024.01.16\nsoc-antivirus-2021.08.02\nsoc-antivirus-2024.01.19\nsoc-antivirus-2024.01.18\nsoc-antivirus-2021.08.01\nsoc-antivirus-2024.01.13\nsoc-antivirus-2024.01.12\nsoc-antivirus-2024.01.15\nsoc-antivirus-2024.01.14\nsoc-antivirus-2022.01.30\nsoc-antivirus-2022.01.31\nsoc-antivirus-2023.06.20\nsoc-antivirus-2023.06.22\nsoc-antivirus-2023.06.21\nsoc-antivirus-2023.06.24\nsoc-antivirus-2023.06.23\nsoc-antivirus-2023.06.26\nsoc-antivirus-2023.06.25\nsoc-antivirus-2023.06.28\nsoc-antivirus-2023.06.27\nsoc-antivirus-2024.01.06\nsoc-antivirus-2024.01.05\nsoc-antivirus-2023.06.29\nsoc-antivirus-2024.01.08\nsoc-antivirus-2024.01.07\nsoc-antivirus-2024.01.02\nsoc-antivirus-2024.01.01\nsoc-antivirus-2024.01.04\nsoc-antivirus-2024.01.03\nsoc-antivirus-2022.03.28\nsoc-antivirus-2022.03.27\nsoc-antivirus-2022.03.29\nsoc-antivirus-2022.03.20\nsoc-antivirus-2022.03.22\nsoc-antivirus-2022.03.21\nsoc-antivirus-2022.03.24\nsoc-antivirus-2022.03.23\nsoc-antivirus-2022.03.26\nsoc-antivirus-2023.08.11\nsoc-antivirus-2022.03.25\nsoc-antivirus-2023.08.10\nsoc-antivirus-2024.01.31\nsoc-antivirus-2023.08.13\nsoc-antivirus-2023.08.12\nsoc-antivirus-2024.01.30\nsoc-antivirus-2023.08.15\nsoc-antivirus-2023.08.14\nsoc-antivirus-2023.08.17\nsoc-antivirus-2023.08.16\nsoc-antivirus-2023.08.19\nsoc-antivirus-2023.08.18\nsoc-antivirus-2022.03.31\nsoc-antivirus-2022.03.30\nsoc-antivirus-2023.08.20\nsoc-antivirus-2023.08.22\nsoc-antivirus-2023.08.21\nsoc-antivirus-2024.01.20\nsoc-antivirus-2023.08.24\nsoc-antivirus-2023.08.23\nsoc-antivirus-2024.01.22\nsoc-antivirus-2023.08.26\nsoc-antivirus-2024.01.21\nsoc-antivirus-2023.08.25\nsoc-antivirus-2023.08.28\nsoc-antivirus-2023.08.27\nsoc-antivirus-2023.08.29\nsoc-antivirus-2024.01.28\nsoc-antivirus-2024.01.27\nsoc-antivirus-2024.01.29\nsoc-antivirus-2024.01.24\nsoc-antivirus-2024.01.23\nsoc-antivirus-2024.01.26\nsoc-antivirus-2024.01.25\nsoc-antivirus-2022.03.06\nsoc-antivirus-2022.03.05\nsoc-antivirus-2022.03.08\nsoc-antivirus-2022.03.07\nsoc-antivirus-2022.03.09\nsoc-antivirus-2022.03.02\nsoc-antivirus-2022.03.01\nsoc-antivirus-2022.03.04\nsoc-antivirus-2022.03.03\nsoc-antivirus-2022.03.17\nsoc-antivirus-2022.03.16\nsoc-antivirus-2022.03.19\nsoc-antivirus-2022.03.18\nsoc-antivirus-2022.03.11\nsoc-antivirus-2022.03.10\nsoc-antivirus-2022.03.13\nsoc-antivirus-2022.03.12\nsoc-antivirus-2022.03.15\nsoc-antivirus-2022.03.14\nsoc-antivirus-2023.08.02\nsoc-antivirus-2023.08.01\nsoc-antivirus-2023.08.04\nsoc-antivirus-2023.08.03\nsoc-antivirus-2023.08.06\nsoc-antivirus-2023.08.05\nsoc-antivirus-2023.08.08\nsoc-antivirus-2023.08.07\nsoc-antivirus-2023.08.09\nsoc-antivirus-2021.08.30\nsoc-antivirus-2024.08.20\nsoc-antivirus-2024.08.21\nsoc-antivirus-2022.11.11\nsoc-antivirus-2022.11.12\nsoc-antivirus-2022.11.10\nsoc-antivirus-2022.11.19\nsoc-antivirus-2024.08.22\nsoc-antivirus-2024.08.23\nsoc-antivirus-2022.11.17\nsoc-antivirus-2024.08.24\nsoc-antivirus-2022.11.18\nsoc-antivirus-2024.08.25\nsoc-antivirus-2022.11.15\nsoc-antivirus-2024.08.26\nsoc-antivirus-2024.08.27\nsoc-antivirus-2022.11.16\nsoc-antivirus-2022.11.13\nsoc-antivirus-2024.08.28\nsoc-antivirus-2022.11.14\nsoc-antivirus-2024.08.29\nsoc-antivirus-2024.08.10\nsoc-antivirus-2024.08.19\nsoc-antivirus-2022.11.01\nsoc-antivirus-2022.11.08\nsoc-antivirus-2024.08.11\nsoc-antivirus-2022.11.09\nsoc-antivirus-2024.08.12\nsoc-antivirus-2024.08.13\nsoc-antivirus-2022.11.06\nsoc-antivirus-2024.08.14\nsoc-antivirus-2022.11.07\nsoc-antivirus-2022.11.04\nsoc-antivirus-2024.08.15\nsoc-antivirus-2022.11.05\nsoc-antivirus-2024.08.16\nsoc-antivirus-2024.08.17\nsoc-antivirus-2022.11.02\nsoc-antivirus-2022.11.03\nsoc-antivirus-2024.08.18\nsoc-antivirus-2023.08.31\nsoc-antivirus-2023.08.30\nsoc-antivirus-2024.08.30\nsoc-antivirus-2024.08.31\nsoc-antivirus-2022.01.03\nsoc-antivirus-2022.01.04\nsoc-antivirus-2022.01.05\nsoc-antivirus-2022.01.06\nsoc-antivirus-2022.01.07\nsoc-antivirus-2022.01.08\nsoc-antivirus-2022.01.09\nsoc-antivirus-2022.01.01\nsoc-antivirus-2022.01.02\nsoc-antivirus-2023.11.27\nsoc-antivirus-2023.11.28\nsoc-antivirus-2023.11.29\nsoc-antivirus-2023.11.23\nsoc-antivirus-2023.11.24\nsoc-antivirus-2021.11.01\nsoc-antivirus-2023.11.25\nsoc-antivirus-2021.11.02\nsoc-antivirus-2023.11.26\nsoc-antivirus-2021.11.03\nsoc-antivirus-2023.11.20\nsoc-antivirus-2021.11.04\nsoc-antivirus-2021.11.05\nsoc-antivirus-2023.11.21\nsoc-antivirus-2021.11.06\nsoc-antivirus-2023.11.22\nsoc-antivirus-2021.11.07\nsoc-antivirus-2021.11.08\nsoc-antivirus-2021.11.09\nsoc-antivirus-2022.01.14\nsoc-antivirus-2022.01.15\nsoc-antivirus-2022.01.16\nsoc-antivirus-2022.01.17\nsoc-antivirus-2022.01.18\nsoc-antivirus-2022.01.19\nsoc-antivirus-2022.01.10\nsoc-antivirus-2022.01.11\nsoc-antivirus-2022.01.12\nsoc-antivirus-2022.01.13\nsoc-antivirus-2021.11.10\nsoc-antivirus-2021.11.11\nsoc-antivirus-2021.11.12\nsoc-antivirus-2021.11.13\nsoc-antivirus-2021.11.14\nsoc-antivirus-2021.11.15\nsoc-antivirus-2021.11.16\nsoc-antivirus-2021.11.17\nsoc-antivirus-2021.11.18\nsoc-antivirus-2021.11.19\nsoc-antivirus-2024.11.10\nsoc-antivirus-2024.11.14\nsoc-antivirus-2024.11.13\nsoc-antivirus-2024.11.12\nsoc-antivirus-2024.11.11\nsoc-antivirus-2024.11.18\nsoc-antivirus-2024.11.17\nsoc-antivirus-2024.11.16\nsoc-antivirus-2024.11.15\nsoc-antivirus-2023.11.05\nsoc-antivirus-2023.11.06\nsoc-antivirus-2024.11.09\nsoc-antivirus-2023.11.07\nsoc-antivirus-2021.11.20\nsoc-antivirus-2024.11.08\nsoc-antivirus-2023.11.08\nsoc-antivirus-2021.11.21\nsoc-antivirus-2023.11.01\nsoc-antivirus-2023.11.02\nsoc-antivirus-2021.11.22\nsoc-antivirus-2022.11.30\nsoc-antivirus-2021.11.23\nsoc-antivirus-2023.11.03\nsoc-antivirus-2023.11.04\nsoc-antivirus-2021.11.24\nsoc-antivirus-2021.11.25\nsoc-antivirus-2021.11.26\nsoc-antivirus-2021.11.27\nsoc-antivirus-2021.11.28\nsoc-antivirus-2021.11.29\nsoc-antivirus-2024.11.03\nsoc-antivirus-2024.11.02\nsoc-antivirus-2024.11.01\nsoc-antivirus-2023.11.09\nsoc-antivirus-2024.11.07\nsoc-antivirus-2024.11.06\nsoc-antivirus-2024.11.05\nsoc-antivirus-2024.11.04\nsoc-antivirus-2023.11.16\nsoc-antivirus-2022.11.22\nsoc-antivirus-2022.11.23\nsoc-antivirus-2023.11.17\nsoc-antivirus-2021.11.30\nsoc-antivirus-2022.11.20\nsoc-antivirus-2023.11.18\nsoc-antivirus-2022.11.21\nsoc-antivirus-2023.11.19\nsoc-antivirus-2023.11.12\nsoc-antivirus-2023.11.13\nsoc-antivirus-2023.11.14\nsoc-antivirus-2023.11.15\nsoc-antivirus-2023.11.10\nsoc-antivirus-2022.11.28\nsoc-antivirus-2023.11.11\nsoc-antivirus-2022.11.29\nsoc-antivirus-2022.11.26\nsoc-antivirus-2022.11.27\nsoc-antivirus-2022.11.24\nsoc-antivirus-2022.11.25"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.59",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "101025",
            "pluginname": "Elasticsearch Unrestricted Access Information Disclosure",
            "hostname": "",
            "port": "9201",
            "protocol": "tcp",
            "severity": "2",
            "description": "The Elasticsearch application running on the remote web server is affected by an information disclosure vulnerability due to a failure to restrict resources via authentication. An unauthenticated, remote attacker can exploit this to disclose sensitive information from the database.",
            "solution": "Enable native user authentication or integrate with an external user management system such as LDAP and Active Directory.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?d055e692\nhttp://www.nessus.org/u?b80612a1",
            "plugin_output": "Nessus detected an unprotected instance of Elasticsearch with the following indices :\nsoc-antivirus-2023.01.19\nsoc-antivirus-2023.01.17\nsoc-antivirus-2023.01.18\nsoc-antivirus-2023.01.15\nsoc-antivirus-2023.01.16\nsoc-antivirus-2023.01.13\nsoc-antivirus-2023.01.14\nsoc-antivirus-2023.01.11\nsoc-antivirus-2023.01.12\nsoc-antivirus-2023.01.10\nsoc-antivirus-2024.05.30\nsoc-antivirus-2024.05.31\nsoc-antivirus-2023.01.08\nsoc-antivirus-2023.01.09\nsoc-antivirus-2023.01.06\nsoc-antivirus-2023.01.07\nsoc-antivirus-2023.01.04\nsoc-antivirus-2023.01.05\nsoc-antivirus-2023.01.02\nsoc-antivirus-2023.01.03\nsoc-antivirus-2022.08.05\nsoc-antivirus-2023.01.01\nsoc-antivirus-2022.08.04\nsoc-antivirus-2022.08.03\nsoc-antivirus-2022.08.02\nsoc-antivirus-2022.08.09\nsoc-antivirus-2022.08.08\nsoc-antivirus-2022.08.07\nsoc-antivirus-2022.08.06\nsoc-antivirus-2024.05.25\nsoc-antivirus-2024.05.26\nsoc-antivirus-2024.05.23\nsoc-antivirus-2024.05.24\nsoc-antivirus-2022.08.01\nsoc-antivirus-2024.05.21\nsoc-antivirus-2024.05.22\nsoc-antivirus-2024.05.20\nsoc-antivirus-2024.05.29\nsoc-antivirus-2024.05.27\nsoc-antivirus-2024.05.28\nsoc-antivirus-2023.01.31\nsoc-antivirus-2023.01.30\n.kibana_log_1\nsoc-antivirus-2022.06.30\nsoc-antivirus-2023.01.28\nsoc-antivirus-2023.01.29\nsoc-antivirus-2023.01.26\nsoc-antivirus-2023.01.27\nsoc-antivirus-2023.01.24\nsoc-antivirus-2023.01.25\nsoc-antivirus-2023.01.22\nsoc-antivirus-2023.01.23\nsoc-antivirus-2023.01.20\nsoc-antivirus-2023.01.21\nsoc-antivirus-2021.04.24\nsoc-antivirus-2021.04.23\nsoc-antivirus-2021.04.22\nsoc-antivirus-2021.04.21\nsoc-antivirus-2021.04.28\nsoc-antivirus-2021.04.27\nsoc-antivirus-2021.04.26\nsoc-antivirus-2021.04.25\nsoc-antivirus-2021.04.29\nsoc-antivirus-2022.08.30\nsoc-antivirus-2024.07.17\nsoc-antivirus-2024.07.16\nsoc-antivirus-2024.07.15\nsoc-antivirus-2024.07.14\nsoc-antivirus-2024.07.13\nsoc-antivirus-2024.07.12\nsoc-antivirus-2024.07.11\nsoc-antivirus-2024.07.10\nsoc-antivirus-2022.08.31\nsoc-antivirus-2021.04.20\nsoc-antivirus-2024.07.19\nsoc-antivirus-2024.07.18\nsoc-antivirus-2021.04.13\nsoc-antivirus-2021.04.12\nsoc-antivirus-2021.04.11\nsoc-antivirus-2021.04.10\nsoc-antivirus-2021.04.17\nsoc-antivirus-2021.04.16\nsoc-antivirus-2021.04.15\nsoc-antivirus-2021.04.14\nsoc-antivirus-2021.04.19\nsoc-antivirus-2021.04.18\nsoc-antivirus-2024.07.06\nsoc-antivirus-2024.07.05\nsoc-antivirus-2024.07.04\nsoc-antivirus-2024.07.03\nsoc-antivirus-2024.07.02\nsoc-antivirus-2024.07.01\nsoc-antivirus-2024.07.09\nsoc-antivirus-2024.07.08\nsoc-antivirus-2024.07.07\nsoc-antivirus-2021.04.02\nsoc-antivirus-2021.04.01\nsoc-antivirus-2023.03.19\nsoc-antivirus-2021.04.06\nsoc-antivirus-2023.03.18\nsoc-antivirus-2021.04.05\nsoc-antivirus-2023.03.17\nsoc-antivirus-2023.03.16\nsoc-antivirus-2021.04.04\nsoc-antivirus-2021.04.03\nsoc-antivirus-2023.03.15\nsoc-antivirus-2023.03.14\nsoc-antivirus-2024.07.31\nsoc-antivirus-2022.08.16\nsoc-antivirus-2021.04.09\nsoc-antivirus-2023.03.13\nsoc-antivirus-2022.08.15\nsoc-antivirus-2024.07.30\nsoc-antivirus-2023.03.12\nsoc-antivirus-2021.04.08\nsoc-antivirus-2022.08.14\nsoc-antivirus-2022.08.13\nsoc-antivirus-2023.03.11\nsoc-antivirus-2021.04.07\nsoc-antivirus-2023.03.10\nsoc-antivirus-2022.08.19\nsoc-antivirus-2022.08.18\nsoc-antivirus-2022.08.17\nsoc-antivirus-2022.08.12\nsoc-antivirus-2022.08.11\nsoc-antivirus-2022.08.10\nsoc-antivirus-2023.03.09\nsoc-antivirus-2023.03.08\nsoc-antivirus-2023.03.07\nsoc-antivirus-2023.03.06\nsoc-antivirus-2023.03.05\nsoc-antivirus-2023.03.04\nsoc-antivirus-2024.07.20\nsoc-antivirus-2023.03.03\nsoc-antivirus-2022.08.27\nsoc-antivirus-2022.08.26\nsoc-antivirus-2023.03.02\nsoc-antivirus-2022.08.25\nsoc-antivirus-2023.03.01\nsoc-antivirus-2022.08.24\n.kibana_1\nsoc-antivirus-2022.08.29\nsoc-antivirus-2022.08.28\nsoc-antivirus-2024.07.28\nsoc-antivirus-2024.07.27\nsoc-antivirus-2024.07.26\nsoc-antivirus-2024.07.25\nsoc-antivirus-2024.07.24\nsoc-antivirus-2022.08.23\nsoc-antivirus-2022.08.22\nsoc-antivirus-2024.07.23\nsoc-antivirus-2024.07.22\nsoc-antivirus-2022.08.21\nsoc-antivirus-2022.08.20\nsoc-antivirus-2024.07.21\nsoc-antivirus-2024.07.29\nsoc-antivirus-2021.06.05\nsoc-antivirus-2021.06.06\nsoc-antivirus-2021.06.07\nsoc-antivirus-2021.06.08\nsoc-antivirus-2021.06.01\nsoc-antivirus-2021.06.02\nsoc-antivirus-2021.06.03\nsoc-antivirus-2021.06.04\nsoc-antivirus-2021.06.09\nsoc-antivirus-2023.03.31\nsoc-antivirus-2023.03.30\nsoc-antivirus-2024.03.11\nsoc-antivirus-2024.03.10\nsoc-antivirus-2024.03.13\nsoc-antivirus-2024.03.12\nsoc-antivirus-2022.04.30\nsoc-antivirus-2024.03.19\nsoc-antivirus-2024.03.18\nsoc-antivirus-2024.03.15\nsoc-antivirus-2024.03.14\nsoc-antivirus-2024.03.17\nsoc-antivirus-2024.03.16\nsoc-antivirus-2023.03.29\nsoc-antivirus-2023.03.28\nsoc-antivirus-2023.03.27\nsoc-antivirus-2023.03.26\nsoc-antivirus-2023.03.25\nsoc-antivirus-2023.03.24\nsoc-antivirus-2023.03.23\nsoc-antivirus-2023.03.22\nsoc-antivirus-2023.03.21\nsoc-antivirus-2023.03.20\nsoc-antivirus-2024.03.02\nsoc-antivirus-2024.03.01\nsoc-antivirus-2024.03.08\nsoc-antivirus-2024.03.07\nsoc-antivirus-2024.03.09\nsoc-antivirus-2024.03.04\nsoc-antivirus-2024.03.03\nsoc-antivirus-2024.03.06\nsoc-antivirus-2024.03.05\nsoc-antivirus-2022.04.18\nsoc-antivirus-2022.04.17\nsoc-antivirus-2022.04.19\nsoc-antivirus-2022.04.10\nsoc-antivirus-2022.04.12\nsoc-antivirus-2022.04.11\nsoc-antivirus-2022.04.14\nsoc-antivirus-2022.04.13\nsoc-antivirus-2022.04.16\nsoc-antivirus-2022.04.15\nsoc-antivirus-2024.03.31\nsoc-antivirus-2024.03.30\nsoc-antivirus-2022.04.29\nsoc-antivirus-2022.04.28\nsoc-antivirus-2022.04.21\nsoc-antivirus-2022.04.20\nsoc-antivirus-2022.04.23\nsoc-antivirus-2022.04.22\nsoc-antivirus-2022.04.25\nsoc-antivirus-2022.04.24\nsoc-antivirus-2022.04.27\nsoc-antivirus-2022.04.26\nsoc-antivirus-2024.03.22\nsoc-antivirus-2024.03.21\nsoc-antivirus-2024.03.24\nsoc-antivirus-2024.03.23\nsoc-antivirus-2024.03.20\nsoc-antivirus-2024.03.29\nsoc-antivirus-2024.03.26\nsoc-antivirus-2024.03.25\nsoc-antivirus-2021.04.30\nsoc-antivirus-2024.03.28\nsoc-antivirus-2024.03.27\nsoc-antivirus-2022.06.19\nsoc-antivirus-2022.06.13\nsoc-antivirus-2022.06.14\nsoc-antivirus-2022.06.11\nsoc-antivirus-2022.06.12\nsoc-antivirus-2022.06.17\nsoc-antivirus-2022.06.18\nsoc-antivirus-2022.06.15\nsoc-antivirus-2022.06.16\nsoc-antivirus-2023.05.20\nsoc-antivirus-2023.05.21\nsoc-antivirus-2023.05.22\nsoc-antivirus-2023.05.23\nsoc-antivirus-2023.05.24\nsoc-antivirus-2022.06.10\nsoc-antivirus-2023.05.25\nsoc-antivirus-2023.05.26\nsoc-antivirus-2023.05.27\nsoc-antivirus-2023.05.28\nsoc-antivirus-2023.05.29\nsoc-antivirus-2022.06.24\nsoc-antivirus-2022.06.25\nsoc-antivirus-2022.06.22\nsoc-antivirus-2022.06.23\nsoc-antivirus-2022.06.28\nsoc-antivirus-2022.06.29\nsoc-antivirus-2022.06.26\nsoc-antivirus-2023.05.30\nsoc-antivirus-2022.06.27\nsoc-antivirus-2023.05.31\nsoc-antivirus-2022.06.20\nsoc-antivirus-2022.06.21\nsoc-antivirus-2021.06.30\nsoc-antivirus-2021.06.27\nsoc-antivirus-2021.06.28\nsoc-antivirus-2021.06.29\nsoc-antivirus-2021.06.23\nsoc-antivirus-2021.06.24\nsoc-antivirus-2021.06.25\nsoc-antivirus-2021.06.26\nsoc-antivirus-2024.05.14\nsoc-antivirus-2024.05.15\nsoc-antivirus-2024.05.12\nsoc-antivirus-2023.05.01\nsoc-antivirus-2024.05.13\nsoc-antivirus-2023.05.02\nsoc-antivirus-2024.05.10\nsoc-antivirus-2021.10.18_121\nsoc-antivirus-2024.05.11\nsoc-antivirus-2023.05.03\nsoc-antivirus-2023.05.04\nsoc-antivirus-2023.05.05\nsoc-antivirus-2023.05.06\nsoc-antivirus-2023.05.07\nsoc-antivirus-2021.06.20\nsoc-antivirus-2023.05.08\nsoc-antivirus-2021.06.21\nsoc-antivirus-2023.05.09\nsoc-antivirus-2021.06.22\nsoc-antivirus-2024.05.18\nsoc-antivirus-2024.05.19\nsoc-antivirus-2024.05.16\nsoc-antivirus-2024.05.17\nsoc-antivirus-2021.06.16\nsoc-antivirus-2021.06.17\nsoc-antivirus-2022.06.08\nsoc-antivirus-2021.06.18\nsoc-antivirus-2021.06.19\nsoc-antivirus-2022.06.09\nsoc-antivirus-2021.06.12\nsoc-antivirus-2021.06.13\nsoc-antivirus-2021.06.14\nsoc-antivirus-2021.06.15\nsoc-antivirus-2022.06.02\nsoc-antivirus-2022.06.03\nsoc-antivirus-2022.06.01\nsoc-antivirus-2022.06.06\nsoc-antivirus-2022.06.07\nsoc-antivirus-2022.06.04\nsoc-antivirus-2022.06.05\nsoc-antivirus-2024.05.03\nsoc-antivirus-2024.05.04\nsoc-antivirus-2023.05.10\nsoc-antivirus-2024.05.01\nsoc-antivirus-2023.05.11\nsoc-antivirus-2024.05.02\nsoc-antivirus-2023.05.12\nsoc-antivirus-2023.05.13\nsoc-antivirus-2023.05.14\nsoc-antivirus-2023.05.15\nsoc-antivirus-2023.05.16\nsoc-antivirus-2023.05.17\nsoc-antivirus-2023.05.18\nsoc-antivirus-2024.05.09\nsoc-antivirus-2021.06.10\nsoc-antivirus-2023.05.19\nsoc-antivirus-2021.06.11\nsoc-antivirus-2024.05.07\nsoc-antivirus-2024.05.08\nsoc-antivirus-2024.05.05\nsoc-antivirus-2024.05.06\nsoc-antivirus-2022.02.16\nsoc-antivirus-2022.02.15\nsoc-antivirus-2022.02.18\nsoc-antivirus-2022.02.17\nsoc-antivirus-2022.02.19\nsoc-antivirus-2024.12.04\nsoc-antivirus-2024.12.03\nsoc-antivirus-2024.12.02\nsoc-antivirus-2022.02.10\nsoc-antivirus-2024.12.01\nsoc-antivirus-2024.12.08\nsoc-antivirus-2022.02.12\nsoc-antivirus-2022.02.11\nsoc-antivirus-2024.12.07\nsoc-antivirus-2024.12.06\nsoc-antivirus-2022.02.14\nsoc-antivirus-2024.12.05\nsoc-antivirus-2022.02.13\nsoc-antivirus-2023.07.01\nsoc-antivirus-2023.07.03\nsoc-antivirus-2023.07.02\nsoc-antivirus-2023.07.05\nsoc-antivirus-2023.07.04\nsoc-antivirus-2023.07.07\nsoc-antivirus-2023.07.06\nsoc-antivirus-2023.07.09\nsoc-antivirus-2023.07.08\napi\nsoc-antivirus-2022.02.27\nsoc-antivirus-2022.02.26\nsoc-antivirus-2022.02.28\nsoc-antivirus-2022.02.21\nsoc-antivirus-2022.02.20\nsoc-antivirus-2022.02.23\nsoc-antivirus-2022.02.22\nsoc-antivirus-2022.02.25\nsoc-antivirus-2023.07.10\nsoc-antivirus-2022.02.24\nsoc-antivirus-2023.07.12\nsoc-antivirus-2023.07.11\nsoc-antivirus-2023.07.14\nsoc-antivirus-2023.07.13\nsoc-antivirus-2023.07.16\nsoc-antivirus-2023.07.15\nsoc-antivirus-2023.07.18\nsoc-antivirus-2023.07.17\nsoc-antivirus-2023.07.19\nsoc-antivirus-2021.07.31\nsoc-antivirus-2021.07.30\nsoc-antivirus-2021.07.29\nsoc-antivirus-2022.02.05\nsoc-antivirus-2022.02.04\nsoc-antivirus-2021.07.28\nsoc-antivirus-2022.02.07\nsoc-antivirus-2022.02.06\nsoc-antivirus-2022.02.09\nsoc-antivirus-2021.07.25\nsoc-antivirus-2024.12.11\nsoc-antivirus-2024.12.10\nsoc-antivirus-2022.02.08\nsoc-antivirus-2021.07.24\nsoc-antivirus-2021.07.27\nsoc-antivirus-2021.07.26\nsoc-antivirus-2024.12.15\nsoc-antivirus-2024.12.14\nsoc-antivirus-2024.12.13\nsoc-antivirus-2024.12.12\nsoc-antivirus-2022.02.01\nsoc-antivirus-2024.12.18\nsoc-antivirus-2022.02.03\nsoc-antivirus-2024.12.17\nsoc-antivirus-2022.02.02\nsoc-antivirus-2024.12.16\nsoc-antivirus-2024.12.09\nsoc-antivirus-2022.12.31\nsoc-antivirus-2022.12.30\nsoc-antivirus-2021.07.21\nsoc-antivirus-2021.07.20\nsoc-antivirus-2021.07.23\nsoc-antivirus-2021.07.22\nsoc-antivirus-2021.10.29\nsoc-antivirus-2021.10.28\nsoc-antivirus-2021.10.27\nsoc-antivirus-2021.10.26\nsoc-antivirus-2021.10.25\nsoc-antivirus-2021.10.24\nsoc-antivirus-2021.10.23\nsoc-antivirus-2021.10.22\nsoc-antivirus-2021.10.21\nsoc-antivirus-2021.10.20\nsoc-antivirus-2024.02.01\nsoc-antivirus-2024.02.07\nsoc-antivirus-2024.02.06\nsoc-antivirus-2024.02.09\nsoc-antivirus-2024.02.08\nsoc-antivirus-2024.02.03\nsoc-antivirus-2021.09.30\nsoc-antivirus-2024.02.02\nsoc-antivirus-2024.02.05\nsoc-antivirus-2024.02.04\nsoc-antivirus-2022.04.07\nsoc-antivirus-2022.04.06\nsoc-antivirus-2021.10.19\nsoc-antivirus-2022.04.09\nsoc-antivirus-2021.10.18\nsoc-antivirus-2022.04.08\nsoc-antivirus-2021.10.17\nsoc-antivirus-2021.10.16\nsoc-antivirus-2021.09.27\nsoc-antivirus-2021.10.15\nsoc-antivirus-2021.09.26\nsoc-antivirus-2021.09.29\nsoc-antivirus-2021.10.14\nsoc-antivirus-2021.10.13\nsoc-antivirus-2021.09.28\nsoc-antivirus-2021.10.12\nsoc-antivirus-2021.10.11\nsoc-antivirus-2022.04.01\nsoc-antivirus-2021.10.10\nsoc-antivirus-2022.04.03\nsoc-antivirus-2022.04.02\nsoc-antivirus-2022.04.05\nsoc-antivirus-2022.04.04\nsoc-antivirus-2021.09.23\nsoc-antivirus-2021.09.22\nsoc-antivirus-2021.09.25\nsoc-antivirus-2021.09.24\nsoc-antivirus-2021.09.21\nsoc-antivirus-2021.09.20\nsoc-antivirus-2021.10.09\nsoc-antivirus-2021.09.19\nsoc-antivirus-2021.10.08\nsoc-antivirus-2021.10.07\nsoc-antivirus-2021.10.06\nsoc-antivirus-2021.09.16\nsoc-antivirus-2021.10.05\nsoc-antivirus-2021.09.15\nsoc-antivirus-2021.10.04\nsoc-antivirus-2021.10.03\nsoc-antivirus-2021.09.18\nsoc-antivirus-2021.10.02\nsoc-antivirus-2021.09.17\nsoc-antivirus-2021.10.01\nsoc-antivirus-2023.07.21\nsoc-antivirus-2023.07.20\nsoc-antivirus-2024.02.21\nsoc-antivirus-2023.07.23\nsoc-antivirus-2023.07.22\nsoc-antivirus-2024.02.20\nsoc-antivirus-2024.02.23\nsoc-antivirus-2023.07.25\nsoc-antivirus-2024.02.22\nsoc-antivirus-2023.07.24\nsoc-antivirus-2023.07.27\nsoc-antivirus-2023.07.26\nsoc-antivirus-2023.07.29\nsoc-antivirus-2023.07.28\nsoc-antivirus-2021.09.12\nsoc-antivirus-2024.02.29\nsoc-antivirus-2024.02.28\nsoc-antivirus-2021.09.11\nsoc-antivirus-2021.09.14\nsoc-antivirus-2021.09.13\nsoc-antivirus-2024.02.25\nsoc-antivirus-2024.02.24\nsoc-antivirus-2021.09.10\nsoc-antivirus-2024.02.27\nsoc-antivirus-2024.02.26\nsoc-antivirus-2021.09.09\nsoc-antivirus-2021.09.08\nsoc-antivirus-2021.09.05\nsoc-antivirus-2021.09.04\nsoc-antivirus-2021.09.07\nsoc-antivirus-2021.09.06\nsoc-antivirus-2023.07.30\nsoc-antivirus-2023.07.31\nsoc-antivirus-2024.02.10\nsoc-antivirus-2024.02.12\nsoc-antivirus-2024.02.11\nsoc-antivirus-2021.09.01\nsoc-antivirus-2024.02.18\nsoc-antivirus-2024.02.17\nsoc-antivirus-2021.09.03\nsoc-antivirus-2021.09.02\nsoc-antivirus-2024.02.19\nsoc-antivirus-2024.02.14\nsoc-antivirus-2024.02.13\nsoc-antivirus-2024.02.16\nsoc-antivirus-2024.02.15\nsoc-antivirus-2023.09.22\nsoc-antivirus-2023.10.08\nsoc-antivirus-2023.10.09\nsoc-antivirus-2023.09.23\nsoc-antivirus-2023.09.20\nsoc-antivirus-2023.09.21\nsoc-antivirus-2023.10.15\nsoc-antivirus-2023.09.26\nsoc-antivirus-2023.10.16\nsoc-antivirus-2023.09.27\nsoc-antivirus-2023.09.24\nsoc-antivirus-2023.10.17\nsoc-antivirus-2021.12.10\nsoc-antivirus-2023.09.25\nsoc-antivirus-2023.10.18\nsoc-antivirus-2023.10.11\nsoc-antivirus-2021.12.11\nsoc-antivirus-2021.12.12\nsoc-antivirus-2023.10.12\nsoc-antivirus-2023.09.28\nsoc-antivirus-2021.12.13\nsoc-antivirus-2023.10.13\nsoc-antivirus-2023.09.29\nsoc-antivirus-2021.12.14\nsoc-antivirus-2023.10.14\nsoc-antivirus-2021.12.15\nsoc-antivirus-2021.12.16\nsoc-antivirus-2021.12.17\nsoc-antivirus-2021.12.18\nsoc-antivirus-2023.10.10\nsoc-antivirus-2021.12.19\nsoc-antivirus-2023.09.30\nsoc-antivirus-2023.10.19\nsoc-antivirus-2023.10.26\nsoc-antivirus-2023.10.27\nsoc-antivirus-2022.10.30\nsoc-antivirus-2023.10.28\nsoc-antivirus-2021.12.20\nsoc-antivirus-2021.12.21\nsoc-antivirus-2023.10.29\nsoc-antivirus-2022.10.31\nsoc-antivirus-2021.12.22\nsoc-antivirus-2023.10.22\nsoc-antivirus-2021.12.23\nsoc-antivirus-2023.10.23\nsoc-antivirus-2023.10.24\nsoc-antivirus-2021.12.24\nsoc-antivirus-2021.12.25\nsoc-antivirus-2023.10.25\nsoc-antivirus-2021.12.26\nsoc-antivirus-2021.12.27\nsoc-antivirus-2023.10.20\nsoc-antivirus-2021.12.28\nsoc-antivirus-2021.10.20_121\nsoc-antivirus-2023.10.21\nsoc-antivirus-2021.12.29\nsoc-antivirus-2024.09.10\nsoc-antivirus-2024.09.11\nsoc-antivirus-2022.09.29\nsoc-antivirus-2024.10.01\nsoc-antivirus-2024.10.02\nsoc-antivirus-2022.09.25\nsoc-antivirus-2024.10.05\nsoc-antivirus-2023.09.01\nsoc-antivirus-2022.09.26\nsoc-antivirus-2024.10.06\nsoc-antivirus-2022.09.27\nsoc-antivirus-2024.10.03\nsoc-antivirus-2024.10.04\nsoc-antivirus-2022.09.28\nsoc-antivirus-2023.09.04\nsoc-antivirus-2022.10.21\nsoc-antivirus-2022.09.21\nsoc-antivirus-2022.09.22\nsoc-antivirus-2023.09.05\nsoc-antivirus-2022.10.22\nsoc-antivirus-2021.12.30\nsoc-antivirus-2022.09.23\nsoc-antivirus-2021.12.31\nsoc-antivirus-2023.09.02\nsoc-antivirus-2022.09.24\nsoc-antivirus-2023.09.03\nsoc-antivirus-2022.10.20\nsoc-antivirus-2023.09.08\nsoc-antivirus-2023.09.09\nsoc-antivirus-2023.09.06\nsoc-antivirus-2022.09.20\nsoc-antivirus-2023.09.07\nsoc-antivirus-2022.10.29\nsoc-antivirus-2024.09.12\nsoc-antivirus-2024.09.13\nsoc-antivirus-2024.09.14\nsoc-antivirus-2022.10.27\nsoc-antivirus-2024.09.15\nsoc-antivirus-2022.10.28\nsoc-antivirus-2024.09.16\nsoc-antivirus-2022.10.25\nsoc-antivirus-2022.10.26\nsoc-antivirus-2024.09.17\nsoc-antivirus-2024.09.18\nsoc-antivirus-2022.10.23\nsoc-antivirus-2024.09.19\nsoc-antivirus-2022.10.24\nsoc-antivirus-2022.10.09\nsoc-antivirus-2021.10.31\nsoc-antivirus-2021.10.30\nsoc-antivirus-2023.09.11\nsoc-antivirus-2023.09.12\nsoc-antivirus-2023.09.10\nsoc-antivirus-2022.10.10\nsoc-antivirus-2024.09.09\nsoc-antivirus-2023.09.15\nsoc-antivirus-2023.10.04\nsoc-antivirus-2022.10.11\nsoc-antivirus-2023.09.16\nsoc-antivirus-2023.10.05\nsoc-antivirus-2023.09.13\nsoc-antivirus-2023.10.06\nsoc-antivirus-2023.10.07\nsoc-antivirus-2023.09.14\nsoc-antivirus-2023.09.19\nsoc-antivirus-2023.10.01\nsoc-antivirus-2022.09.30\nsoc-antivirus-2023.10.02\nsoc-antivirus-2023.09.17\nsoc-antivirus-2023.10.03\nsoc-antivirus-2023.09.18\nsoc-antivirus-2022.10.18\nsoc-antivirus-2024.09.01\nsoc-antivirus-2022.10.19\nsoc-antivirus-2024.09.02\nsoc-antivirus-2024.09.03\nsoc-antivirus-2022.10.16\nsoc-antivirus-2022.10.17\nsoc-antivirus-2024.09.04\nsoc-antivirus-2024.09.05\nsoc-antivirus-2022.10.14\nsoc-antivirus-2024.09.06\nsoc-antivirus-2022.10.15\nsoc-antivirus-2022.10.12\nsoc-antivirus-2024.09.07\nsoc-antivirus-2024.09.08\nsoc-antivirus-2022.10.13\nsoc-antivirus-2024.09.30\nsoc-antivirus-2024.10.20\nsoc-antivirus-2024.10.23\nsoc-antivirus-2024.10.24\nsoc-antivirus-2024.10.21\nsoc-antivirus-2024.10.22\nsoc-antivirus-2024.10.27\nsoc-antivirus-2024.10.28\nsoc-antivirus-2024.10.25\nsoc-antivirus-2024.10.26\nsoc-antivirus-2022.12.24\nsoc-antivirus-2022.12.23\nsoc-antivirus-2022.12.22\nsoc-antivirus-2024.10.18\nsoc-antivirus-2022.12.21\nsoc-antivirus-2024.10.19\nsoc-antivirus-2022.12.20\nsoc-antivirus-2022.12.29\nsoc-antivirus-2022.12.28\nsoc-antivirus-2022.12.27\nsoc-antivirus-2022.12.26\nsoc-antivirus-2022.12.25\nsoc-antivirus-2024.09.20\nsoc-antivirus-2024.09.21\nsoc-antivirus-2024.09.22\nsoc-antivirus-2024.10.12\nsoc-antivirus-2024.10.13\nsoc-antivirus-2024.10.10\nsoc-antivirus-2024.10.11\nsoc-antivirus-2024.10.16\nsoc-antivirus-2024.10.17\nsoc-antivirus-2024.10.14\nsoc-antivirus-2024.10.15\nsoc-antivirus-2023.12.07\nsoc-antivirus-2022.12.13\nsoc-antivirus-2024.10.09\nsoc-antivirus-2022.12.12\nsoc-antivirus-2023.12.06\nsoc-antivirus-2022.12.11\nsoc-antivirus-2023.12.09\nsoc-antivirus-2024.10.07\nsoc-antivirus-2023.12.08\nsoc-antivirus-2022.12.10\nsoc-antivirus-2024.10.08\nsoc-antivirus-2023.12.03\nsoc-antivirus-2023.12.02\nsoc-antivirus-2023.12.05\nsoc-antivirus-2023.12.04\nsoc-antivirus-2024.09.23\nsoc-antivirus-2024.09.24\nsoc-antivirus-2023.12.01\nsoc-antivirus-2024.09.25\nsoc-antivirus-2022.12.19\nsoc-antivirus-2024.09.26\nsoc-antivirus-2022.12.18\nsoc-antivirus-2022.12.17\nsoc-antivirus-2024.09.27\nsoc-antivirus-2024.09.28\nsoc-antivirus-2022.12.16\nsoc-antivirus-2024.09.29\nsoc-antivirus-2022.12.15\nsoc-antivirus-2022.12.14\nsoc-antivirus-2022.12.02\nsoc-antivirus-2022.12.01\nsoc-antivirus-2022.12.09\nsoc-antivirus-2023.10.30\nsoc-antivirus-2022.12.08\nsoc-antivirus-2023.10.31\nsoc-antivirus-2022.12.07\nsoc-antivirus-2022.12.06\nsoc-antivirus-2022.12.05\nsoc-antivirus-2022.12.04\nsoc-antivirus-2022.12.03\nsoc-antivirus-2024.10.30\nsoc-antivirus-2024.10.31\nsoc-antivirus-2024.10.29\nsoc-antivirus-2021.12.01\nsoc-antivirus-2021.12.02\nsoc-antivirus-2021.12.03\nsoc-antivirus-2021.12.04\nsoc-antivirus-2021.12.05\nsoc-antivirus-2021.12.06\nsoc-antivirus-2021.12.07\nsoc-antivirus-2021.12.08\nsoc-antivirus-2021.12.09\nsoc-antivirus-2021.03.12\nsoc-antivirus-2021.03.11\nsoc-antivirus-2021.03.10\nsoc-antivirus-2021.03.16\nsoc-antivirus-2021.03.15\nsoc-antivirus-2021.03.14\nsoc-antivirus-2021.03.13\nsoc-antivirus-2022.07.26\nsoc-antivirus-2021.03.19\nsoc-antivirus-2022.07.25\nsoc-antivirus-2021.03.18\nsoc-antivirus-2022.07.24\nsoc-antivirus-2021.03.17\nsoc-antivirus-2022.07.23\nsoc-antivirus-2022.07.29\nsoc-antivirus-2022.07.28\nsoc-antivirus-2022.07.27\nsoc-antivirus-2024.06.05\nsoc-antivirus-2024.06.04\nsoc-antivirus-2024.06.03\nsoc-antivirus-2024.06.02\nsoc-antivirus-2021.10.22_123\nsoc-antivirus-2022.07.22\nsoc-antivirus-2024.06.01\nsoc-antivirus-2022.07.21\nsoc-antivirus-2022.07.20\nsoc-antivirus-2023.12.31\nsoc-antivirus-2024.06.09\nsoc-antivirus-2024.06.08\nsoc-antivirus-2023.12.30\nsoc-antivirus-2024.06.07\nsoc-antivirus-2024.06.06\nsoc-antivirus-2021.03.01\nsoc-antivirus-2021.03.05\nsoc-antivirus-2021.03.04\nsoc-antivirus-2021.03.03\nsoc-antivirus-2021.03.02\nsoc-antivirus-2021.03.09\nsoc-antivirus-2021.03.08\nsoc-antivirus-2021.03.07\nsoc-antivirus-2021.03.06\nsoc-antivirus-2022.07.31\nsoc-antivirus-2022.07.30\nsoc-antivirus-2023.02.09\nsoc-antivirus-2023.02.08\nsoc-antivirus-2022.07.09\nsoc-antivirus-2023.02.07\nsoc-antivirus-2023.02.06\nsoc-antivirus-2023.02.05\nsoc-antivirus-2023.02.04\nsoc-antivirus-2023.02.03\nsoc-antivirus-2022.07.04\nsoc-antivirus-2023.02.02\nsoc-antivirus-2022.07.03\nsoc-antivirus-2023.02.01\nsoc-antivirus-2022.07.02\nsoc-antivirus-2022.07.01\nsoc-antivirus-2022.07.08\nsoc-antivirus-2022.07.07\nsoc-antivirus-2022.07.06\nsoc-antivirus-2022.07.05\nsoc-antivirus-2023.12.18\nsoc-antivirus-2024.06.27\nsoc-antivirus-2024.06.26\nsoc-antivirus-2023.12.17\nsoc-antivirus-2024.06.25\nsoc-antivirus-2023.12.19\nsoc-antivirus-2024.06.24\nsoc-antivirus-2023.12.14\nsoc-antivirus-2024.06.23\nsoc-antivirus-2024.06.22\nsoc-antivirus-2023.12.13\nsoc-antivirus-2023.12.16\nsoc-antivirus-2024.06.21\nsoc-antivirus-2024.06.20\nsoc-antivirus-2023.12.15\nsoc-antivirus-2023.12.10\nsoc-antivirus-2023.12.12\nsoc-antivirus-2023.12.11\nsoc-antivirus-2024.06.29\nsoc-antivirus-2024.06.28\nsoc-antivirus-2022.07.15\nsoc-antivirus-2022.07.14\nsoc-antivirus-2022.07.13\nsoc-antivirus-2022.07.12\nsoc-antivirus-2022.07.19\nsoc-antivirus-2022.07.18\nsoc-antivirus-2022.07.17\nsoc-antivirus-2022.07.16\nsoc-antivirus-2023.12.29\nsoc-antivirus-2024.06.16\nsoc-antivirus-2024.06.15\nsoc-antivirus-2023.12.28\nsoc-antivirus-2024.06.14\nsoc-antivirus-2024.06.13\nsoc-antivirus-2024.06.12\nsoc-antivirus-2023.12.25\nsoc-antivirus-2022.07.11\nsoc-antivirus-2024.06.11\nsoc-antivirus-2023.12.24\nsoc-antivirus-2022.07.10\nsoc-antivirus-2023.12.27\nsoc-antivirus-2024.06.10\nsoc-antivirus-2023.12.26\nsoc-antivirus-2023.12.21\nsoc-antivirus-2023.12.20\nsoc-antivirus-2023.12.23\nsoc-antivirus-2023.12.22\nsoc-antivirus-2024.06.19\nsoc-antivirus-2024.06.18\nsoc-antivirus-2024.06.17\nsoc-antivirus-2023.02.28\nsoc-antivirus-2023.02.27\nsoc-antivirus-2023.02.26\nsoc-antivirus-2023.02.25\nsoc-antivirus-2022.09.07\nsoc-antivirus-2023.02.24\nsoc-antivirus-2023.02.23\nsoc-antivirus-2022.09.08\nsoc-antivirus-2021.10.21_121\nsoc-antivirus-2023.02.22\nsoc-antivirus-2022.09.09\nsoc-antivirus-2023.02.21\nsoc-antivirus-2022.09.03\nsoc-antivirus-2023.02.20\nsoc-antivirus-2022.09.04\nsoc-antivirus-2022.09.05\nsoc-antivirus-2022.09.06\nsoc-antivirus-2022.09.01\nsoc-antivirus-2022.09.02\nsoc-antivirus-2022.10.07\nsoc-antivirus-2022.10.08\nsoc-antivirus-2022.10.05\nsoc-antivirus-2022.10.06\nsoc-antivirus-2022.10.03\nsoc-antivirus-2022.10.04\nsoc-antivirus-2022.10.01\nsoc-antivirus-2022.10.02\nsoc-antivirus-2023.02.19\nsoc-antivirus-2023.02.18\nsoc-antivirus-2023.02.17\nsoc-antivirus-2023.02.16\nsoc-antivirus-2023.02.15\nsoc-antivirus-2023.02.14\nsoc-antivirus-2023.02.13\nsoc-antivirus-2022.09.18\nsoc-antivirus-2024.06.30\nsoc-antivirus-2022.09.19\nsoc-antivirus-2023.02.12\nsoc-antivirus-2023.02.11\nsoc-antivirus-2023.02.10\nsoc-antivirus-2022.09.14\nsoc-antivirus-2022.09.15\nsoc-antivirus-2022.09.16\nsoc-antivirus-2022.09.17\nsoc-antivirus-2022.09.10\nsoc-antivirus-2022.09.11\nsoc-antivirus-2022.09.12\nsoc-antivirus-2022.09.13\nsoc-antivirus-2021.03.31\nsoc-antivirus-2024.08.08\nsoc-antivirus-2024.08.09\nsoc-antivirus-2024.08.01\nsoc-antivirus-2024.08.02\nsoc-antivirus-2024.08.03\nsoc-antivirus-2024.08.04\nsoc-antivirus-2021.03.30\nsoc-antivirus-2024.08.05\nsoc-antivirus-2024.08.06\nsoc-antivirus-2024.08.07\nsoc-antivirus-2021.03.23\nsoc-antivirus-2021.03.22\nsoc-antivirus-2021.03.21\nsoc-antivirus-2021.03.20\nsoc-antivirus-2021.03.27\nsoc-antivirus-2021.03.26\nsoc-antivirus-2021.03.25\nsoc-antivirus-2021.03.24\nsoc-antivirus-2021.03.29\nsoc-antivirus-2021.03.28\nsoc-antivirus-2022.05.09\nsoc-antivirus-2022.05.07\nsoc-antivirus-2022.05.08\nsoc-antivirus-2022.05.01\nsoc-antivirus-2022.05.02\nsoc-antivirus-2022.05.05\nsoc-antivirus-2022.05.06\nsoc-antivirus-2022.05.03\nsoc-antivirus-2022.05.04\nsoc-antivirus-2023.04.10\nsoc-antivirus-2023.04.11\nsoc-antivirus-2023.04.12\nsoc-antivirus-2023.04.13\nsoc-antivirus-2023.04.14\nsoc-antivirus-2023.04.15\nsoc-antivirus-2023.04.16\nsoc-antivirus-2023.04.17\nsoc-antivirus-2021.05.30\nsoc-antivirus-2023.04.18\nsoc-antivirus-2021.05.31\nsoc-antivirus-2023.04.19\nsoc-antivirus-2021.05.26\nsoc-antivirus-2021.05.27\nsoc-antivirus-2022.05.18\nsoc-antivirus-2021.05.28\nsoc-antivirus-2022.05.19\nsoc-antivirus-2021.05.29\nsoc-antivirus-2021.05.22\nsoc-antivirus-2021.05.23\nsoc-antivirus-2021.05.24\nsoc-antivirus-2021.05.25\nsoc-antivirus-2022.05.12\nsoc-antivirus-2022.05.13\nsoc-antivirus-2022.05.10\nsoc-antivirus-2022.05.11\nsoc-antivirus-2022.05.16\nsoc-antivirus-2022.05.17\nsoc-antivirus-2022.05.14\nsoc-antivirus-2022.05.15\nsoc-antivirus-2023.04.20\nsoc-antivirus-2023.04.21\nsoc-antivirus-2023.04.22\nsoc-antivirus-2023.04.23\nsoc-antivirus-2023.04.24\nsoc-antivirus-2023.04.25\nsoc-antivirus-2023.04.26\nsoc-antivirus-2023.04.27\nsoc-antivirus-2023.04.28\nsoc-antivirus-2021.05.20\nsoc-antivirus-2023.04.29\nsoc-antivirus-2021.05.21\nsoc-antivirus-2021.05.15\nsoc-antivirus-2021.05.16\nsoc-antivirus-2021.05.17\nsoc-antivirus-2021.05.18\nsoc-antivirus-2021.05.11\nsoc-antivirus-2021.05.12\nsoc-antivirus-2021.05.13\nsoc-antivirus-2021.05.14\nsoc-antivirus-2021.05.19\nsoc-antivirus-2024.04.02\nsoc-antivirus-2024.04.03\nsoc-antivirus-2024.04.01\nsoc-antivirus-2024.04.08\nsoc-antivirus-2024.04.09\nsoc-antivirus-2021.05.10\nsoc-antivirus-2024.04.06\nsoc-antivirus-2024.04.07\nsoc-antivirus-2024.04.04\nsoc-antivirus-2024.04.05\nsoc-antivirus-2021.05.04\nsoc-antivirus-2021.05.05\nsoc-antivirus-2021.05.06\nsoc-antivirus-2021.10.23_123\nsoc-antivirus-2021.05.07\nsoc-antivirus-2021.05.01\nsoc-antivirus-2021.05.02\nsoc-antivirus-2021.05.03\nsoc-antivirus-2021.05.08\nsoc-antivirus-2021.05.09\nsoc-antivirus-2023.04.01\nsoc-antivirus-2023.04.02\nsoc-antivirus-2023.04.03\nsoc-antivirus-2023.04.04\nsoc-antivirus-2023.04.05\nsoc-antivirus-2023.04.06\nsoc-antivirus-2023.04.07\nsoc-antivirus-2023.04.08\nsoc-antivirus-2023.04.09\nsoc-antivirus-2021.07.18\nsoc-antivirus-2021.07.17\nsoc-antivirus-2021.07.19\nsoc-antivirus-2021.07.14\nsoc-antivirus-2021.07.13\nsoc-antivirus-2021.07.16\nsoc-antivirus-2021.07.15\nsoc-antivirus-2024.04.24\nsoc-antivirus-2024.04.25\nsoc-antivirus-2024.04.22\nsoc-antivirus-2024.04.23\nsoc-antivirus-2024.04.20\nsoc-antivirus-2024.04.21\nsoc-antivirus-2021.07.10\nsoc-antivirus-2021.07.12\nsoc-antivirus-2021.07.11\nsoc-antivirus-2024.04.28\nsoc-antivirus-2024.04.29\nsoc-antivirus-2024.04.26\nsoc-antivirus-2024.04.27\nsoc-antivirus-2021.07.07\nsoc-antivirus-2021.07.06\nsoc-antivirus-2021.07.09\nsoc-antivirus-2021.07.08\nsoc-antivirus-2021.07.03\nsoc-antivirus-2021.07.02\nsoc-antivirus-2021.07.05\nsoc-antivirus-2021.07.04\nsoc-antivirus-2024.04.13\nsoc-antivirus-2024.04.14\nsoc-antivirus-2023.06.02\nsoc-antivirus-2024.04.11\nsoc-antivirus-2024.04.12\nsoc-antivirus-2023.06.01\nsoc-antivirus-2023.06.04\nsoc-antivirus-2023.06.03\nsoc-antivirus-2024.04.10\nsoc-antivirus-2023.06.06\nsoc-antivirus-2023.06.05\nsoc-antivirus-2023.06.08\nsoc-antivirus-2023.06.07\nsoc-antivirus-2024.04.19\nsoc-antivirus-2021.07.01\nsoc-antivirus-2023.06.09\nsoc-antivirus-2024.04.17\nsoc-antivirus-2024.04.18\nsoc-antivirus-2024.04.15\nsoc-antivirus-2024.04.16\nsoc-antivirus-2022.05.29\nsoc-antivirus-2022.05.23\nsoc-antivirus-2022.05.24\nsoc-antivirus-2022.05.21\nsoc-antivirus-2022.05.22\nsoc-antivirus-2022.05.27\nsoc-antivirus-2022.05.28\nsoc-antivirus-2022.05.25\nsoc-antivirus-2022.05.26\nsoc-antivirus-2023.04.30\nsoc-antivirus-2022.05.20\nsoc-antivirus-2022.05.30\nsoc-antivirus-2022.05.31\nsoc-antivirus-2024.04.30\nsoc-antivirus-2021.10.24_123\nsoc-antivirus-2021.08.29\nsoc-antivirus-2021.08.26\nsoc-antivirus-2021.08.25\nsoc-antivirus-2024.11.30\nsoc-antivirus-2021.08.28\nsoc-antivirus-2021.08.27\nsoc-antivirus-2023.06.30\nsoc-antivirus-2021.08.22\nsoc-antivirus-2021.08.21\nsoc-antivirus-2021.08.24\nsoc-antivirus-2021.08.23\nsoc-antivirus-2021.08.20\nsoc-antivirus-2021.08.19\nsoc-antivirus-2021.08.18\nsoc-antivirus-2021.08.15\nsoc-antivirus-2024.11.21\nsoc-antivirus-2021.08.14\nsoc-antivirus-2024.11.20\nsoc-antivirus-2021.08.17\nsoc-antivirus-2021.08.16\nsoc-antivirus-2024.11.25\nsoc-antivirus-2024.11.24\nsoc-antivirus-2024.11.23\nsoc-antivirus-2024.11.22\nsoc-antivirus-2024.11.29\nsoc-antivirus-2024.11.28\nsoc-antivirus-2024.11.27\nsoc-antivirus-2024.11.26\nsoc-antivirus-2024.11.19\nsoc-antivirus-2021.08.11\nsoc-antivirus-2021.08.10\nsoc-antivirus-2021.08.13\nsoc-antivirus-2021.08.12\nsoc-antivirus-2022.01.25\nsoc-antivirus-2021.08.08\nsoc-antivirus-2021.08.07\nsoc-antivirus-2022.01.26\nsoc-antivirus-2022.01.27\nsoc-antivirus-2021.08.09\nsoc-antivirus-2022.01.28\nsoc-antivirus-2022.01.29\nsoc-antivirus-2021.08.04\nsoc-antivirus-2021.08.03\nsoc-antivirus-2024.01.09\nsoc-antivirus-2021.08.06\nsoc-antivirus-2021.08.05\nsoc-antivirus-2022.01.20\nsoc-antivirus-2022.01.21\nsoc-antivirus-2022.01.22\nsoc-antivirus-2022.01.23\nsoc-antivirus-2022.01.24\nsoc-antivirus-2023.06.11\nsoc-antivirus-2023.06.10\nsoc-antivirus-2023.06.13\nsoc-antivirus-2024.01.11\nsoc-antivirus-2024.01.10\nsoc-antivirus-2023.06.12\nsoc-antivirus-2023.06.15\nsoc-antivirus-2023.06.14\nsoc-antivirus-2023.06.17\nsoc-antivirus-2023.06.16\nsoc-antivirus-2023.06.19\nsoc-antivirus-2024.01.17\nsoc-antivirus-2023.06.18\nsoc-antivirus-2024.01.16\nsoc-antivirus-2021.08.02\nsoc-antivirus-2024.01.19\nsoc-antivirus-2021.08.01\nsoc-antivirus-2024.01.18\nsoc-antivirus-2024.01.13\nsoc-antivirus-2024.01.12\nsoc-antivirus-2024.01.15\nsoc-antivirus-2024.01.14\nsoc-antivirus-2022.01.30\nsoc-antivirus-2022.01.31\nsoc-antivirus-2023.06.20\nsoc-antivirus-2023.06.22\nsoc-antivirus-2023.06.21\nsoc-antivirus-2023.06.24\nsoc-antivirus-2023.06.23\nsoc-antivirus-2023.06.26\nsoc-antivirus-2023.06.25\nsoc-antivirus-2023.06.28\nsoc-antivirus-2023.06.27\nsoc-antivirus-2024.01.06\nsoc-antivirus-2023.06.29\nsoc-antivirus-2024.01.05\nsoc-antivirus-2024.01.08\nsoc-antivirus-2024.01.07\nsoc-antivirus-2024.01.02\nsoc-antivirus-2024.01.01\nsoc-antivirus-2024.01.04\nsoc-antivirus-2024.01.03\nsoc-antivirus-2022.03.28\nsoc-antivirus-2022.03.27\nsoc-antivirus-2022.03.29\nsoc-antivirus-2022.03.20\nsoc-antivirus-2022.03.22\nsoc-antivirus-2022.03.21\nsoc-antivirus-2022.03.24\nsoc-antivirus-2022.03.23\nsoc-antivirus-2023.08.11\nsoc-antivirus-2022.03.26\nsoc-antivirus-2022.03.25\nsoc-antivirus-2023.08.10\nsoc-antivirus-2024.01.31\nsoc-antivirus-2023.08.13\nsoc-antivirus-2024.01.30\nsoc-antivirus-2023.08.12\nsoc-antivirus-2023.08.15\nsoc-antivirus-2023.08.14\nsoc-antivirus-2023.08.17\nsoc-antivirus-2023.08.16\nsoc-antivirus-2023.08.19\nsoc-antivirus-2023.08.18\nsoc-antivirus-2022.03.31\nsoc-antivirus-2022.03.30\nsoc-antivirus-2023.08.20\nsoc-antivirus-2023.08.22\nsoc-antivirus-2023.08.21\nsoc-antivirus-2024.01.20\nsoc-antivirus-2023.08.24\nsoc-antivirus-2023.08.23\nsoc-antivirus-2024.01.22\nsoc-antivirus-2023.08.26\nsoc-antivirus-2023.08.25\nsoc-antivirus-2024.01.21\nsoc-antivirus-2023.08.28\nsoc-antivirus-2023.08.27\nsoc-antivirus-2023.08.29\nsoc-antivirus-2024.01.28\nsoc-antivirus-2024.01.27\nsoc-antivirus-2024.01.29\nsoc-antivirus-2024.01.24\nsoc-antivirus-2024.01.23\nsoc-antivirus-2024.01.26\nsoc-antivirus-2024.01.25\nsoc-antivirus-2022.03.06\nsoc-antivirus-2022.03.05\nsoc-antivirus-2022.03.08\nsoc-antivirus-2022.03.07\nsoc-antivirus-2022.03.09\nsoc-antivirus-2022.03.02\nsoc-antivirus-2022.03.01\nsoc-antivirus-2022.03.04\nsoc-antivirus-2022.03.03\nsoc-antivirus-2022.03.17\nsoc-antivirus-2022.03.16\nsoc-antivirus-2022.03.19\nsoc-antivirus-2022.03.18\nsoc-antivirus-2022.03.11\nsoc-antivirus-2022.03.10\nsoc-antivirus-2022.03.13\nsoc-antivirus-2022.03.12\nsoc-antivirus-2022.03.15\nsoc-antivirus-2022.03.14\nsoc-antivirus-2023.08.02\nsoc-antivirus-2023.08.01\nsoc-antivirus-2023.08.04\nsoc-antivirus-2023.08.03\nsoc-antivirus-2023.08.06\nsoc-antivirus-2023.08.05\nsoc-antivirus-2023.08.08\nsoc-antivirus-2023.08.07\nsoc-antivirus-2023.08.09\nsoc-antivirus-2021.08.30\nsoc-antivirus-2024.08.20\nsoc-antivirus-2024.08.21\nsoc-antivirus-2022.11.11\nsoc-antivirus-2022.11.12\nsoc-antivirus-2022.11.10\nsoc-antivirus-2022.11.19\nsoc-antivirus-2024.08.22\nsoc-antivirus-2024.08.23\nsoc-antivirus-2024.08.24\nsoc-antivirus-2022.11.17\nsoc-antivirus-2024.08.25\nsoc-antivirus-2022.11.18\nsoc-antivirus-2024.08.26\nsoc-antivirus-2022.11.15\nsoc-antivirus-2022.11.16\nsoc-antivirus-2024.08.27\nsoc-antivirus-2024.08.28\nsoc-antivirus-2022.11.13\nsoc-antivirus-2024.08.29\nsoc-antivirus-2022.11.14\nsoc-antivirus-2024.08.10\nsoc-antivirus-2024.08.19\nsoc-antivirus-2022.11.01\nsoc-antivirus-2022.11.08\nsoc-antivirus-2024.08.11\nsoc-antivirus-2024.08.12\nsoc-antivirus-2022.11.09\nsoc-antivirus-2022.11.06\nsoc-antivirus-2024.08.13\nsoc-antivirus-2022.11.07\nsoc-antivirus-2024.08.14\nsoc-antivirus-2022.11.04\nsoc-antivirus-2024.08.15\nsoc-antivirus-2022.11.05\nsoc-antivirus-2024.08.16\nsoc-antivirus-2024.08.17\nsoc-antivirus-2022.11.02\nsoc-antivirus-2022.11.03\nsoc-antivirus-2024.08.18\nsoc-antivirus-2023.08.31\nsoc-antivirus-2023.08.30\nsoc-antivirus-2024.08.30\nsoc-antivirus-2024.08.31\nsoc-antivirus-2022.01.03\nsoc-antivirus-2022.01.04\nsoc-antivirus-2022.01.05\nsoc-antivirus-2022.01.06\nsoc-antivirus-2022.01.07\nsoc-antivirus-2022.01.08\nsoc-antivirus-2022.01.09\nsoc-antivirus-2022.01.01\nsoc-antivirus-2022.01.02\nsoc-antivirus-2023.11.27\nsoc-antivirus-2023.11.28\nsoc-antivirus-2023.11.29\nsoc-antivirus-2023.11.23\nsoc-antivirus-2023.11.24\nsoc-antivirus-2021.11.01\nsoc-antivirus-2023.11.25\nsoc-antivirus-2021.11.02\nsoc-antivirus-2023.11.26\nsoc-antivirus-2021.11.03\nsoc-antivirus-2021.11.04\nsoc-antivirus-2023.11.20\nsoc-antivirus-2021.11.05\nsoc-antivirus-2023.11.21\nsoc-antivirus-2021.11.06\nsoc-antivirus-2023.11.22\nsoc-antivirus-2021.11.07\nsoc-antivirus-2021.11.08\nsoc-antivirus-2021.11.09\nsoc-antivirus-2022.01.14\nsoc-antivirus-2022.01.15\nsoc-antivirus-2022.01.16\nsoc-antivirus-2022.01.17\nsoc-antivirus-2022.01.18\nsoc-antivirus-2022.01.19\nsoc-antivirus-2022.01.10\nsoc-antivirus-2022.01.11\nsoc-antivirus-2022.01.12\nsoc-antivirus-2022.01.13\nsoc-antivirus-2021.11.10\nsoc-antivirus-2021.11.11\nsoc-antivirus-2021.11.12\nsoc-antivirus-2021.11.13\nsoc-antivirus-2021.11.14\nsoc-antivirus-2021.11.15\nsoc-antivirus-2021.11.16\nsoc-antivirus-2021.11.17\nsoc-antivirus-2021.11.18\nsoc-antivirus-2021.11.19\nsoc-antivirus-2024.11.10\nsoc-antivirus-2024.11.14\nsoc-antivirus-2024.11.13\nsoc-antivirus-2024.11.12\nsoc-antivirus-2024.11.11\nsoc-antivirus-2024.11.18\nsoc-antivirus-2024.11.17\nsoc-antivirus-2024.11.16\nsoc-antivirus-2024.11.15\nsoc-antivirus-2023.11.05\nsoc-antivirus-2023.11.06\nsoc-antivirus-2024.11.09\nsoc-antivirus-2023.11.07\nsoc-antivirus-2024.11.08\nsoc-antivirus-2021.11.20\nsoc-antivirus-2023.11.08\nsoc-antivirus-2023.11.01\nsoc-antivirus-2021.11.21\nsoc-antivirus-2022.11.30\nsoc-antivirus-2023.11.02\nsoc-antivirus-2021.11.22\nsoc-antivirus-2023.11.03\nsoc-antivirus-2021.11.23\nsoc-antivirus-2023.11.04\nsoc-antivirus-2021.11.24\nsoc-antivirus-2021.11.25\nsoc-antivirus-2021.11.26\nsoc-antivirus-2021.11.27\nsoc-antivirus-2021.11.28\nsoc-antivirus-2021.11.29\nsoc-antivirus-2024.11.03\nsoc-antivirus-2024.11.02\nsoc-antivirus-2024.11.01\nsoc-antivirus-2023.11.09\nsoc-antivirus-2024.11.07\nsoc-antivirus-2024.11.06\nsoc-antivirus-2024.11.05\nsoc-antivirus-2024.11.04\nsoc-antivirus-2023.11.16\nsoc-antivirus-2022.11.22\nsoc-antivirus-2023.11.17\nsoc-antivirus-2022.11.23\nsoc-antivirus-2021.11.30\nsoc-antivirus-2022.11.20\nsoc-antivirus-2023.11.18\nsoc-antivirus-2022.11.21\nsoc-antivirus-2023.11.19\nsoc-antivirus-2023.11.12\nsoc-antivirus-2023.11.13\nsoc-antivirus-2023.11.14\nsoc-antivirus-2023.11.15\nsoc-antivirus-2022.11.28\nsoc-antivirus-2023.11.10\nsoc-antivirus-2023.11.11\nsoc-antivirus-2022.11.29\nsoc-antivirus-2022.11.26\nsoc-antivirus-2022.11.27\nsoc-antivirus-2022.11.24\nsoc-antivirus-2022.11.25"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.59",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "101025",
            "pluginname": "Elasticsearch Unrestricted Access Information Disclosure",
            "hostname": "",
            "port": "9202",
            "protocol": "tcp",
            "severity": "2",
            "description": "The Elasticsearch application running on the remote web server is affected by an information disclosure vulnerability due to a failure to restrict resources via authentication. An unauthenticated, remote attacker can exploit this to disclose sensitive information from the database.",
            "solution": "Enable native user authentication or integrate with an external user management system such as LDAP and Active Directory.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?d055e692\nhttp://www.nessus.org/u?b80612a1",
            "plugin_output": "Nessus detected an unprotected instance of Elasticsearch with the following indices :\nsoc-antivirus-2023.01.19\nsoc-antivirus-2023.01.17\nsoc-antivirus-2023.01.18\nsoc-antivirus-2023.01.15\nsoc-antivirus-2023.01.16\nsoc-antivirus-2023.01.13\nsoc-antivirus-2023.01.14\nsoc-antivirus-2023.01.11\nsoc-antivirus-2023.01.12\nsoc-antivirus-2023.01.10\nsoc-antivirus-2024.05.30\nsoc-antivirus-2024.05.31\nsoc-antivirus-2023.01.08\nsoc-antivirus-2023.01.09\nsoc-antivirus-2023.01.06\nsoc-antivirus-2023.01.07\nsoc-antivirus-2023.01.04\nsoc-antivirus-2023.01.05\nsoc-antivirus-2023.01.02\nsoc-antivirus-2023.01.03\nsoc-antivirus-2022.08.05\nsoc-antivirus-2022.08.04\nsoc-antivirus-2023.01.01\nsoc-antivirus-2022.08.03\nsoc-antivirus-2022.08.02\nsoc-antivirus-2022.08.09\nsoc-antivirus-2022.08.08\nsoc-antivirus-2022.08.07\nsoc-antivirus-2022.08.06\nsoc-antivirus-2024.05.25\nsoc-antivirus-2024.05.26\nsoc-antivirus-2024.05.23\nsoc-antivirus-2024.05.24\nsoc-antivirus-2024.05.21\nsoc-antivirus-2022.08.01\nsoc-antivirus-2024.05.22\nsoc-antivirus-2024.05.20\nsoc-antivirus-2024.05.29\nsoc-antivirus-2024.05.27\nsoc-antivirus-2024.05.28\nsoc-antivirus-2023.01.31\nsoc-antivirus-2023.01.30\n.kibana_log_1\nsoc-antivirus-2022.06.30\nsoc-antivirus-2023.01.28\nsoc-antivirus-2023.01.29\nsoc-antivirus-2023.01.26\nsoc-antivirus-2023.01.27\nsoc-antivirus-2023.01.24\nsoc-antivirus-2023.01.25\nsoc-antivirus-2023.01.22\nsoc-antivirus-2023.01.23\nsoc-antivirus-2023.01.20\nsoc-antivirus-2023.01.21\nsoc-antivirus-2021.04.24\nsoc-antivirus-2021.04.23\nsoc-antivirus-2021.04.22\nsoc-antivirus-2021.04.21\nsoc-antivirus-2021.04.28\nsoc-antivirus-2021.04.27\nsoc-antivirus-2021.04.26\nsoc-antivirus-2021.04.25\nsoc-antivirus-2021.04.29\nsoc-antivirus-2022.08.30\nsoc-antivirus-2024.07.17\nsoc-antivirus-2024.07.16\nsoc-antivirus-2024.07.15\nsoc-antivirus-2024.07.14\nsoc-antivirus-2024.07.13\nsoc-antivirus-2024.07.12\nsoc-antivirus-2024.07.11\nsoc-antivirus-2024.07.10\nsoc-antivirus-2022.08.31\nsoc-antivirus-2021.04.20\nsoc-antivirus-2024.07.19\nsoc-antivirus-2024.07.18\nsoc-antivirus-2021.04.13\nsoc-antivirus-2021.04.12\nsoc-antivirus-2021.04.11\nsoc-antivirus-2021.04.10\nsoc-antivirus-2021.04.17\nsoc-antivirus-2021.04.16\nsoc-antivirus-2021.04.15\nsoc-antivirus-2021.04.14\nsoc-antivirus-2021.04.19\nsoc-antivirus-2021.04.18\nsoc-antivirus-2024.07.06\nsoc-antivirus-2024.07.05\nsoc-antivirus-2024.07.04\nsoc-antivirus-2024.07.03\nsoc-antivirus-2024.07.02\nsoc-antivirus-2024.07.01\nsoc-antivirus-2024.07.09\nsoc-antivirus-2024.07.08\nsoc-antivirus-2024.07.07\nsoc-antivirus-2021.04.02\nsoc-antivirus-2021.04.01\nsoc-antivirus-2023.03.19\nsoc-antivirus-2023.03.18\nsoc-antivirus-2021.04.06\nsoc-antivirus-2021.04.05\nsoc-antivirus-2023.03.17\nsoc-antivirus-2023.03.16\nsoc-antivirus-2021.04.04\nsoc-antivirus-2023.03.15\nsoc-antivirus-2021.04.03\nsoc-antivirus-2022.08.16\nsoc-antivirus-2023.03.14\nsoc-antivirus-2024.07.31\nsoc-antivirus-2021.04.09\nsoc-antivirus-2022.08.15\nsoc-antivirus-2024.07.30\nsoc-antivirus-2023.03.13\nsoc-antivirus-2021.04.08\nsoc-antivirus-2023.03.12\nsoc-antivirus-2022.08.14\nsoc-antivirus-2021.04.07\nsoc-antivirus-2022.08.13\nsoc-antivirus-2023.03.11\nsoc-antivirus-2023.03.10\nsoc-antivirus-2022.08.19\nsoc-antivirus-2022.08.18\nsoc-antivirus-2022.08.17\nsoc-antivirus-2022.08.12\nsoc-antivirus-2022.08.11\nsoc-antivirus-2022.08.10\nsoc-antivirus-2023.03.09\nsoc-antivirus-2023.03.08\nsoc-antivirus-2023.03.07\nsoc-antivirus-2023.03.06\nsoc-antivirus-2023.03.05\nsoc-antivirus-2023.03.04\nsoc-antivirus-2024.07.20\nsoc-antivirus-2022.08.27\nsoc-antivirus-2023.03.03\nsoc-antivirus-2023.03.02\nsoc-antivirus-2022.08.26\nsoc-antivirus-2023.03.01\nsoc-antivirus-2022.08.25\nsoc-antivirus-2022.08.24\n.kibana_1\nsoc-antivirus-2022.08.29\nsoc-antivirus-2022.08.28\nsoc-antivirus-2024.07.28\nsoc-antivirus-2024.07.27\nsoc-antivirus-2024.07.26\nsoc-antivirus-2024.07.25\nsoc-antivirus-2024.07.24\nsoc-antivirus-2022.08.23\nsoc-antivirus-2024.07.23\nsoc-antivirus-2022.08.22\nsoc-antivirus-2024.07.22\nsoc-antivirus-2022.08.21\nsoc-antivirus-2022.08.20\nsoc-antivirus-2024.07.21\nsoc-antivirus-2024.07.29\nsoc-antivirus-2021.06.05\nsoc-antivirus-2021.06.06\nsoc-antivirus-2021.06.07\nsoc-antivirus-2021.06.08\nsoc-antivirus-2021.06.01\nsoc-antivirus-2021.06.02\nsoc-antivirus-2021.06.03\nsoc-antivirus-2021.06.04\nsoc-antivirus-2021.06.09\nsoc-antivirus-2023.03.31\nsoc-antivirus-2023.03.30\nsoc-antivirus-2024.03.11\nsoc-antivirus-2024.03.10\nsoc-antivirus-2024.03.13\nsoc-antivirus-2024.03.12\nsoc-antivirus-2022.04.30\nsoc-antivirus-2024.03.19\nsoc-antivirus-2024.03.18\nsoc-antivirus-2024.03.15\nsoc-antivirus-2024.03.14\nsoc-antivirus-2024.03.17\nsoc-antivirus-2024.03.16\nsoc-antivirus-2023.03.29\nsoc-antivirus-2023.03.28\nsoc-antivirus-2023.03.27\nsoc-antivirus-2023.03.26\nsoc-antivirus-2023.03.25\nsoc-antivirus-2023.03.24\nsoc-antivirus-2023.03.23\nsoc-antivirus-2023.03.22\nsoc-antivirus-2023.03.21\nsoc-antivirus-2023.03.20\nsoc-antivirus-2024.03.02\nsoc-antivirus-2024.03.01\nsoc-antivirus-2024.03.08\nsoc-antivirus-2024.03.07\nsoc-antivirus-2024.03.09\nsoc-antivirus-2024.03.04\nsoc-antivirus-2024.03.03\nsoc-antivirus-2024.03.06\nsoc-antivirus-2024.03.05\nsoc-antivirus-2022.04.18\nsoc-antivirus-2022.04.17\nsoc-antivirus-2022.04.19\nsoc-antivirus-2022.04.10\nsoc-antivirus-2022.04.12\nsoc-antivirus-2022.04.11\nsoc-antivirus-2022.04.14\nsoc-antivirus-2022.04.13\nsoc-antivirus-2022.04.16\nsoc-antivirus-2022.04.15\nsoc-antivirus-2024.03.31\nsoc-antivirus-2024.03.30\nsoc-antivirus-2022.04.29\nsoc-antivirus-2022.04.28\nsoc-antivirus-2022.04.21\nsoc-antivirus-2022.04.20\nsoc-antivirus-2022.04.23\nsoc-antivirus-2022.04.22\nsoc-antivirus-2022.04.25\nsoc-antivirus-2022.04.24\nsoc-antivirus-2022.04.27\nsoc-antivirus-2022.04.26\nsoc-antivirus-2024.03.22\nsoc-antivirus-2024.03.21\nsoc-antivirus-2024.03.24\nsoc-antivirus-2024.03.23\nsoc-antivirus-2024.03.20\nsoc-antivirus-2024.03.29\nsoc-antivirus-2024.03.26\nsoc-antivirus-2021.04.30\nsoc-antivirus-2024.03.25\nsoc-antivirus-2024.03.28\nsoc-antivirus-2024.03.27\nsoc-antivirus-2022.06.19\nsoc-antivirus-2022.06.13\nsoc-antivirus-2022.06.14\nsoc-antivirus-2022.06.11\nsoc-antivirus-2022.06.12\nsoc-antivirus-2022.06.17\nsoc-antivirus-2022.06.18\nsoc-antivirus-2022.06.15\nsoc-antivirus-2022.06.16\nsoc-antivirus-2023.05.20\nsoc-antivirus-2023.05.21\nsoc-antivirus-2023.05.22\nsoc-antivirus-2023.05.23\nsoc-antivirus-2023.05.24\nsoc-antivirus-2023.05.25\nsoc-antivirus-2022.06.10\nsoc-antivirus-2023.05.26\nsoc-antivirus-2023.05.27\nsoc-antivirus-2023.05.28\nsoc-antivirus-2023.05.29\nsoc-antivirus-2022.06.24\nsoc-antivirus-2022.06.25\nsoc-antivirus-2022.06.22\nsoc-antivirus-2022.06.23\nsoc-antivirus-2022.06.28\nsoc-antivirus-2022.06.29\nsoc-antivirus-2022.06.26\nsoc-antivirus-2022.06.27\nsoc-antivirus-2023.05.30\nsoc-antivirus-2023.05.31\nsoc-antivirus-2022.06.20\nsoc-antivirus-2022.06.21\nsoc-antivirus-2021.06.30\nsoc-antivirus-2021.06.27\nsoc-antivirus-2021.06.28\nsoc-antivirus-2021.06.29\nsoc-antivirus-2021.06.23\nsoc-antivirus-2021.06.24\nsoc-antivirus-2021.06.25\nsoc-antivirus-2021.06.26\nsoc-antivirus-2024.05.14\nsoc-antivirus-2024.05.15\nsoc-antivirus-2024.05.12\nsoc-antivirus-2024.05.13\nsoc-antivirus-2023.05.01\nsoc-antivirus-2023.05.02\nsoc-antivirus-2024.05.10\nsoc-antivirus-2021.10.18_121\nsoc-antivirus-2023.05.03\nsoc-antivirus-2024.05.11\nsoc-antivirus-2023.05.04\nsoc-antivirus-2023.05.05\nsoc-antivirus-2023.05.06\nsoc-antivirus-2021.06.20\nsoc-antivirus-2023.05.07\nsoc-antivirus-2021.06.21\nsoc-antivirus-2023.05.08\nsoc-antivirus-2023.05.09\nsoc-antivirus-2021.06.22\nsoc-antivirus-2024.05.18\nsoc-antivirus-2024.05.19\nsoc-antivirus-2024.05.16\nsoc-antivirus-2024.05.17\nsoc-antivirus-2021.06.16\nsoc-antivirus-2021.06.17\nsoc-antivirus-2021.06.18\nsoc-antivirus-2022.06.08\nsoc-antivirus-2021.06.19\nsoc-antivirus-2022.06.09\nsoc-antivirus-2021.06.12\nsoc-antivirus-2021.06.13\nsoc-antivirus-2021.06.14\nsoc-antivirus-2021.06.15\nsoc-antivirus-2022.06.02\nsoc-antivirus-2022.06.03\nsoc-antivirus-2022.06.01\nsoc-antivirus-2022.06.06\nsoc-antivirus-2022.06.07\nsoc-antivirus-2022.06.04\nsoc-antivirus-2022.06.05\nsoc-antivirus-2024.05.03\nsoc-antivirus-2023.05.10\nsoc-antivirus-2024.05.04\nsoc-antivirus-2024.05.01\nsoc-antivirus-2023.05.11\nsoc-antivirus-2024.05.02\nsoc-antivirus-2023.05.12\nsoc-antivirus-2023.05.13\nsoc-antivirus-2023.05.14\nsoc-antivirus-2023.05.15\nsoc-antivirus-2023.05.16\nsoc-antivirus-2023.05.17\nsoc-antivirus-2023.05.18\nsoc-antivirus-2023.05.19\nsoc-antivirus-2021.06.10\nsoc-antivirus-2024.05.09\nsoc-antivirus-2021.06.11\nsoc-antivirus-2024.05.07\nsoc-antivirus-2024.05.08\nsoc-antivirus-2024.05.05\nsoc-antivirus-2024.05.06\nsoc-antivirus-2022.02.16\nsoc-antivirus-2022.02.15\nsoc-antivirus-2022.02.18\nsoc-antivirus-2022.02.17\nsoc-antivirus-2022.02.19\nsoc-antivirus-2024.12.04\nsoc-antivirus-2024.12.03\nsoc-antivirus-2024.12.02\nsoc-antivirus-2022.02.10\nsoc-antivirus-2024.12.01\nsoc-antivirus-2024.12.08\nsoc-antivirus-2022.02.12\nsoc-antivirus-2024.12.07\nsoc-antivirus-2022.02.11\nsoc-antivirus-2024.12.06\nsoc-antivirus-2022.02.14\nsoc-antivirus-2024.12.05\nsoc-antivirus-2022.02.13\nsoc-antivirus-2023.07.01\nsoc-antivirus-2023.07.03\nsoc-antivirus-2023.07.02\nsoc-antivirus-2023.07.05\nsoc-antivirus-2023.07.04\nsoc-antivirus-2023.07.07\nsoc-antivirus-2023.07.06\nsoc-antivirus-2023.07.09\nsoc-antivirus-2023.07.08\napi\nsoc-antivirus-2022.02.27\nsoc-antivirus-2022.02.26\nsoc-antivirus-2022.02.28\nsoc-antivirus-2022.02.21\nsoc-antivirus-2022.02.20\nsoc-antivirus-2022.02.23\nsoc-antivirus-2022.02.22\nsoc-antivirus-2022.02.25\nsoc-antivirus-2023.07.10\nsoc-antivirus-2022.02.24\nsoc-antivirus-2023.07.12\nsoc-antivirus-2023.07.11\nsoc-antivirus-2023.07.14\nsoc-antivirus-2023.07.13\nsoc-antivirus-2023.07.16\nsoc-antivirus-2023.07.15\nsoc-antivirus-2023.07.18\nsoc-antivirus-2023.07.17\nsoc-antivirus-2023.07.19\nsoc-antivirus-2021.07.31\nsoc-antivirus-2021.07.30\nsoc-antivirus-2021.07.29\nsoc-antivirus-2022.02.05\nsoc-antivirus-2022.02.04\nsoc-antivirus-2021.07.28\nsoc-antivirus-2022.02.07\nsoc-antivirus-2022.02.06\nsoc-antivirus-2022.02.09\nsoc-antivirus-2021.07.25\nsoc-antivirus-2024.12.11\nsoc-antivirus-2022.02.08\nsoc-antivirus-2021.07.24\nsoc-antivirus-2024.12.10\nsoc-antivirus-2021.07.27\nsoc-antivirus-2021.07.26\nsoc-antivirus-2024.12.15\nsoc-antivirus-2024.12.14\nsoc-antivirus-2024.12.13\nsoc-antivirus-2024.12.12\nsoc-antivirus-2022.02.01\nsoc-antivirus-2024.12.18\nsoc-antivirus-2024.12.17\nsoc-antivirus-2022.02.03\nsoc-antivirus-2022.02.02\nsoc-antivirus-2024.12.16\nsoc-antivirus-2024.12.09\nsoc-antivirus-2022.12.31\nsoc-antivirus-2022.12.30\nsoc-antivirus-2021.07.21\nsoc-antivirus-2021.07.20\nsoc-antivirus-2021.07.23\nsoc-antivirus-2021.07.22\nsoc-antivirus-2021.10.29\nsoc-antivirus-2021.10.28\nsoc-antivirus-2021.10.27\nsoc-antivirus-2021.10.26\nsoc-antivirus-2021.10.25\nsoc-antivirus-2021.10.24\nsoc-antivirus-2021.10.23\nsoc-antivirus-2021.10.22\nsoc-antivirus-2021.10.21\nsoc-antivirus-2021.10.20\nsoc-antivirus-2024.02.01\nsoc-antivirus-2024.02.07\nsoc-antivirus-2024.02.06\nsoc-antivirus-2024.02.09\nsoc-antivirus-2024.02.08\nsoc-antivirus-2024.02.03\nsoc-antivirus-2021.09.30\nsoc-antivirus-2024.02.02\nsoc-antivirus-2024.02.05\nsoc-antivirus-2024.02.04\nsoc-antivirus-2022.04.07\nsoc-antivirus-2022.04.06\nsoc-antivirus-2021.10.19\nsoc-antivirus-2022.04.09\nsoc-antivirus-2021.10.18\nsoc-antivirus-2021.10.17\nsoc-antivirus-2022.04.08\nsoc-antivirus-2021.09.27\nsoc-antivirus-2021.10.16\nsoc-antivirus-2021.10.15\nsoc-antivirus-2021.09.26\nsoc-antivirus-2021.09.29\nsoc-antivirus-2021.10.14\nsoc-antivirus-2021.09.28\nsoc-antivirus-2021.10.13\nsoc-antivirus-2021.10.12\nsoc-antivirus-2021.10.11\nsoc-antivirus-2022.04.01\nsoc-antivirus-2021.10.10\nsoc-antivirus-2022.04.03\nsoc-antivirus-2022.04.02\nsoc-antivirus-2022.04.05\nsoc-antivirus-2022.04.04\nsoc-antivirus-2021.09.23\nsoc-antivirus-2021.09.22\nsoc-antivirus-2021.09.25\nsoc-antivirus-2021.09.24\nsoc-antivirus-2021.09.21\nsoc-antivirus-2021.09.20\nsoc-antivirus-2021.10.09\nsoc-antivirus-2021.10.08\nsoc-antivirus-2021.09.19\nsoc-antivirus-2021.10.07\nsoc-antivirus-2021.10.06\nsoc-antivirus-2021.09.16\nsoc-antivirus-2021.10.05\nsoc-antivirus-2021.09.15\nsoc-antivirus-2021.10.04\nsoc-antivirus-2021.09.18\nsoc-antivirus-2021.10.03\nsoc-antivirus-2021.10.02\nsoc-antivirus-2021.09.17\nsoc-antivirus-2021.10.01\nsoc-antivirus-2023.07.21\nsoc-antivirus-2023.07.20\nsoc-antivirus-2024.02.21\nsoc-antivirus-2023.07.23\nsoc-antivirus-2023.07.22\nsoc-antivirus-2024.02.20\nsoc-antivirus-2023.07.25\nsoc-antivirus-2024.02.23\nsoc-antivirus-2023.07.24\nsoc-antivirus-2024.02.22\nsoc-antivirus-2023.07.27\nsoc-antivirus-2023.07.26\nsoc-antivirus-2023.07.29\nsoc-antivirus-2023.07.28\nsoc-antivirus-2024.02.29\nsoc-antivirus-2021.09.12\nsoc-antivirus-2021.09.11\nsoc-antivirus-2024.02.28\nsoc-antivirus-2021.09.14\nsoc-antivirus-2021.09.13\nsoc-antivirus-2024.02.25\nsoc-antivirus-2024.02.24\nsoc-antivirus-2021.09.10\nsoc-antivirus-2024.02.27\nsoc-antivirus-2024.02.26\nsoc-antivirus-2021.09.09\nsoc-antivirus-2021.09.08\nsoc-antivirus-2021.09.05\nsoc-antivirus-2021.09.04\nsoc-antivirus-2021.09.07\nsoc-antivirus-2021.09.06\nsoc-antivirus-2023.07.30\nsoc-antivirus-2023.07.31\nsoc-antivirus-2024.02.10\nsoc-antivirus-2024.02.12\nsoc-antivirus-2024.02.11\nsoc-antivirus-2024.02.18\nsoc-antivirus-2021.09.01\nsoc-antivirus-2024.02.17\nsoc-antivirus-2021.09.03\nsoc-antivirus-2021.09.02\nsoc-antivirus-2024.02.19\nsoc-antivirus-2024.02.14\nsoc-antivirus-2024.02.13\nsoc-antivirus-2024.02.16\nsoc-antivirus-2024.02.15\nsoc-antivirus-2023.09.22\nsoc-antivirus-2023.10.08\nsoc-antivirus-2023.10.09\nsoc-antivirus-2023.09.23\nsoc-antivirus-2023.09.20\nsoc-antivirus-2023.09.21\nsoc-antivirus-2023.09.26\nsoc-antivirus-2023.10.15\nsoc-antivirus-2023.09.27\nsoc-antivirus-2023.10.16\nsoc-antivirus-2023.09.24\nsoc-antivirus-2023.10.17\nsoc-antivirus-2023.09.25\nsoc-antivirus-2023.10.18\nsoc-antivirus-2021.12.10\nsoc-antivirus-2023.10.11\nsoc-antivirus-2021.12.11\nsoc-antivirus-2023.10.12\nsoc-antivirus-2021.12.12\nsoc-antivirus-2021.12.13\nsoc-antivirus-2023.10.13\nsoc-antivirus-2023.09.28\nsoc-antivirus-2023.10.14\nsoc-antivirus-2021.12.14\nsoc-antivirus-2023.09.29\nsoc-antivirus-2021.12.15\nsoc-antivirus-2021.12.16\nsoc-antivirus-2021.12.17\nsoc-antivirus-2023.10.10\nsoc-antivirus-2021.12.18\nsoc-antivirus-2021.12.19\nsoc-antivirus-2023.09.30\nsoc-antivirus-2023.10.19\nsoc-antivirus-2023.10.26\nsoc-antivirus-2023.10.27\nsoc-antivirus-2022.10.30\nsoc-antivirus-2021.12.20\nsoc-antivirus-2023.10.28\nsoc-antivirus-2021.12.21\nsoc-antivirus-2023.10.29\nsoc-antivirus-2022.10.31\nsoc-antivirus-2023.10.22\nsoc-antivirus-2021.12.22\nsoc-antivirus-2023.10.23\nsoc-antivirus-2021.12.23\nsoc-antivirus-2021.12.24\nsoc-antivirus-2023.10.24\nsoc-antivirus-2021.12.25\nsoc-antivirus-2023.10.25\nsoc-antivirus-2021.12.26\nsoc-antivirus-2021.12.27\nsoc-antivirus-2023.10.20\nsoc-antivirus-2021.12.28\nsoc-antivirus-2021.12.29\nsoc-antivirus-2023.10.21\nsoc-antivirus-2021.10.20_121\nsoc-antivirus-2024.09.10\nsoc-antivirus-2024.09.11\nsoc-antivirus-2022.09.29\nsoc-antivirus-2024.10.01\nsoc-antivirus-2024.10.02\nsoc-antivirus-2022.09.25\nsoc-antivirus-2024.10.05\nsoc-antivirus-2023.09.01\nsoc-antivirus-2024.10.06\nsoc-antivirus-2022.09.26\nsoc-antivirus-2022.09.27\nsoc-antivirus-2024.10.03\nsoc-antivirus-2022.09.28\nsoc-antivirus-2024.10.04\nsoc-antivirus-2022.09.21\nsoc-antivirus-2023.09.04\nsoc-antivirus-2022.10.21\nsoc-antivirus-2022.09.22\nsoc-antivirus-2022.10.22\nsoc-antivirus-2021.12.30\nsoc-antivirus-2023.09.05\nsoc-antivirus-2023.09.02\nsoc-antivirus-2022.09.23\nsoc-antivirus-2021.12.31\nsoc-antivirus-2022.10.20\nsoc-antivirus-2022.09.24\nsoc-antivirus-2023.09.03\nsoc-antivirus-2023.09.08\nsoc-antivirus-2023.09.09\nsoc-antivirus-2023.09.06\nsoc-antivirus-2023.09.07\nsoc-antivirus-2022.09.20\nsoc-antivirus-2024.09.12\nsoc-antivirus-2022.10.29\nsoc-antivirus-2024.09.13\nsoc-antivirus-2024.09.14\nsoc-antivirus-2022.10.27\nsoc-antivirus-2022.10.28\nsoc-antivirus-2024.09.15\nsoc-antivirus-2022.10.25\nsoc-antivirus-2024.09.16\nsoc-antivirus-2022.10.26\nsoc-antivirus-2024.09.17\nsoc-antivirus-2024.09.18\nsoc-antivirus-2022.10.23\nsoc-antivirus-2022.10.24\nsoc-antivirus-2024.09.19\nsoc-antivirus-2022.10.09\nsoc-antivirus-2021.10.31\nsoc-antivirus-2023.09.11\nsoc-antivirus-2021.10.30\nsoc-antivirus-2023.09.12\nsoc-antivirus-2023.09.10\nsoc-antivirus-2024.09.09\nsoc-antivirus-2023.09.15\nsoc-antivirus-2023.10.04\nsoc-antivirus-2022.10.10\nsoc-antivirus-2023.10.05\nsoc-antivirus-2022.10.11\nsoc-antivirus-2023.09.16\nsoc-antivirus-2023.09.13\nsoc-antivirus-2023.10.06\nsoc-antivirus-2023.10.07\nsoc-antivirus-2023.09.14\nsoc-antivirus-2023.09.19\nsoc-antivirus-2023.10.01\nsoc-antivirus-2023.09.17\nsoc-antivirus-2023.10.02\nsoc-antivirus-2022.09.30\nsoc-antivirus-2023.09.18\nsoc-antivirus-2023.10.03\nsoc-antivirus-2024.09.01\nsoc-antivirus-2022.10.18\nsoc-antivirus-2022.10.19\nsoc-antivirus-2024.09.02\nsoc-antivirus-2024.09.03\nsoc-antivirus-2022.10.16\nsoc-antivirus-2024.09.04\nsoc-antivirus-2022.10.17\nsoc-antivirus-2022.10.14\nsoc-antivirus-2024.09.05\nsoc-antivirus-2022.10.15\nsoc-antivirus-2024.09.06\nsoc-antivirus-2024.09.07\nsoc-antivirus-2022.10.12\nsoc-antivirus-2022.10.13\nsoc-antivirus-2024.09.08\nsoc-antivirus-2024.09.30\nsoc-antivirus-2024.10.20\nsoc-antivirus-2024.10.23\nsoc-antivirus-2024.10.24\nsoc-antivirus-2024.10.21\nsoc-antivirus-2024.10.22\nsoc-antivirus-2024.10.27\nsoc-antivirus-2024.10.28\nsoc-antivirus-2024.10.25\nsoc-antivirus-2024.10.26\nsoc-antivirus-2022.12.24\nsoc-antivirus-2022.12.23\nsoc-antivirus-2022.12.22\nsoc-antivirus-2024.10.18\nsoc-antivirus-2022.12.21\nsoc-antivirus-2024.10.19\nsoc-antivirus-2022.12.20\nsoc-antivirus-2022.12.29\nsoc-antivirus-2022.12.28\nsoc-antivirus-2022.12.27\nsoc-antivirus-2022.12.26\nsoc-antivirus-2022.12.25\nsoc-antivirus-2024.09.20\nsoc-antivirus-2024.09.21\nsoc-antivirus-2024.09.22\nsoc-antivirus-2024.10.12\nsoc-antivirus-2024.10.13\nsoc-antivirus-2024.10.10\nsoc-antivirus-2024.10.11\nsoc-antivirus-2024.10.16\nsoc-antivirus-2024.10.17\nsoc-antivirus-2024.10.14\nsoc-antivirus-2024.10.15\nsoc-antivirus-2024.10.09\nsoc-antivirus-2022.12.13\nsoc-antivirus-2023.12.07\nsoc-antivirus-2023.12.06\nsoc-antivirus-2022.12.12\nsoc-antivirus-2022.12.11\nsoc-antivirus-2024.10.07\nsoc-antivirus-2023.12.09\nsoc-antivirus-2023.12.08\nsoc-antivirus-2024.10.08\nsoc-antivirus-2022.12.10\nsoc-antivirus-2023.12.03\nsoc-antivirus-2023.12.02\nsoc-antivirus-2023.12.05\nsoc-antivirus-2023.12.04\nsoc-antivirus-2024.09.23\nsoc-antivirus-2024.09.24\nsoc-antivirus-2023.12.01\nsoc-antivirus-2024.09.25\nsoc-antivirus-2022.12.19\nsoc-antivirus-2022.12.18\nsoc-antivirus-2024.09.26\nsoc-antivirus-2024.09.27\nsoc-antivirus-2022.12.17\nsoc-antivirus-2022.12.16\nsoc-antivirus-2024.09.28\nsoc-antivirus-2022.12.15\nsoc-antivirus-2024.09.29\nsoc-antivirus-2022.12.14\nsoc-antivirus-2022.12.02\nsoc-antivirus-2022.12.01\nsoc-antivirus-2022.12.09\nsoc-antivirus-2023.10.30\nsoc-antivirus-2023.10.31\nsoc-antivirus-2022.12.08\nsoc-antivirus-2022.12.07\nsoc-antivirus-2022.12.06\nsoc-antivirus-2022.12.05\nsoc-antivirus-2022.12.04\nsoc-antivirus-2022.12.03\nsoc-antivirus-2024.10.30\nsoc-antivirus-2024.10.31\nsoc-antivirus-2024.10.29\nsoc-antivirus-2021.12.01\nsoc-antivirus-2021.12.02\nsoc-antivirus-2021.12.03\nsoc-antivirus-2021.12.04\nsoc-antivirus-2021.12.05\nsoc-antivirus-2021.12.06\nsoc-antivirus-2021.12.07\nsoc-antivirus-2021.12.08\nsoc-antivirus-2021.12.09\nsoc-antivirus-2021.03.12\nsoc-antivirus-2021.03.11\nsoc-antivirus-2021.03.10\nsoc-antivirus-2021.03.16\nsoc-antivirus-2021.03.15\nsoc-antivirus-2021.03.14\nsoc-antivirus-2021.03.13\nsoc-antivirus-2022.07.26\nsoc-antivirus-2022.07.25\nsoc-antivirus-2021.03.19\nsoc-antivirus-2022.07.24\nsoc-antivirus-2021.03.18\nsoc-antivirus-2021.03.17\nsoc-antivirus-2022.07.23\nsoc-antivirus-2022.07.29\nsoc-antivirus-2022.07.28\nsoc-antivirus-2022.07.27\nsoc-antivirus-2024.06.05\nsoc-antivirus-2024.06.04\nsoc-antivirus-2024.06.03\nsoc-antivirus-2024.06.02\nsoc-antivirus-2021.10.22_123\nsoc-antivirus-2022.07.22\nsoc-antivirus-2024.06.01\nsoc-antivirus-2022.07.21\nsoc-antivirus-2022.07.20\nsoc-antivirus-2023.12.31\nsoc-antivirus-2024.06.09\nsoc-antivirus-2024.06.08\nsoc-antivirus-2024.06.07\nsoc-antivirus-2023.12.30\nsoc-antivirus-2024.06.06\nsoc-antivirus-2021.03.01\nsoc-antivirus-2021.03.05\nsoc-antivirus-2021.03.04\nsoc-antivirus-2021.03.03\nsoc-antivirus-2021.03.02\nsoc-antivirus-2021.03.09\nsoc-antivirus-2021.03.08\nsoc-antivirus-2021.03.07\nsoc-antivirus-2021.03.06\nsoc-antivirus-2022.07.31\nsoc-antivirus-2022.07.30\nsoc-antivirus-2023.02.09\nsoc-antivirus-2023.02.08\nsoc-antivirus-2022.07.09\nsoc-antivirus-2023.02.07\nsoc-antivirus-2023.02.06\nsoc-antivirus-2023.02.05\nsoc-antivirus-2023.02.04\nsoc-antivirus-2023.02.03\nsoc-antivirus-2023.02.02\nsoc-antivirus-2022.07.04\nsoc-antivirus-2023.02.01\nsoc-antivirus-2022.07.03\nsoc-antivirus-2022.07.02\nsoc-antivirus-2022.07.01\nsoc-antivirus-2022.07.08\nsoc-antivirus-2022.07.07\nsoc-antivirus-2022.07.06\nsoc-antivirus-2022.07.05\nsoc-antivirus-2023.12.18\nsoc-antivirus-2024.06.27\nsoc-antivirus-2023.12.17\nsoc-antivirus-2024.06.26\nsoc-antivirus-2024.06.25\nsoc-antivirus-2023.12.19\nsoc-antivirus-2024.06.24\nsoc-antivirus-2023.12.14\nsoc-antivirus-2024.06.23\nsoc-antivirus-2023.12.13\nsoc-antivirus-2024.06.22\nsoc-antivirus-2023.12.16\nsoc-antivirus-2024.06.21\nsoc-antivirus-2023.12.15\nsoc-antivirus-2024.06.20\nsoc-antivirus-2023.12.10\nsoc-antivirus-2023.12.12\nsoc-antivirus-2023.12.11\nsoc-antivirus-2024.06.29\nsoc-antivirus-2024.06.28\nsoc-antivirus-2022.07.15\nsoc-antivirus-2022.07.14\nsoc-antivirus-2022.07.13\nsoc-antivirus-2022.07.12\nsoc-antivirus-2022.07.19\nsoc-antivirus-2022.07.18\nsoc-antivirus-2022.07.17\nsoc-antivirus-2022.07.16\nsoc-antivirus-2023.12.29\nsoc-antivirus-2024.06.16\nsoc-antivirus-2023.12.28\nsoc-antivirus-2024.06.15\nsoc-antivirus-2024.06.14\nsoc-antivirus-2024.06.13\nsoc-antivirus-2023.12.25\nsoc-antivirus-2022.07.11\nsoc-antivirus-2024.06.12\nsoc-antivirus-2022.07.10\nsoc-antivirus-2023.12.24\nsoc-antivirus-2024.06.11\nsoc-antivirus-2023.12.27\nsoc-antivirus-2024.06.10\nsoc-antivirus-2023.12.26\nsoc-antivirus-2023.12.21\nsoc-antivirus-2023.12.20\nsoc-antivirus-2023.12.23\nsoc-antivirus-2023.12.22\nsoc-antivirus-2024.06.19\nsoc-antivirus-2024.06.18\nsoc-antivirus-2024.06.17\nsoc-antivirus-2023.02.28\nsoc-antivirus-2023.02.27\nsoc-antivirus-2023.02.26\nsoc-antivirus-2023.02.25\nsoc-antivirus-2023.02.24\nsoc-antivirus-2022.09.07\nsoc-antivirus-2023.02.23\nsoc-antivirus-2022.09.08\nsoc-antivirus-2023.02.22\nsoc-antivirus-2022.09.09\nsoc-antivirus-2021.10.21_121\nsoc-antivirus-2023.02.21\nsoc-antivirus-2022.09.03\nsoc-antivirus-2023.02.20\nsoc-antivirus-2022.09.04\nsoc-antivirus-2022.09.05\nsoc-antivirus-2022.09.06\nsoc-antivirus-2022.09.01\nsoc-antivirus-2022.09.02\nsoc-antivirus-2022.10.07\nsoc-antivirus-2022.10.08\nsoc-antivirus-2022.10.05\nsoc-antivirus-2022.10.06\nsoc-antivirus-2022.10.03\nsoc-antivirus-2022.10.04\nsoc-antivirus-2022.10.01\nsoc-antivirus-2022.10.02\nsoc-antivirus-2023.02.19\nsoc-antivirus-2023.02.18\nsoc-antivirus-2023.02.17\nsoc-antivirus-2023.02.16\nsoc-antivirus-2023.02.15\nsoc-antivirus-2023.02.14\nsoc-antivirus-2022.09.18\nsoc-antivirus-2023.02.13\nsoc-antivirus-2024.06.30\nsoc-antivirus-2022.09.19\nsoc-antivirus-2023.02.12\nsoc-antivirus-2023.02.11\nsoc-antivirus-2023.02.10\nsoc-antivirus-2022.09.14\nsoc-antivirus-2022.09.15\nsoc-antivirus-2022.09.16\nsoc-antivirus-2022.09.17\nsoc-antivirus-2022.09.10\nsoc-antivirus-2022.09.11\nsoc-antivirus-2022.09.12\nsoc-antivirus-2022.09.13\nsoc-antivirus-2021.03.31\nsoc-antivirus-2024.08.08\nsoc-antivirus-2024.08.09\nsoc-antivirus-2024.08.01\nsoc-antivirus-2024.08.02\nsoc-antivirus-2024.08.03\nsoc-antivirus-2024.08.04\nsoc-antivirus-2021.03.30\nsoc-antivirus-2024.08.05\nsoc-antivirus-2024.08.06\nsoc-antivirus-2024.08.07\nsoc-antivirus-2021.03.23\nsoc-antivirus-2021.03.22\nsoc-antivirus-2021.03.21\nsoc-antivirus-2021.03.20\nsoc-antivirus-2021.03.27\nsoc-antivirus-2021.03.26\nsoc-antivirus-2021.03.25\nsoc-antivirus-2021.03.24\nsoc-antivirus-2021.03.29\nsoc-antivirus-2021.03.28\nsoc-antivirus-2022.05.09\nsoc-antivirus-2022.05.07\nsoc-antivirus-2022.05.08\nsoc-antivirus-2022.05.01\nsoc-antivirus-2022.05.02\nsoc-antivirus-2022.05.05\nsoc-antivirus-2022.05.06\nsoc-antivirus-2022.05.03\nsoc-antivirus-2022.05.04\nsoc-antivirus-2023.04.10\nsoc-antivirus-2023.04.11\nsoc-antivirus-2023.04.12\nsoc-antivirus-2023.04.13\nsoc-antivirus-2023.04.14\nsoc-antivirus-2023.04.15\nsoc-antivirus-2023.04.16\nsoc-antivirus-2021.05.30\nsoc-antivirus-2023.04.17\nsoc-antivirus-2021.05.31\nsoc-antivirus-2023.04.18\nsoc-antivirus-2023.04.19\nsoc-antivirus-2021.05.26\nsoc-antivirus-2021.05.27\nsoc-antivirus-2022.05.18\nsoc-antivirus-2021.05.28\nsoc-antivirus-2021.05.29\nsoc-antivirus-2022.05.19\nsoc-antivirus-2021.05.22\nsoc-antivirus-2021.05.23\nsoc-antivirus-2021.05.24\nsoc-antivirus-2021.05.25\nsoc-antivirus-2022.05.12\nsoc-antivirus-2022.05.13\nsoc-antivirus-2022.05.10\nsoc-antivirus-2022.05.11\nsoc-antivirus-2022.05.16\nsoc-antivirus-2022.05.17\nsoc-antivirus-2022.05.14\nsoc-antivirus-2022.05.15\nsoc-antivirus-2023.04.20\nsoc-antivirus-2023.04.21\nsoc-antivirus-2023.04.22\nsoc-antivirus-2023.04.23\nsoc-antivirus-2023.04.24\nsoc-antivirus-2023.04.25\nsoc-antivirus-2023.04.26\nsoc-antivirus-2023.04.27\nsoc-antivirus-2023.04.28\nsoc-antivirus-2023.04.29\nsoc-antivirus-2021.05.20\nsoc-antivirus-2021.05.21\nsoc-antivirus-2021.05.15\nsoc-antivirus-2021.05.16\nsoc-antivirus-2021.05.17\nsoc-antivirus-2021.05.18\nsoc-antivirus-2021.05.11\nsoc-antivirus-2021.05.12\nsoc-antivirus-2021.05.13\nsoc-antivirus-2021.05.14\nsoc-antivirus-2021.05.19\nsoc-antivirus-2024.04.02\nsoc-antivirus-2024.04.03\nsoc-antivirus-2024.04.01\nsoc-antivirus-2024.04.08\nsoc-antivirus-2024.04.09\nsoc-antivirus-2021.05.10\nsoc-antivirus-2024.04.06\nsoc-antivirus-2024.04.07\nsoc-antivirus-2024.04.04\nsoc-antivirus-2024.04.05\nsoc-antivirus-2021.05.04\nsoc-antivirus-2021.05.05\nsoc-antivirus-2021.10.23_123\nsoc-antivirus-2021.05.06\nsoc-antivirus-2021.05.07\nsoc-antivirus-2021.05.01\nsoc-antivirus-2021.05.02\nsoc-antivirus-2021.05.03\nsoc-antivirus-2021.05.08\nsoc-antivirus-2021.05.09\nsoc-antivirus-2023.04.01\nsoc-antivirus-2023.04.02\nsoc-antivirus-2023.04.03\nsoc-antivirus-2023.04.04\nsoc-antivirus-2023.04.05\nsoc-antivirus-2023.04.06\nsoc-antivirus-2023.04.07\nsoc-antivirus-2023.04.08\nsoc-antivirus-2023.04.09\nsoc-antivirus-2021.07.18\nsoc-antivirus-2021.07.17\nsoc-antivirus-2021.07.19\nsoc-antivirus-2021.07.14\nsoc-antivirus-2021.07.13\nsoc-antivirus-2021.07.16\nsoc-antivirus-2021.07.15\nsoc-antivirus-2024.04.24\nsoc-antivirus-2024.04.25\nsoc-antivirus-2024.04.22\nsoc-antivirus-2024.04.23\nsoc-antivirus-2024.04.20\nsoc-antivirus-2024.04.21\nsoc-antivirus-2021.07.10\nsoc-antivirus-2021.07.12\nsoc-antivirus-2021.07.11\nsoc-antivirus-2024.04.28\nsoc-antivirus-2024.04.29\nsoc-antivirus-2024.04.26\nsoc-antivirus-2024.04.27\nsoc-antivirus-2021.07.07\nsoc-antivirus-2021.07.06\nsoc-antivirus-2021.07.09\nsoc-antivirus-2021.07.08\nsoc-antivirus-2021.07.03\nsoc-antivirus-2021.07.02\nsoc-antivirus-2021.07.05\nsoc-antivirus-2021.07.04\nsoc-antivirus-2024.04.13\nsoc-antivirus-2024.04.14\nsoc-antivirus-2024.04.11\nsoc-antivirus-2023.06.02\nsoc-antivirus-2023.06.01\nsoc-antivirus-2024.04.12\nsoc-antivirus-2023.06.04\nsoc-antivirus-2023.06.03\nsoc-antivirus-2024.04.10\nsoc-antivirus-2023.06.06\nsoc-antivirus-2023.06.05\nsoc-antivirus-2023.06.08\nsoc-antivirus-2023.06.07\nsoc-antivirus-2021.07.01\nsoc-antivirus-2024.04.19\nsoc-antivirus-2023.06.09\nsoc-antivirus-2024.04.17\nsoc-antivirus-2024.04.18\nsoc-antivirus-2024.04.15\nsoc-antivirus-2024.04.16\nsoc-antivirus-2022.05.29\nsoc-antivirus-2022.05.23\nsoc-antivirus-2022.05.24\nsoc-antivirus-2022.05.21\nsoc-antivirus-2022.05.22\nsoc-antivirus-2022.05.27\nsoc-antivirus-2022.05.28\nsoc-antivirus-2022.05.25\nsoc-antivirus-2022.05.26\nsoc-antivirus-2023.04.30\nsoc-antivirus-2022.05.20\nsoc-antivirus-2022.05.30\nsoc-antivirus-2022.05.31\nsoc-antivirus-2024.04.30\nsoc-antivirus-2021.10.24_123\nsoc-antivirus-2021.08.29\nsoc-antivirus-2021.08.26\nsoc-antivirus-2021.08.25\nsoc-antivirus-2024.11.30\nsoc-antivirus-2021.08.28\nsoc-antivirus-2021.08.27\nsoc-antivirus-2023.06.30\nsoc-antivirus-2021.08.22\nsoc-antivirus-2021.08.21\nsoc-antivirus-2021.08.24\nsoc-antivirus-2021.08.23\nsoc-antivirus-2021.08.20\nsoc-antivirus-2021.08.19\nsoc-antivirus-2021.08.18\nsoc-antivirus-2024.11.21\nsoc-antivirus-2021.08.15\nsoc-antivirus-2021.08.14\nsoc-antivirus-2024.11.20\nsoc-antivirus-2021.08.17\nsoc-antivirus-2021.08.16\nsoc-antivirus-2024.11.25\nsoc-antivirus-2024.11.24\nsoc-antivirus-2024.11.23\nsoc-antivirus-2024.11.22\nsoc-antivirus-2024.11.29\nsoc-antivirus-2024.11.28\nsoc-antivirus-2024.11.27\nsoc-antivirus-2024.11.26\nsoc-antivirus-2024.11.19\nsoc-antivirus-2021.08.11\nsoc-antivirus-2021.08.10\nsoc-antivirus-2021.08.13\nsoc-antivirus-2021.08.12\nsoc-antivirus-2021.08.08\nsoc-antivirus-2022.01.25\nsoc-antivirus-2022.01.26\nsoc-antivirus-2021.08.07\nsoc-antivirus-2022.01.27\nsoc-antivirus-2021.08.09\nsoc-antivirus-2022.01.28\nsoc-antivirus-2022.01.29\nsoc-antivirus-2021.08.04\nsoc-antivirus-2024.01.09\nsoc-antivirus-2021.08.03\nsoc-antivirus-2021.08.06\nsoc-antivirus-2021.08.05\nsoc-antivirus-2022.01.20\nsoc-antivirus-2022.01.21\nsoc-antivirus-2022.01.22\nsoc-antivirus-2022.01.23\nsoc-antivirus-2022.01.24\nsoc-antivirus-2023.06.11\nsoc-antivirus-2023.06.10\nsoc-antivirus-2024.01.11\nsoc-antivirus-2023.06.13\nsoc-antivirus-2023.06.12\nsoc-antivirus-2024.01.10\nsoc-antivirus-2023.06.15\nsoc-antivirus-2023.06.14\nsoc-antivirus-2023.06.17\nsoc-antivirus-2023.06.16\nsoc-antivirus-2024.01.17\nsoc-antivirus-2023.06.19\nsoc-antivirus-2023.06.18\nsoc-antivirus-2024.01.16\nsoc-antivirus-2021.08.02\nsoc-antivirus-2024.01.19\nsoc-antivirus-2021.08.01\nsoc-antivirus-2024.01.18\nsoc-antivirus-2024.01.13\nsoc-antivirus-2024.01.12\nsoc-antivirus-2024.01.15\nsoc-antivirus-2024.01.14\nsoc-antivirus-2022.01.30\nsoc-antivirus-2022.01.31\nsoc-antivirus-2023.06.20\nsoc-antivirus-2023.06.22\nsoc-antivirus-2023.06.21\nsoc-antivirus-2023.06.24\nsoc-antivirus-2023.06.23\nsoc-antivirus-2023.06.26\nsoc-antivirus-2023.06.25\nsoc-antivirus-2023.06.28\nsoc-antivirus-2023.06.27\nsoc-antivirus-2024.01.06\nsoc-antivirus-2023.06.29\nsoc-antivirus-2024.01.05\nsoc-antivirus-2024.01.08\nsoc-antivirus-2024.01.07\nsoc-antivirus-2024.01.02\nsoc-antivirus-2024.01.01\nsoc-antivirus-2024.01.04\nsoc-antivirus-2024.01.03\nsoc-antivirus-2022.03.28\nsoc-antivirus-2022.03.27\nsoc-antivirus-2022.03.29\nsoc-antivirus-2022.03.20\nsoc-antivirus-2022.03.22\nsoc-antivirus-2022.03.21\nsoc-antivirus-2022.03.24\nsoc-antivirus-2022.03.23\nsoc-antivirus-2023.08.11\nsoc-antivirus-2022.03.26\nsoc-antivirus-2023.08.10\nsoc-antivirus-2022.03.25\nsoc-antivirus-2024.01.31\nsoc-antivirus-2023.08.13\nsoc-antivirus-2024.01.30\nsoc-antivirus-2023.08.12\nsoc-antivirus-2023.08.15\nsoc-antivirus-2023.08.14\nsoc-antivirus-2023.08.17\nsoc-antivirus-2023.08.16\nsoc-antivirus-2023.08.19\nsoc-antivirus-2023.08.18\nsoc-antivirus-2022.03.31\nsoc-antivirus-2022.03.30\nsoc-antivirus-2023.08.20\nsoc-antivirus-2023.08.22\nsoc-antivirus-2023.08.21\nsoc-antivirus-2024.01.20\nsoc-antivirus-2023.08.24\nsoc-antivirus-2023.08.23\nsoc-antivirus-2023.08.26\nsoc-antivirus-2024.01.22\nsoc-antivirus-2023.08.25\nsoc-antivirus-2024.01.21\nsoc-antivirus-2023.08.28\nsoc-antivirus-2023.08.27\nsoc-antivirus-2023.08.29\nsoc-antivirus-2024.01.28\nsoc-antivirus-2024.01.27\nsoc-antivirus-2024.01.29\nsoc-antivirus-2024.01.24\nsoc-antivirus-2024.01.23\nsoc-antivirus-2024.01.26\nsoc-antivirus-2024.01.25\nsoc-antivirus-2022.03.06\nsoc-antivirus-2022.03.05\nsoc-antivirus-2022.03.08\nsoc-antivirus-2022.03.07\nsoc-antivirus-2022.03.09\nsoc-antivirus-2022.03.02\nsoc-antivirus-2022.03.01\nsoc-antivirus-2022.03.04\nsoc-antivirus-2022.03.03\nsoc-antivirus-2022.03.17\nsoc-antivirus-2022.03.16\nsoc-antivirus-2022.03.19\nsoc-antivirus-2022.03.18\nsoc-antivirus-2022.03.11\nsoc-antivirus-2022.03.10\nsoc-antivirus-2022.03.13\nsoc-antivirus-2022.03.12\nsoc-antivirus-2022.03.15\nsoc-antivirus-2022.03.14\nsoc-antivirus-2023.08.02\nsoc-antivirus-2023.08.01\nsoc-antivirus-2023.08.04\nsoc-antivirus-2023.08.03\nsoc-antivirus-2023.08.06\nsoc-antivirus-2023.08.05\nsoc-antivirus-2023.08.08\nsoc-antivirus-2023.08.07\nsoc-antivirus-2023.08.09\nsoc-antivirus-2021.08.30\nsoc-antivirus-2024.08.20\nsoc-antivirus-2024.08.21\nsoc-antivirus-2022.11.11\nsoc-antivirus-2022.11.12\nsoc-antivirus-2022.11.10\nsoc-antivirus-2024.08.22\nsoc-antivirus-2022.11.19\nsoc-antivirus-2024.08.23\nsoc-antivirus-2022.11.17\nsoc-antivirus-2024.08.24\nsoc-antivirus-2024.08.25\nsoc-antivirus-2022.11.18\nsoc-antivirus-2022.11.15\nsoc-antivirus-2024.08.26\nsoc-antivirus-2022.11.16\nsoc-antivirus-2024.08.27\nsoc-antivirus-2024.08.28\nsoc-antivirus-2022.11.13\nsoc-antivirus-2022.11.14\nsoc-antivirus-2024.08.29\nsoc-antivirus-2024.08.10\nsoc-antivirus-2024.08.19\nsoc-antivirus-2022.11.01\nsoc-antivirus-2024.08.11\nsoc-antivirus-2022.11.08\nsoc-antivirus-2022.11.09\nsoc-antivirus-2024.08.12\nsoc-antivirus-2024.08.13\nsoc-antivirus-2022.11.06\nsoc-antivirus-2024.08.14\nsoc-antivirus-2022.11.07\nsoc-antivirus-2022.11.04\nsoc-antivirus-2024.08.15\nsoc-antivirus-2022.11.05\nsoc-antivirus-2024.08.16\nsoc-antivirus-2024.08.17\nsoc-antivirus-2022.11.02\nsoc-antivirus-2024.08.18\nsoc-antivirus-2022.11.03\nsoc-antivirus-2023.08.31\nsoc-antivirus-2023.08.30\nsoc-antivirus-2024.08.30\nsoc-antivirus-2024.08.31\nsoc-antivirus-2022.01.03\nsoc-antivirus-2022.01.04\nsoc-antivirus-2022.01.05\nsoc-antivirus-2022.01.06\nsoc-antivirus-2022.01.07\nsoc-antivirus-2022.01.08\nsoc-antivirus-2022.01.09\nsoc-antivirus-2022.01.01\nsoc-antivirus-2022.01.02\nsoc-antivirus-2023.11.27\nsoc-antivirus-2023.11.28\nsoc-antivirus-2023.11.29\nsoc-antivirus-2023.11.23\nsoc-antivirus-2023.11.24\nsoc-antivirus-2023.11.25\nsoc-antivirus-2021.11.01\nsoc-antivirus-2021.11.02\nsoc-antivirus-2023.11.26\nsoc-antivirus-2021.11.03\nsoc-antivirus-2023.11.20\nsoc-antivirus-2021.11.04\nsoc-antivirus-2023.11.21\nsoc-antivirus-2021.11.05\nsoc-antivirus-2023.11.22\nsoc-antivirus-2021.11.06\nsoc-antivirus-2021.11.07\nsoc-antivirus-2021.11.08\nsoc-antivirus-2021.11.09\nsoc-antivirus-2022.01.14\nsoc-antivirus-2022.01.15\nsoc-antivirus-2022.01.16\nsoc-antivirus-2022.01.17\nsoc-antivirus-2022.01.18\nsoc-antivirus-2022.01.19\nsoc-antivirus-2022.01.10\nsoc-antivirus-2022.01.11\nsoc-antivirus-2022.01.12\nsoc-antivirus-2022.01.13\nsoc-antivirus-2021.11.10\nsoc-antivirus-2021.11.11\nsoc-antivirus-2021.11.12\nsoc-antivirus-2021.11.13\nsoc-antivirus-2021.11.14\nsoc-antivirus-2021.11.15\nsoc-antivirus-2021.11.16\nsoc-antivirus-2021.11.17\nsoc-antivirus-2021.11.18\nsoc-antivirus-2021.11.19\nsoc-antivirus-2024.11.10\nsoc-antivirus-2024.11.14\nsoc-antivirus-2024.11.13\nsoc-antivirus-2024.11.12\nsoc-antivirus-2024.11.11\nsoc-antivirus-2024.11.18\nsoc-antivirus-2024.11.17\nsoc-antivirus-2024.11.16\nsoc-antivirus-2024.11.15\nsoc-antivirus-2023.11.05\nsoc-antivirus-2023.11.06\nsoc-antivirus-2023.11.07\nsoc-antivirus-2024.11.09\nsoc-antivirus-2023.11.08\nsoc-antivirus-2021.11.20\nsoc-antivirus-2024.11.08\nsoc-antivirus-2021.11.21\nsoc-antivirus-2023.11.01\nsoc-antivirus-2022.11.30\nsoc-antivirus-2023.11.02\nsoc-antivirus-2021.11.22\nsoc-antivirus-2021.11.23\nsoc-antivirus-2023.11.03\nsoc-antivirus-2023.11.04\nsoc-antivirus-2021.11.24\nsoc-antivirus-2021.11.25\nsoc-antivirus-2021.11.26\nsoc-antivirus-2021.11.27\nsoc-antivirus-2021.11.28\nsoc-antivirus-2021.11.29\nsoc-antivirus-2024.11.03\nsoc-antivirus-2024.11.02\nsoc-antivirus-2024.11.01\nsoc-antivirus-2023.11.09\nsoc-antivirus-2024.11.07\nsoc-antivirus-2024.11.06\nsoc-antivirus-2024.11.05\nsoc-antivirus-2024.11.04\nsoc-antivirus-2022.11.22\nsoc-antivirus-2023.11.16\nsoc-antivirus-2022.11.23\nsoc-antivirus-2023.11.17\nsoc-antivirus-2022.11.20\nsoc-antivirus-2021.11.30\nsoc-antivirus-2023.11.18\nsoc-antivirus-2022.11.21\nsoc-antivirus-2023.11.19\nsoc-antivirus-2023.11.12\nsoc-antivirus-2023.11.13\nsoc-antivirus-2023.11.14\nsoc-antivirus-2023.11.15\nsoc-antivirus-2022.11.28\nsoc-antivirus-2023.11.10\nsoc-antivirus-2023.11.11\nsoc-antivirus-2022.11.29\nsoc-antivirus-2022.11.26\nsoc-antivirus-2022.11.27\nsoc-antivirus-2022.11.24\nsoc-antivirus-2022.11.25"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.59",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.58",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "101025",
            "pluginname": "Elasticsearch Unrestricted Access Information Disclosure",
            "hostname": "",
            "port": "9200",
            "protocol": "tcp",
            "severity": "2",
            "description": "The Elasticsearch application running on the remote web server is affected by an information disclosure vulnerability due to a failure to restrict resources via authentication. An unauthenticated, remote attacker can exploit this to disclose sensitive information from the database.",
            "solution": "Enable native user authentication or integrate with an external user management system such as LDAP and Active Directory.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?d055e692\nhttp://www.nessus.org/u?b80612a1",
            "plugin_output": "Nessus detected an unprotected instance of Elasticsearch with the following indices :\nsoc-hackerurl-2024.12.19\nsoc-null-2024.12.19\nsoc-os-2024.12.19\nsoc-fw-2024.12.18_07\nsoc-fw-2024.12.18_08\nsoc-fw-2024.12.18_09\nsoc-fw-2024.12.18_20\nsoc-fw-2024.12.18_21\napi\nsoc-fw-2024.12.18_22\nsoc-fw-2024.12.18_23\nsoc-dns-2024.12.19\nsoc-2024.12.19\nsoc-waf-2024.12.19\nsoc-ids-2024.12.19\nsoc-ai-2024.12.19\nsoc-antivirus-2024.12.19\nsoc-fw-2024.12.19_07\nsoc-fw-2024.12.18_16\nsoc-fw-2024.12.18_17\nsoc-fw-2024.12.19_06\nsoc-fw-2024.12.18_18\nsoc-fw-2024.12.18_19\nsoc-proxy-2024.12.19\nsoc-fw-2024.12.19_01\nsoc-fw-2024.12.18_10\nsoc-fw-2024.12.18_11\nsoc-fw-2024.12.19_00\nsoc-fw-2024.12.18_12\nsoc-fw-2024.12.19_03\nsoc-fw-2024.12.18_13\nsoc-fw-2024.12.19_02\nsoc-fw-2024.12.18_14\nsoc-fw-2024.12.19_05\nsoc-fw-2024.12.19_04\nsoc-fw-2024.12.18_15"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.58",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.57",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "101025",
            "pluginname": "Elasticsearch Unrestricted Access Information Disclosure",
            "hostname": "",
            "port": "9201",
            "protocol": "tcp",
            "severity": "2",
            "description": "The Elasticsearch application running on the remote web server is affected by an information disclosure vulnerability due to a failure to restrict resources via authentication. An unauthenticated, remote attacker can exploit this to disclose sensitive information from the database.",
            "solution": "Enable native user authentication or integrate with an external user management system such as LDAP and Active Directory.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?d055e692\nhttp://www.nessus.org/u?b80612a1",
            "plugin_output": "Nessus detected an unprotected instance of Elasticsearch with the following indices :\nsoc-os-2024.12.19\nsoc-spam-2024.12.19\nsoc-antivirus-2024.05.31\napi\nsoc-antivirus-2024.06.09\nsoc-antivirus-2024.03.16\nsoc-waf-2024.12.19\nsoc-fw-2024.12.19_07\nsoc-antivirus-2024.08.19\nsoc-fw-2024.12.19_06\nsoc-fw-2024.12.19_09\nsoc-antivirus-2024.05.23\nsoc-antivirus-2024.03.02\nsoc-fw-2024.12.19_08\nsoc-soceps-2024.12.19\nsoc-apt-2024.12.19\nsoc-antivirus-2024.08.12\nsoc-antivirus-2024.03.07\nsoc-fw-2024.12.19_01\nsoc-antivirus-2024.03.09\nsoc-fw-2024.12.19_00\nsoc-fw-2024.12.19_03\nsoc-antivirus-2024.05.29\nsoc-fw-2024.12.19_02\nsoc-fw-2024.12.19_05\nsoc-fw-2024.12.19_04\nsoc-antivirus-2024.04.03\nsoc-antivirus-2024.03.31\nsoc-antivirus-2024.03.30\nsoc-fw-2024.12.19_10\nsoc-antivirus-2024.09.13\nsoc-fw-2024.12.19_12\nsoc-antivirus-2024.04.08\nsoc-edr-2024.12.19\nsoc-antivirus-2024.09.14\nsoc-fw-2024.12.19_11\nsoc-antivirus-2024.04.09\nsoc-antivirus-2024.04.06\nsoc-antivirus-2024.09.16\nsoc-fw-2024.12.19_14\nsoc-fw-2024.12.19_13\nsoc-fw-2024.12.19_16\nsoc-edr-2024.12.14\nsoc-fw-2024.12.19_15\nsoc-antivirus-2024.12.10\nsoc-ids-2024.12.19\nsoc-antivirus-2024.12.13\nsoc-antivirus-2024.12.19\nsoc-antivirus-2024.12.18\nsoc-antivirus-2024.03.23\nsoc-antivirus-2024.10.22\nsoc-esmeps-2024.12.19\nsoc-antivirus-2024.04.24\nsoc-antivirus-2024.04.25\nsoc-antivirus-2024.04.22\nsoc-antivirus-2024.04.23\nsoc-antivirus-2024.10.19\nsoc-antivirus-2024.04.20\nsoc-antivirus-2024.04.21\nsoc-antivirus-2024.02.03\nsoc-antivirus-2024.04.29\nsoc-antivirus-2024.04.26\nsoc-antivirus-2024.04.27\nsoc-antivirus-2024.04.13\nsoc-antivirus-2024.01.20\nsoc-antivirus-2024.04.14\nsoc-antivirus-2024.04.11\nsoc-antivirus-2024.04.12\nsoc-antivirus-2024.04.10\nsoc-antivirus-2024.01.27\nsoc-proxy-2024.12.19\nsoc-antivirus-2024.04.19\nsoc-antivirus-2024.04.18\nsoc-edr-2024.12.01\nsoc-antivirus-2024.04.15\nsoc-antivirus-2024.04.16\nsoc-antivirus-2024.05.14\nsoc-antivirus-2024.05.15\nsoc-antivirus-2024.05.13\nsoc-antivirus-2024.05.10\nsoc-antivirus-2024.05.11\nsoc-antivirus-2024.02.29\nsoc-antivirus-2024.02.28\nsoc-antivirus-2024.05.18\nsoc-antivirus-2024.02.24\nsoc-antivirus-2024.05.16\nsoc-antivirus-2024.05.17\nsoc-antivirus-2024.02.10\nsoc-antivirus-2024.05.04\nsoc-antivirus-2024.05.01\nsoc-antivirus-2024.05.02\nsoc-antivirus-2024.07.24\nsoc-antivirus-2024.07.23\nsoc-antivirus-2024.07.22\nsoc-antivirus-2024.07.21\nsoc-antivirus-2024.04.30\nsoc-antivirus-2024.02.17\nsoc-antivirus-2024.05.07\nsoc-antivirus-2024.05.08\nsoc-antivirus-2024.05.06"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.57",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "101025",
            "pluginname": "Elasticsearch Unrestricted Access Information Disclosure",
            "hostname": "",
            "port": "9200",
            "protocol": "tcp",
            "severity": "2",
            "description": "The Elasticsearch application running on the remote web server is affected by an information disclosure vulnerability due to a failure to restrict resources via authentication. An unauthenticated, remote attacker can exploit this to disclose sensitive information from the database.",
            "solution": "Enable native user authentication or integrate with an external user management system such as LDAP and Active Directory.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?d055e692\nhttp://www.nessus.org/u?b80612a1",
            "plugin_output": "Nessus detected an unprotected instance of Elasticsearch with the following indices :\nsoc-os-2024.12.19\nsoc-spam-2024.12.19\nsoc-antivirus-2024.05.31\napi\nsoc-antivirus-2024.06.09\nsoc-antivirus-2024.03.16\nsoc-waf-2024.12.19\nsoc-antivirus-2024.08.19\nsoc-fw-2024.12.19_07\nsoc-fw-2024.12.19_06\nsoc-antivirus-2024.05.23\nsoc-antivirus-2024.03.02\nsoc-fw-2024.12.19_09\nsoc-fw-2024.12.19_08\nsoc-soceps-2024.12.19\nsoc-apt-2024.12.19\nsoc-antivirus-2024.03.07\nsoc-antivirus-2024.08.12\nsoc-fw-2024.12.19_01\nsoc-fw-2024.12.19_00\nsoc-antivirus-2024.03.09\nsoc-antivirus-2024.05.29\nsoc-fw-2024.12.19_03\nsoc-fw-2024.12.19_02\nsoc-fw-2024.12.19_05\nsoc-fw-2024.12.19_04\nsoc-antivirus-2024.04.03\nsoc-antivirus-2024.03.31\nsoc-antivirus-2024.03.30\nsoc-fw-2024.12.19_10\nsoc-antivirus-2024.09.13\nsoc-antivirus-2024.09.14\nsoc-antivirus-2024.04.08\nsoc-edr-2024.12.19\nsoc-fw-2024.12.19_12\nsoc-fw-2024.12.19_11\nsoc-antivirus-2024.04.09\nsoc-antivirus-2024.04.06\nsoc-antivirus-2024.09.16\nsoc-fw-2024.12.19_14\nsoc-fw-2024.12.19_13\nsoc-fw-2024.12.19_16\nsoc-edr-2024.12.14\nsoc-fw-2024.12.19_15\nsoc-antivirus-2024.12.10\nsoc-ids-2024.12.19\nsoc-antivirus-2024.12.13\nsoc-antivirus-2024.12.19\nsoc-antivirus-2024.12.18\nsoc-antivirus-2024.03.23\nsoc-antivirus-2024.10.22\nsoc-esmeps-2024.12.19\nsoc-antivirus-2024.04.24\nsoc-antivirus-2024.04.25\nsoc-antivirus-2024.04.22\nsoc-antivirus-2024.10.19\nsoc-antivirus-2024.04.23\nsoc-antivirus-2024.04.20\nsoc-antivirus-2024.04.21\nsoc-antivirus-2024.02.03\nsoc-antivirus-2024.04.29\nsoc-antivirus-2024.04.26\nsoc-antivirus-2024.04.27\nsoc-antivirus-2024.04.13\nsoc-antivirus-2024.01.20\nsoc-antivirus-2024.04.14\nsoc-antivirus-2024.04.11\nsoc-antivirus-2024.04.12\nsoc-antivirus-2024.04.10\nsoc-proxy-2024.12.19\nsoc-antivirus-2024.01.27\nsoc-antivirus-2024.04.19\nsoc-antivirus-2024.04.18\nsoc-edr-2024.12.01\nsoc-antivirus-2024.04.15\nsoc-antivirus-2024.04.16\nsoc-antivirus-2024.05.14\nsoc-antivirus-2024.05.15\nsoc-antivirus-2024.05.13\nsoc-antivirus-2024.05.10\nsoc-antivirus-2024.05.11\nsoc-antivirus-2024.02.29\nsoc-antivirus-2024.02.28\nsoc-antivirus-2024.05.18\nsoc-antivirus-2024.02.24\nsoc-antivirus-2024.05.16\nsoc-antivirus-2024.05.17\nsoc-antivirus-2024.02.10\nsoc-antivirus-2024.05.04\nsoc-antivirus-2024.05.01\nsoc-antivirus-2024.05.02\nsoc-antivirus-2024.07.24\nsoc-antivirus-2024.07.23\nsoc-antivirus-2024.07.22\nsoc-antivirus-2024.07.21\nsoc-antivirus-2024.04.30\nsoc-antivirus-2024.02.17\nsoc-antivirus-2024.05.07\nsoc-antivirus-2024.05.08\nsoc-antivirus-2024.05.06"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.57",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.56",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.55",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.54",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.53",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.52",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.51",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.45",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "148367",
            "pluginname": "Python Unsupported Version Detection",
            "hostname": "",
            "port": "5555",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote host contains one or more unsupported versions of Python.\n\nLack of support implies that no new security patches for the product will be released by the vendor. As a result, it is likely to contain security vulnerabilities.",
            "solution": "Upgrade to a version of Python that is currently supported.",
            "cve": "",
            "cvss3": "10.0",
            "cvss2": "10.0",
            "see_also": "https://www.python.org/downloads/\nhttps://devguide.python.org/devcycle/",
            "plugin_output": "The following Python installation is unsupported :\nPath              : /\nPort              : 5555\nInstalled version : 3.8.3\nLatest version    : 3.10\nSupport dates     : 2024-10-14 (end of life)"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.45",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.44",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "148367",
            "pluginname": "Python Unsupported Version Detection",
            "hostname": "",
            "port": "5555",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote host contains one or more unsupported versions of Python.\n\nLack of support implies that no new security patches for the product will be released by the vendor. As a result, it is likely to contain security vulnerabilities.",
            "solution": "Upgrade to a version of Python that is currently supported.",
            "cve": "",
            "cvss3": "10.0",
            "cvss2": "10.0",
            "see_also": "https://www.python.org/downloads/\nhttps://devguide.python.org/devcycle/",
            "plugin_output": "The following Python installation is unsupported :\nPath              : /\nPort              : 5555\nInstalled version : 3.8.3\nLatest version    : 3.10\nSupport dates     : 2024-10-14 (end of life)"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.44",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.43",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "148367",
            "pluginname": "Python Unsupported Version Detection",
            "hostname": "",
            "port": "5555",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote host contains one or more unsupported versions of Python.\n\nLack of support implies that no new security patches for the product will be released by the vendor. As a result, it is likely to contain security vulnerabilities.",
            "solution": "Upgrade to a version of Python that is currently supported.",
            "cve": "",
            "cvss3": "10.0",
            "cvss2": "10.0",
            "see_also": "https://www.python.org/downloads/\nhttps://devguide.python.org/devcycle/",
            "plugin_output": "The following Python installation is unsupported :\nPath              : /\nPort              : 5555\nInstalled version : 3.8.3\nLatest version    : 3.10\nSupport dates     : 2024-10-14 (end of life)"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.43",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.40",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.39",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.38",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.37",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.36",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.35",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=syncdb/O=icd08a/OU=RD/E=acsi@acsi.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.35",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=syncdb/O=icd08a/OU=RD/E=acsi@acsi.com\n|-Issuer  : CN=syncdb/O=icd08a/OU=RD/E=acsi@acsi.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.35",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.34",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.33",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.32",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Some-State/L=Taipei/O=ACSI/OU=ICD08A/CN=10.27.8.32/E=jess.lin@acercsi.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.32",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=TW/ST=Some-State/L=Taipei/O=ACSI/OU=ICD08A/CN=10.27.8.32/E=jess.lin@acercsi.com\n|-Not After : Jan 02 06:33:35 2021 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Some-State/L=Taipei/O=ACSI/OU=ICD08A/CN=10.27.8.32/E=jess.lin@acercsi.com\n|-Issuer  : C=TW/ST=Some-State/L=Taipei/O=ACSI/OU=ICD08A/CN=10.27.8.32/E=jess.lin@acercsi.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.32",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=TW, ST=Some-State, L=Taipei, O=ACSI, OU=ICD08A, CN=10.27.8.32, emailAddress=jess.lin@acercsi.com\nIssuer           : C=TW, ST=Some-State, L=Taipei, O=ACSI, OU=ICD08A, CN=10.27.8.32, emailAddress=jess.lin@acercsi.com\nNot valid before : Jan  3 06:33:35 2020 GMT\nNot valid after  : Jan  2 06:33:35 2021 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.32",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.31",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.30",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.29",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.28",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "6443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.28",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.28",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "6443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=kube-apiserver\n|-Issuer  : CN=kubernetes"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.28",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=kube-apiserver\n|-Issuer  : CN=kubernetes"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.28",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.27",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "6443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.27",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.27",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "6443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=kube-apiserver\n|-Issuer  : CN=kubernetes"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.27",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=kube-apiserver\n|-Issuer  : CN=kubernetes"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.27",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.26",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "6443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.26",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.26",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "6443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=kube-apiserver\n|-Issuer  : CN=kubernetes"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.26",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=kube-apiserver\n|-Issuer  : CN=kubernetes"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.26",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.25",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "148367",
            "pluginname": "Python Unsupported Version Detection",
            "hostname": "",
            "port": "5555",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote host contains one or more unsupported versions of Python.\n\nLack of support implies that no new security patches for the product will be released by the vendor. As a result, it is likely to contain security vulnerabilities.",
            "solution": "Upgrade to a version of Python that is currently supported.",
            "cve": "",
            "cvss3": "10.0",
            "cvss2": "10.0",
            "see_also": "https://www.python.org/downloads/\nhttps://devguide.python.org/devcycle/",
            "plugin_output": "The following Python installation is unsupported :\nPath              : /\nPort              : 5555\nInstalled version : 3.8.3\nLatest version    : 3.10\nSupport dates     : 2024-10-14 (end of life)"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.25",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.24",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "148367",
            "pluginname": "Python Unsupported Version Detection",
            "hostname": "",
            "port": "5555",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote host contains one or more unsupported versions of Python.\n\nLack of support implies that no new security patches for the product will be released by the vendor. As a result, it is likely to contain security vulnerabilities.",
            "solution": "Upgrade to a version of Python that is currently supported.",
            "cve": "",
            "cvss3": "10.0",
            "cvss2": "10.0",
            "see_also": "https://www.python.org/downloads/\nhttps://devguide.python.org/devcycle/",
            "plugin_output": "The following Python installation is unsupported :\nPath              : /\nPort              : 5555\nInstalled version : 3.8.3\nLatest version    : 3.10\nSupport dates     : 2024-10-14 (end of life)"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.24",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.23",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "148367",
            "pluginname": "Python Unsupported Version Detection",
            "hostname": "",
            "port": "5555",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote host contains one or more unsupported versions of Python.\n\nLack of support implies that no new security patches for the product will be released by the vendor. As a result, it is likely to contain security vulnerabilities.",
            "solution": "Upgrade to a version of Python that is currently supported.",
            "cve": "",
            "cvss3": "10.0",
            "cvss2": "10.0",
            "see_also": "https://www.python.org/downloads/\nhttps://devguide.python.org/devcycle/",
            "plugin_output": "The following Python installation is unsupported :\nPath              : /\nPort              : 5555\nInstalled version : 3.8.3\nLatest version    : 3.10\nSupport dates     : 2024-10-14 (end of life)"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.23",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.22",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.21",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "10194",
            "pluginname": "HTTP Proxy POST Request Relaying",
            "hostname": "",
            "port": "3128",
            "protocol": "tcp",
            "severity": "2",
            "description": "The proxy allows the users to perform POST requests such as\n\n\tPOST http://cvs.nessus.org:21\n\nwithout any Content-length tag.\n\nThis request may give an attacker the ability to have an interactive session.\n\nThis problem may allow attackers to go through your firewall, by connecting to sensitive ports like 23 (telnet) using your proxy, or it can allow internal users to bypass the firewall rules and connect to ports they should not be allowed to.\n\nIn addition to that, your proxy may be used to perform attacks against other networks.",
            "solution": "Reconfigure your proxy so that only the users of the internal network can use it, and so that it can not connect to dangerous ports (1-1024).",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.8.21",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "12217",
            "pluginname": "DNS Server Cache Snooping Remote Information Disclosure",
            "hostname": "",
            "port": "53",
            "protocol": "udp",
            "severity": "2",
            "description": "The remote DNS server responds to queries for third-party domains that do not have the recursion bit set. \n\nThis may allow a remote attacker to determine which domains have recently been resolved via this name server, and therefore which hosts have been recently visited. \n\nFor instance, if an attacker was interested in whether your company utilizes the online services of a particular financial institution, they would be able to use this attack to build a statistical model regarding company usage of that financial institution.  Of course, the attack can also be used to find B2B partners, web-surfing patterns, external mail servers, and more.\n\nNote: If this is an internal DNS server not accessible to outside networks, attacks would be limited to the internal network. This may include employees, consultants and potentially users on a guest network or WiFi connection if supported.",
            "solution": "Contact the vendor of the DNS software for a fix.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://cs.unc.edu/~fabian/course_papers/cache_snooping.pdf",
            "plugin_output": "Nessus sent a non-recursive query for example.com\nand received 1 answer :\n93.184.215.14"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.21",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.19",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.18",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.17",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.16",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.15",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.14",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "6443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.14",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.14",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "6443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=kube-apiserver\n|-Issuer  : CN=kubernetes"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.14",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=kube-apiserver\n|-Issuer  : CN=kubernetes"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.14",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.13",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "6443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.13",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.13",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "6443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=kube-apiserver\n|-Issuer  : CN=kubernetes"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.13",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=kube-apiserver\n|-Issuer  : CN=kubernetes"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.13",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.12",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "6443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.12",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.12",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "6443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=kube-apiserver\n|-Issuer  : CN=kubernetes"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.12",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=kube-apiserver\n|-Issuer  : CN=kubernetes"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.12",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.11",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.9",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.8",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.7",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "101025",
            "pluginname": "Elasticsearch Unrestricted Access Information Disclosure",
            "hostname": "",
            "port": "9200",
            "protocol": "tcp",
            "severity": "2",
            "description": "The Elasticsearch application running on the remote web server is affected by an information disclosure vulnerability due to a failure to restrict resources via authentication. An unauthenticated, remote attacker can exploit this to disclose sensitive information from the database.",
            "solution": "Enable native user authentication or integrate with an external user management system such as LDAP and Active Directory.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?d055e692\nhttp://www.nessus.org/u?b80612a1",
            "plugin_output": "Nessus detected an unprotected instance of Elasticsearch with the following indices :\nhistory-conn-domain-20241108\nhistory-conn-domain-20241107\nhistory-conn-domain-20241109\nhistory-conn-domain-20240131\nhistory-conn-domain-20241102\nhistory-conn-domain-20241101\nhistory-conn-domain-20241104\nhistory-conn-domain-20241103\nhistory-conn-domain-20241106\nhistory-conn-domain-20241105\nhistory-conn-domain-20241120\nhistory-conn-domain-20241119\nhistory-conn-domain-20241118\nhistory-conn-domain-20241111\nhistory-conn-domain-20241110\nhistory-conn-domain-20241113\nhistory-conn-domain-20241112\nhistory-conn-domain-20241115\nhistory-conn-domain-20241114\nhistory-conn-domain-20241117\nhistory-conn-domain-20241116\nhistory-conn-domain-20241010\nhistory-conn-domain-20241130\n.internal.alerts-observability.apm.alerts-default-000001\nhistory-conn-domain-20241009\nhistory-conn-domain-20241008\nhistory-conn-domain-20241129\nhistory-conn-domain-20241122\nhistory-conn-domain-20241001\nhistory-conn-domain-20241121\nhistory-conn-domain-20241003\nhistory-conn-domain-20241124\nhistory-conn-domain-20241002\nhistory-conn-domain-20241123\nhistory-conn-domain-20241005\nhistory-conn-domain-20241126\nhistory-conn-domain-20241004\nhistory-conn-domain-20241125\nhistory-conn-domain-20241007\nhistory-conn-domain-20241128\nhistory-conn-domain-20241006\nhistory-conn-domain-20241127\nhistory-conn-ip-20241031\nhistory-conn-ip-20241030\nhistory-conn-domain-20241021\nhistory-conn-domain-20241020\nhistory-conn-domain-20241019\nhistory-conn-domain-20241012\nhistory-conn-ip-20241026\nhistory-conn-ip-20241025\nhistory-conn-domain-20241011\nhistory-conn-ip-20241028\nhistory-conn-domain-20241014\nhistory-conn-ip-20241027\nhistory-conn-domain-20241013\nhistory-conn-domain-20241016\nhistory-conn-ip-20241029\nhistory-conn-domain-20241015\nhistory-conn-domain-20241018\nhistory-conn-domain-20241017\nhistory-conn-ip-20241020\nhistory-conn-domain-20241030\nhistory-conn-ip-20241022\nhistory-conn-ip-20241021\nhistory-conn-ip-20241024\nhistory-conn-domain-20241031\nhistory-conn-ip-20241023\nhistory-conn-ip-20241015\nhistory-conn-domain-20241023\nhistory-conn-ip-20241014\nhistory-conn-domain-20241022\nhistory-conn-ip-20241017\nhistory-conn-domain-20241025\nhistory-conn-ip-20241016\nhistory-conn-domain-20241024\nhistory-conn-ip-20241019\nhistory-conn-domain-20241027\nhistory-conn-ip-20241018\nhistory-conn-domain-20241026\nhistory-conn-domain-20241029\nhistory-conn-domain-20241028\nhistory-conn-ip-20241130\nhistory-conn-ip-20241011\nhistory-conn-ip-20241010\nhistory-conn-ip-20241013\nhistory-conn-ip-20241012\nhistory-conn-ip-20241004\nhistory-conn-ip-20241125\nhistory-conn-ip-20241124\nhistory-conn-ip-20241003\nhistory-conn-ip-20241006\nhistory-conn-ip-20241127\nhistory-conn-ip-20241005\nhistory-conn-ip-20241126\nhistory-conn-ip-20241129\nhistory-conn-ip-20241008\nhistory-conn-ip-20241007\nhistory-conn-ip-20241128\nhistory-conn-ip-20241009\nhistory-conn-ip-20241121\nhistory-conn-ip-20241120\nhistory-conn-ip-20241123\nhistory-conn-ip-20241002\nhistory-conn-ip-20241001\nhistory-conn-ip-20241122\n.internal.alerts-ml.anomaly-detection-health.alerts-default-000001\nhistory-conn-ip-20241114\nhistory-conn-ip-20241113\nhistory-conn-ip-20241116\nhistory-conn-ip-20241115\nhistory-conn-ip-20241118\nhistory-conn-ip-20241117\nhistory-conn-ip-20241119\nhistory-conn-ip-20241110\nhistory-conn-ip-20241112\nhistory-conn-ip-20241111\nhistory-conn-ip-20241103\nhistory-conn-ip-20241102\nhistory-conn-ip-20241105\nhistory-conn-ip-20241104\nhistory-conn-ip-20241107\nhistory-conn-ip-20241106\nhistory-conn-ip-20241109\nhistory-conn-ip-20241108\nhistory-conn-domain-20240414\nhistory-conn-ip-20240802\nhistory-conn-ip-20240923\nhistory-conn-domain-20240415\nhistory-conn-ip-20240924\nhistory-conn-ip-20240803\nhistory-conn-domain-20240416\nhistory-conn-ip-20240804\nhistory-conn-ip-20240925\nhistory-conn-domain-20240417\nhistory-conn-ip-20240926\nhistory-conn-ip-20240805\nhistory-conn-ip-20240927\nhistory-conn-domain-20240418\nhistory-conn-ip-20240806\nhistory-conn-ip-20240928\nhistory-conn-domain-20240419\nhistory-conn-ip-20240807\nhistory-conn-ip-20240929\nhistory-conn-ip-20240808\nhistory-conn-ip-20240809\nhistory-conn-domain-20240530\nhistory-conn-domain-20240410\nhistory-conn-domain-20240531\nhistory-conn-domain-20240411\nhistory-conn-ip-20240920\nhistory-conn-domain-20240412\nhistory-conn-ip-20240921\nhistory-conn-domain-20240413\nhistory-conn-ip-20240801\nhistory-conn-ip-20240922\nhistory-conn-ip-20240912\nhistory-conn-domain-20240425\nhistory-conn-domain-20240304\nhistory-conn-domain-20240305\nhistory-conn-domain-20240426\nhistory-conn-domain-20240306\nhistory-conn-domain-20240427\nhistory-conn-ip-20240914\nhistory-conn-ip-20240915\nhistory-conn-domain-20240428\nhistory-conn-domain-20240307\nhistory-conn-domain-20240429\nhistory-conn-domain-20240308\nhistory-conn-ip-20240916\nhistory-conn-domain-20240309\nhistory-conn-ip-20240917\nhistory-conn-ip-20240918\nhistory-conn-ip-20240919\nhistory-conn-domain-20240420\nhistory-conn-domain-20240421\nhistory-conn-domain-20240422\nhistory-conn-domain-20240301\nhistory-conn-domain-20240423\nhistory-conn-ip-20240910\nhistory-conn-domain-20240302\nhistory-conn-domain-20240424\nhistory-conn-ip-20240911\nhistory-conn-domain-20240303\nhistory-conn-ip-20240909\nhistory-conn-domain-20240315\nhistory-conn-ip-20240901\nhistory-conn-domain-20240316\nhistory-conn-ip-20240902\nhistory-conn-ip-20240903\nhistory-conn-domain-20240317\nhistory-conn-domain-20240318\nhistory-conn-ip-20240904\nhistory-conn-ip-20240905\nhistory-conn-domain-20240319\nhistory-conn-ip-20240906\nhistory-conn-ip-20240907\nhistory-conn-ip-20240908\n.internal.alerts-security.alerts-default-000001\nhistory-conn-domain-20240430\nhistory-conn-domain-20240310\nhistory-conn-domain-20240311\nhistory-conn-domain-20240312\nhistory-conn-domain-20240313\nhistory-conn-domain-20240314\nhistory-conn-domain-20240326\nhistory-conn-domain-20240205\nhistory-conn-domain-20240327\nhistory-conn-domain-20240206\nhistory-conn-domain-20240328\nhistory-conn-domain-20240207\nhistory-conn-domain-20240329\nhistory-conn-domain-20240208\nhistory-conn-domain-20240209\nhistory-conn-domain-20240320\nhistory-conn-domain-20240321\nhistory-conn-domain-20240322\nhistory-conn-domain-20240201\nhistory-conn-domain-20240202\nhistory-conn-domain-20240323\nhistory-conn-domain-20240324\nhistory-conn-domain-20240203\nhistory-conn-domain-20240325\nhistory-conn-domain-20240204\nhistory-conn-domain-20240216\n.internal.alerts-observability.metrics.alerts-default-000001\nhistory-conn-domain-20240217\nhistory-conn-domain-20240218\nhistory-conn-domain-20240219\nhistory-conn-domain-20240330\nhistory-conn-domain-20240210\nhistory-conn-domain-20240331\nhistory-conn-domain-20240211\nhistory-conn-domain-20240212\nhistory-conn-domain-20240213\nhistory-conn-domain-20240214\nhistory-conn-domain-20240215\nhistory-conn-domain-20240227\nhistory-conn-domain-20240228\nhistory-conn-domain-20240229\n.internal.alerts-observability.threshold.alerts-default-000001\nhistory-conn-domain-20240220\nhistory-conn-domain-20240221\nhistory-conn-domain-20240222\nhistory-conn-domain-20240223\nhistory-conn-domain-20240224\nhistory-conn-domain-20240225\nhistory-conn-domain-20240226\n.internal.alerts-default.alerts-default-000001\nhistory-conn-domain-20241207\nhistory-conn-domain-20241206\nhistory-conn-domain-20241209\nhistory-conn-domain-20241208\nhistory-conn-domain-20241201\nhistory-conn-domain-20241203\nhistory-conn-domain-20241202\nhistory-conn-domain-20241205\nhistory-conn-domain-20241204\nhistory-conn-domain-20240130\nhistory-conn-domain-20241218\nhistory-conn-domain-20240128\nhistory-conn-domain-20241217\nhistory-conn-domain-20240129\nhistory-conn-domain-20241210\nhistory-conn-domain-20241212\nhistory-conn-domain-20241211\nhistory-conn-domain-20241214\nhistory-conn-domain-20240125\nhistory-conn-domain-20241213\nhistory-conn-domain-20240126\nhistory-conn-domain-20241216\nhistory-conn-domain-20240127\nhistory-conn-domain-20241215\nhistory-conn-domain-20240818\nhistory-conn-domain-20240819\nhistory-conn-ip-20240527\nhistory-conn-domain-20240810\nhistory-conn-ip-20240406\nhistory-conn-domain-20240811\nhistory-conn-ip-20240407\nhistory-conn-ip-20240528\nhistory-conn-ip-20240529\nhistory-conn-ip-20240408\nhistory-conn-domain-20240812\nhistory-conn-ip-20240409\nhistory-conn-domain-20240813\nhistory-conn-domain-20240814\nhistory-conn-domain-20240815\nhistory-conn-domain-20240816\nhistory-conn-domain-20240817\nhistory-conn-ip-20240520\nhistory-conn-ip-20240521\nhistory-conn-ip-20240522\nhistory-conn-ip-20240401\nhistory-conn-ip-20240523\nhistory-conn-ip-20240402\nhistory-conn-ip-20240524\nhistory-conn-ip-20240403\nhistory-conn-ip-20240404\nhistory-conn-ip-20240525\nhistory-conn-ip-20240526\nhistory-conn-domain-20240930\nhistory-conn-ip-20240405\nhistory-conn-domain-20240708\nhistory-conn-domain-20240829\nhistory-conn-domain-20240709\nhistory-conn-ip-20240516\nhistory-conn-domain-20240821\nhistory-conn-ip-20240517\nhistory-conn-domain-20240701\nhistory-conn-domain-20240822\nhistory-conn-domain-20240702\nhistory-conn-domain-20240823\nhistory-conn-ip-20240518\nhistory-conn-domain-20240703\nhistory-conn-domain-20240824\nhistory-conn-ip-20240519\nhistory-conn-domain-20240704\nhistory-conn-domain-20240825\nhistory-conn-domain-20240826\nhistory-conn-domain-20240705\nhistory-conn-domain-20240706\nhistory-conn-domain-20240827\nhistory-conn-domain-20240828\nhistory-conn-domain-20240707\nhistory-conn-ip-20240630\nhistory-conn-ip-20240510\nhistory-conn-ip-20240511\nhistory-conn-ip-20240512\nhistory-conn-ip-20240513\nhistory-conn-ip-20240514\nhistory-conn-domain-20240820\nhistory-conn-ip-20240515\nhistory-conn-domain-20240719\nhistory-conn-ip-20240505\nhistory-conn-ip-20240626\nhistory-conn-domain-20240711\nhistory-conn-ip-20240627\nhistory-conn-ip-20240506\nhistory-conn-domain-20240712\nhistory-conn-ip-20240507\nhistory-conn-domain-20240713\nhistory-conn-ip-20240628\nhistory-conn-domain-20240714\nhistory-conn-ip-20240508\nhistory-conn-ip-20240629\nhistory-conn-domain-20240715\nhistory-conn-ip-20240509\nhistory-conn-domain-20240716\nhistory-conn-domain-20240717\nhistory-conn-domain-20240718\nhistory-conn-ip-20240620\nhistory-conn-ip-20240621\nhistory-conn-ip-20240622\nhistory-conn-ip-20240501\nhistory-conn-ip-20240502\nhistory-conn-ip-20240623\nhistory-conn-ip-20240503\nhistory-conn-ip-20240624\nhistory-conn-domain-20240830\nhistory-conn-domain-20240710\nhistory-conn-ip-20240504\nhistory-conn-domain-20240831\nhistory-conn-ip-20240625\n.internal.alerts-observability.logs.alerts-default-000001\nhistory-conn-domain-20240609\nhistory-conn-domain-20240722\nhistory-conn-ip-20240615\nhistory-conn-domain-20240601\nhistory-conn-ip-20240616\nhistory-conn-domain-20240723\nhistory-conn-domain-20240602\nhistory-conn-ip-20240617\nhistory-conn-domain-20240724\nhistory-conn-domain-20240603\nhistory-conn-domain-20240725\nhistory-conn-domain-20240604\nhistory-conn-ip-20240618\nhistory-conn-domain-20240726\nhistory-conn-domain-20240605\nhistory-conn-ip-20240619\nhistory-conn-domain-20240606\nhistory-conn-domain-20240727\nhistory-conn-domain-20240728\nhistory-conn-domain-20240607\nhistory-conn-domain-20240608\nhistory-conn-domain-20240729\nhistory-conn-ip-20240730\nhistory-conn-ip-20240731\nhistory-conn-ip-20240610\nhistory-conn-ip-20240611\nhistory-conn-ip-20240612\nhistory-conn-ip-20240613\nhistory-conn-domain-20240720\nhistory-conn-domain-20240721\nhistory-conn-ip-20240614\n.internal.alerts-ml.anomaly-detection.alerts-default-000001\n.internal.alerts-observability.slo.alerts-default-000001\nhistory-conn-ip-20240604\nhistory-conn-domain-20240612\nhistory-conn-ip-20240725\nhistory-conn-domain-20240613\nhistory-conn-ip-20240726\nhistory-conn-ip-20240605\nhistory-conn-ip-20240727\nhistory-conn-domain-20240614\nhistory-conn-ip-20240606\nhistory-conn-domain-20240615\nhistory-conn-ip-20240728\nhistory-conn-ip-20240607\nhistory-conn-ip-20240608\nhistory-conn-domain-20240616\nhistory-conn-ip-20240729\nhistory-conn-ip-20240609\nhistory-conn-domain-20240617\nhistory-conn-domain-20240618\nhistory-conn-domain-20240619\nhistory-conn-ip-20240720\nhistory-conn-ip-20240721\nhistory-conn-ip-20240722\nhistory-conn-ip-20240601\nhistory-conn-domain-20240730\n.internal.alerts-stack.alerts-default-000001\nhistory-conn-ip-20240723\nhistory-conn-domain-20240610\nhistory-conn-ip-20240602\nhistory-conn-domain-20240731\nhistory-conn-ip-20240603\nhistory-conn-domain-20240611\nhistory-conn-ip-20240724\nhistory-conn-domain-20240623\nhistory-conn-domain-20240502\nhistory-conn-ip-20240714\nhistory-conn-ip-20240715\nhistory-conn-domain-20240624\nhistory-conn-domain-20240503\n.kibana-observability-ai-assistant-conversations-000001\nhistory-conn-ip-20240716\nhistory-conn-domain-20240625\nhistory-conn-domain-20240504\nhistory-conn-domain-20240505\nhistory-conn-ip-20240717\nhistory-conn-domain-20240626\nhistory-conn-domain-20240627\nhistory-conn-ip-20240718\nhistory-conn-domain-20240506\nhistory-conn-domain-20240628\nhistory-conn-ip-20240719\nhistory-conn-domain-20240507\nhistory-conn-domain-20240508\nhistory-conn-domain-20240629\nhistory-conn-domain-20240509\nhistory-conn-ip-20240830\nhistory-conn-ip-20240710\nhistory-conn-ip-20240831\nhistory-conn-domain-20240620\nhistory-conn-ip-20240711\nhistory-conn-ip-20240712\nhistory-conn-domain-20240621\nhistory-conn-domain-20240622\nhistory-conn-domain-20240501\nhistory-conn-ip-20240713\nhistory-conn-ip-20240703\nhistory-conn-domain-20240513\nhistory-conn-ip-20240824\nhistory-conn-domain-20240514\nhistory-conn-ip-20240704\nhistory-conn-ip-20240825\nhistory-conn-ip-20240826\nhistory-conn-ip-20240705\nhistory-conn-domain-20240515\nhistory-conn-ip-20240827\nhistory-conn-domain-20240516\nhistory-conn-ip-20240706\nhistory-conn-ip-20240707\nhistory-conn-domain-20240517\nhistory-conn-ip-20240828\nhistory-conn-domain-20240518\nhistory-conn-ip-20240708\nhistory-conn-ip-20240829\nhistory-conn-ip-20240709\nhistory-conn-domain-20240519\nhistory-conn-ip-20240820\nhistory-conn-domain-20240630\nhistory-conn-ip-20240821\nhistory-conn-domain-20240510\nhistory-conn-domain-20240511\nhistory-conn-ip-20240822\nhistory-conn-ip-20240701\nhistory-conn-ip-20240823\nhistory-conn-ip-20240702\nhistory-conn-domain-20240512\nhistory-conn-domain-20240403\nhistory-conn-domain-20240524\nhistory-conn-ip-20240813\nhistory-conn-domain-20240404\nhistory-conn-domain-20240525\nhistory-conn-ip-20240814\nhistory-conn-ip-20240815\nhistory-conn-domain-20240405\nhistory-conn-domain-20240526\nhistory-conn-domain-20240527\nhistory-conn-domain-20240406\nhistory-conn-ip-20240816\nhistory-conn-ip-20240817\nhistory-conn-domain-20240407\nhistory-conn-domain-20240528\nhistory-conn-ip-20240818\nhistory-conn-domain-20240408\nhistory-conn-domain-20240529\nhistory-conn-domain-20240409\nhistory-conn-ip-20240819\nhistory-conn-ip-20240930\nhistory-conn-domain-20240520\nhistory-conn-domain-20240521\nhistory-conn-ip-20240810\nhistory-conn-domain-20240522\nhistory-conn-ip-20240811\nhistory-conn-domain-20240401\nhistory-conn-ip-20240812\nhistory-conn-domain-20240523\nhistory-conn-domain-20240402\nhistory-conn-ip-20240130\nhistory-conn-ip-20240131\nhistory-conn-ip-20241101\nhistory-conn-ip-20241213\nhistory-conn-ip-20241212\nhistory-conn-ip-20240125\nhistory-conn-ip-20241215\nhistory-conn-ip-20241214\nhistory-conn-ip-20240126\nhistory-conn-ip-20241217\nhistory-conn-ip-20240127\nhistory-conn-ip-20241216\nhistory-conn-ip-20240128\nhistory-conn-ip-20240129\nhistory-conn-ip-20241218\n.internal.alerts-observability.uptime.alerts-default-000001\nhistory-conn-ip-20241211\nhistory-conn-ip-20241210\nhistory-conn-ip-20241209\nhistory-conn-ip-20241202\nhistory-conn-ip-20241201\nhistory-conn-ip-20241204\nhistory-conn-ip-20241203\nhistory-conn-ip-20241206\nhistory-conn-ip-20241205\nhistory-conn-ip-20241208\nhistory-conn-ip-20241207\n.internal.alerts-transform.health.alerts-default-000001\nhistory-conn-ip-20240222\nhistory-conn-ip-20240223\nhistory-conn-ip-20240224\nhistory-conn-ip-20240225\nhistory-conn-ip-20240226\nhistory-conn-ip-20240227\nhistory-conn-ip-20240228\nhistory-conn-ip-20240229\nhistory-conn-ip-20240220\nhistory-conn-ip-20240221\nhistory-conn-ip-20240219\nhistory-conn-ip-20240211\nhistory-conn-ip-20240212\n.kibana-observability-ai-assistant-kb-000001\nhistory-conn-ip-20240213\nhistory-conn-ip-20240214\nhistory-conn-ip-20240215\nhistory-conn-ip-20240216\nhistory-conn-ip-20240217\nhistory-conn-ip-20240218\nhistory-conn-ip-20240330\nhistory-conn-ip-20240331\nhistory-conn-ip-20240210\nhistory-conn-ip-20240208\nhistory-conn-ip-20240329\nhistory-conn-ip-20240209\nhistory-conn-ip-20240321\nhistory-conn-ip-20240201\nhistory-conn-ip-20240322\nhistory-conn-ip-20240202\nhistory-conn-ip-20240323\nhistory-conn-ip-20240203\nhistory-conn-ip-20240324\nhistory-conn-ip-20240204\nhistory-conn-ip-20240325\nhistory-conn-ip-20240326\nhistory-conn-ip-20240205\nhistory-conn-ip-20240327\nhistory-conn-ip-20240206\nhistory-conn-ip-20240328\nhistory-conn-ip-20240207\nhistory-conn-ip-20240320\nhistory-conn-domain-20240906\nhistory-conn-domain-20240907\nhistory-conn-domain-20240908\nhistory-conn-domain-20240909\nhistory-conn-ip-20240318\nhistory-conn-ip-20240319\nhistory-conn-domain-20240901\nhistory-conn-domain-20240902\nhistory-conn-domain-20240903\nhistory-conn-domain-20240904\nhistory-conn-domain-20240905\nhistory-conn-ip-20240310\nhistory-conn-ip-20240311\nhistory-conn-ip-20240312\nhistory-conn-ip-20240313\nhistory-conn-ip-20240314\nhistory-conn-ip-20240315\nhistory-conn-ip-20240316\nhistory-conn-ip-20240317\nhistory-conn-ip-20240430\nhistory-conn-domain-20240917\nhistory-conn-domain-20240918\nhistory-conn-domain-20240919\nhistory-conn-ip-20240307\nhistory-conn-ip-20240428\nhistory-conn-ip-20240308\nhistory-conn-ip-20240429\nhistory-conn-domain-20240910\nhistory-conn-ip-20240309\nhistory-conn-domain-20240911\nhistory-conn-domain-20240912\nhistory-conn-domain-20240913\nhistory-conn-domain-20240914\nhistory-conn-domain-20240915\nhistory-conn-domain-20240916\nhistory-conn-ip-20240420\nhistory-conn-ip-20240421\nhistory-conn-ip-20240301\nhistory-conn-ip-20240422\nhistory-conn-ip-20240302\nhistory-conn-ip-20240423\nhistory-conn-ip-20240303\nhistory-conn-ip-20240424\nhistory-conn-ip-20240304\nhistory-conn-ip-20240425\nhistory-conn-ip-20240426\nhistory-conn-ip-20240305\nhistory-conn-ip-20240427\nhistory-conn-ip-20240306\nhistory-conn-domain-20240928\nhistory-conn-domain-20240807\nhistory-conn-domain-20240929\nhistory-conn-domain-20240808\nhistory-conn-domain-20240809\nhistory-conn-ip-20240417\nhistory-conn-domain-20240920\nhistory-conn-ip-20240418\nhistory-conn-domain-20240921\nhistory-conn-domain-20240922\nhistory-conn-domain-20240801\nhistory-conn-ip-20240419\nhistory-conn-domain-20240923\nhistory-conn-domain-20240802\nhistory-conn-domain-20240924\nhistory-conn-domain-20240803\nhistory-conn-domain-20240804\nhistory-conn-domain-20240925\nhistory-conn-domain-20240805\nhistory-conn-domain-20240926\nhistory-conn-domain-20240806\nhistory-conn-domain-20240927\nhistory-conn-ip-20240530\nhistory-conn-ip-20240410\nhistory-conn-ip-20240531\nhistory-conn-ip-20240411\nhistory-conn-ip-20240412\nhistory-conn-ip-20240413\nhistory-conn-ip-20240414\nhistory-conn-ip-20240415\nhistory-conn-ip-20240416"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.7",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.6",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.5",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.4",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.3",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.2",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "148367",
            "pluginname": "Python Unsupported Version Detection",
            "hostname": "",
            "port": "5555",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote host contains one or more unsupported versions of Python.\n\nLack of support implies that no new security patches for the product will be released by the vendor. As a result, it is likely to contain security vulnerabilities.",
            "solution": "Upgrade to a version of Python that is currently supported.",
            "cve": "",
            "cvss3": "10.0",
            "cvss2": "10.0",
            "see_also": "https://www.python.org/downloads/\nhttps://devguide.python.org/devcycle/",
            "plugin_output": "The following Python installation is unsupported :\nPath              : /\nPort              : 5555\nInstalled version : 3.8.10\nLatest version    : 3.10\nSupport dates     : 2024-10-14 (end of life)"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.2",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.8.1",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "134220",
            "pluginname": "nginx < 1.17.7 Information Disclosure",
            "hostname": "",
            "port": "80",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its Server response header, the installed version of nginx is prior to 1.17.7. It is, therefore, affected by an information disclosure vulnerability.",
            "solution": "Upgrade to nginx version 1.17.7 or later.",
            "cve": "CVE-2019-20372",
            "cvss3": "5.3",
            "cvss2": "4.3",
            "see_also": "http://www.nessus.org/u?fd026623",
            "plugin_output": "URL               : http://10.27.8.1/\nInstalled version : 1.10.3\nFixed version     : 1.17.7"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.1",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "134220",
            "pluginname": "nginx < 1.17.7 Information Disclosure",
            "hostname": "",
            "port": "7005",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its Server response header, the installed version of nginx is prior to 1.17.7. It is, therefore, affected by an information disclosure vulnerability.",
            "solution": "Upgrade to nginx version 1.17.7 or later.",
            "cve": "CVE-2019-20372",
            "cvss3": "5.3",
            "cvss2": "4.3",
            "see_also": "http://www.nessus.org/u?fd026623",
            "plugin_output": "URL               : http://10.27.8.1:7005/\nInstalled version : 1.10.3\nFixed version     : 1.17.7"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.1",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "134220",
            "pluginname": "nginx < 1.17.7 Information Disclosure",
            "hostname": "",
            "port": "8888",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its Server response header, the installed version of nginx is prior to 1.17.7. It is, therefore, affected by an information disclosure vulnerability.",
            "solution": "Upgrade to nginx version 1.17.7 or later.",
            "cve": "CVE-2019-20372",
            "cvss3": "5.3",
            "cvss2": "4.3",
            "see_also": "http://www.nessus.org/u?fd026623",
            "plugin_output": "URL               : http://10.27.8.1:8888/\nInstalled version : 1.10.3\nFixed version     : 1.17.7"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.1",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "101025",
            "pluginname": "Elasticsearch Unrestricted Access Information Disclosure",
            "hostname": "",
            "port": "9201",
            "protocol": "tcp",
            "severity": "2",
            "description": "The Elasticsearch application running on the remote web server is affected by an information disclosure vulnerability due to a failure to restrict resources via authentication. An unauthenticated, remote attacker can exploit this to disclose sensitive information from the database.",
            "solution": "Enable native user authentication or integrate with an external user management system such as LDAP and Active Directory.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?d055e692\nhttp://www.nessus.org/u?b80612a1",
            "plugin_output": "Nessus detected an unprotected instance of Elasticsearch with the following indices :\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen\nopen"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.1",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Some-State/L=Taipei/O=ACSI/OU=ICD/CN=dockerhub.acercsi.com/E=jess@acercsi.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.1",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Some-State/L=Taipei/O=ACSI/OU=ICD/CN=dockerhub.acercsi.com/E=jess@acercsi.com\n|-Issuer  : C=TW/ST=Some-State/L=Taipei/O=ACSI/OU=ICD/CN=dockerhub.acercsi.com/E=jess@acercsi.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.8.1",
            "system": "Linux Kernel 4.4 on Ubuntu 16.04 (xenial)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.7.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.7.205",
            "system": "Juniper SSL VPN Appliance",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=Acer Cyber Security Incorporated/CN=acsivpn.acercsi.com\n|-Issuer  : C=TW/O=TAIWAN-CA/CN=TWCA Secure SSL Certification Authority"
        },
        {
            "file_no": 0,
            "ip": "10.27.7.204",
            "system": "Juniper SSL VPN Appliance",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=Acer Cyber Security Incorporated/CN=acsivpn.acercsi.com\n|-Issuer  : C=TW/O=TAIWAN-CA/CN=TWCA Secure SSL Certification Authority"
        },
        {
            "file_no": 0,
            "ip": "10.27.7.203",
            "system": "Juniper SSL VPN Appliance",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=Acer Cyber Security Incorporated/CN=acsivpn.acercsi.com\n|-Issuer  : C=TW/O=TAIWAN-CA/CN=TWCA Secure SSL Certification Authority"
        },
        {
            "file_no": 0,
            "ip": "10.27.7.126",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.7.57",
            "system": "Microsoft Windows 10 Enterprise\nMicrosoft Windows Server 2019 LTSC\nMicrosoft Windows Server 2019",
            "os": "windows",
            "pluginid": "57608",
            "pluginname": "SMB Signing not required",
            "hostname": "",
            "port": "445",
            "protocol": "tcp",
            "severity": "2",
            "description": "Signing is not required on the remote SMB server. An unauthenticated, remote attacker can exploit this to conduct man-in-the-middle attacks against the SMB server.",
            "solution": "Enforce message signing in the host's configuration. On Windows, this is found in the policy setting 'Microsoft network server: Digitally sign communications (always)'. On Samba, the setting is called 'server signing'. See the 'see also' links for further details.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?df39b8b3\nhttp://technet.microsoft.com/en-us/library/cc731957.aspx\nhttp://www.nessus.org/u?74b80723\nhttps://www.samba.org/samba/docs/current/man-html/smb.conf.5.html\nhttp://www.nessus.org/u?a3cac4ea",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.7.55",
            "system": "Microsoft Windows 10 Enterprise\nMicrosoft Windows Server 2019 LTSC\nMicrosoft Windows Server 2019",
            "os": "windows",
            "pluginid": "57608",
            "pluginname": "SMB Signing not required",
            "hostname": "",
            "port": "445",
            "protocol": "tcp",
            "severity": "2",
            "description": "Signing is not required on the remote SMB server. An unauthenticated, remote attacker can exploit this to conduct man-in-the-middle attacks against the SMB server.",
            "solution": "Enforce message signing in the host's configuration. On Windows, this is found in the policy setting 'Microsoft network server: Digitally sign communications (always)'. On Samba, the setting is called 'server signing'. See the 'see also' links for further details.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?df39b8b3\nhttp://technet.microsoft.com/en-us/library/cc731957.aspx\nhttp://www.nessus.org/u?74b80723\nhttps://www.samba.org/samba/docs/current/man-html/smb.conf.5.html\nhttp://www.nessus.org/u?a3cac4ea",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.7.50",
            "system": "Microsoft Windows 10 Enterprise\nMicrosoft Windows Server 2019 LTSC\nMicrosoft Windows Server 2019",
            "os": "windows",
            "pluginid": "57608",
            "pluginname": "SMB Signing not required",
            "hostname": "",
            "port": "445",
            "protocol": "tcp",
            "severity": "2",
            "description": "Signing is not required on the remote SMB server. An unauthenticated, remote attacker can exploit this to conduct man-in-the-middle attacks against the SMB server.",
            "solution": "Enforce message signing in the host's configuration. On Windows, this is found in the policy setting 'Microsoft network server: Digitally sign communications (always)'. On Samba, the setting is called 'server signing'. See the 'see also' links for further details.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?df39b8b3\nhttp://technet.microsoft.com/en-us/library/cc731957.aspx\nhttp://www.nessus.org/u?74b80723\nhttps://www.samba.org/samba/docs/current/man-html/smb.conf.5.html\nhttp://www.nessus.org/u?a3cac4ea",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.7.49",
            "system": "Microsoft Windows 10 Enterprise\nMicrosoft Windows Server 2019 LTSC\nMicrosoft Windows Server 2019",
            "os": "windows",
            "pluginid": "57608",
            "pluginname": "SMB Signing not required",
            "hostname": "",
            "port": "445",
            "protocol": "tcp",
            "severity": "2",
            "description": "Signing is not required on the remote SMB server. An unauthenticated, remote attacker can exploit this to conduct man-in-the-middle attacks against the SMB server.",
            "solution": "Enforce message signing in the host's configuration. On Windows, this is found in the policy setting 'Microsoft network server: Digitally sign communications (always)'. On Samba, the setting is called 'server signing'. See the 'see also' links for further details.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?df39b8b3\nhttp://technet.microsoft.com/en-us/library/cc731957.aspx\nhttp://www.nessus.org/u?74b80723\nhttps://www.samba.org/samba/docs/current/man-html/smb.conf.5.html\nhttp://www.nessus.org/u?a3cac4ea",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.7.39",
            "system": "Microsoft Windows 10 Enterprise\nMicrosoft Windows Server 2019 LTSC\nMicrosoft Windows Server 2019",
            "os": "windows",
            "pluginid": "57608",
            "pluginname": "SMB Signing not required",
            "hostname": "",
            "port": "445",
            "protocol": "tcp",
            "severity": "2",
            "description": "Signing is not required on the remote SMB server. An unauthenticated, remote attacker can exploit this to conduct man-in-the-middle attacks against the SMB server.",
            "solution": "Enforce message signing in the host's configuration. On Windows, this is found in the policy setting 'Microsoft network server: Digitally sign communications (always)'. On Samba, the setting is called 'server signing'. See the 'see also' links for further details.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?df39b8b3\nhttp://technet.microsoft.com/en-us/library/cc731957.aspx\nhttp://www.nessus.org/u?74b80723\nhttps://www.samba.org/samba/docs/current/man-html/smb.conf.5.html\nhttp://www.nessus.org/u?a3cac4ea",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.7.34",
            "system": "Microsoft Windows 10 Enterprise\nMicrosoft Windows Server 2019 LTSC\nMicrosoft Windows Server 2019",
            "os": "windows",
            "pluginid": "57608",
            "pluginname": "SMB Signing not required",
            "hostname": "",
            "port": "445",
            "protocol": "tcp",
            "severity": "2",
            "description": "Signing is not required on the remote SMB server. An unauthenticated, remote attacker can exploit this to conduct man-in-the-middle attacks against the SMB server.",
            "solution": "Enforce message signing in the host's configuration. On Windows, this is found in the policy setting 'Microsoft network server: Digitally sign communications (always)'. On Samba, the setting is called 'server signing'. See the 'see also' links for further details.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?df39b8b3\nhttp://technet.microsoft.com/en-us/library/cc731957.aspx\nhttp://www.nessus.org/u?74b80723\nhttps://www.samba.org/samba/docs/current/man-html/smb.conf.5.html\nhttp://www.nessus.org/u?a3cac4ea",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.7.27",
            "system": "Microsoft Windows 10 Enterprise\nMicrosoft Windows Server 2019 LTSC\nMicrosoft Windows Server 2019",
            "os": "windows",
            "pluginid": "57608",
            "pluginname": "SMB Signing not required",
            "hostname": "",
            "port": "445",
            "protocol": "tcp",
            "severity": "2",
            "description": "Signing is not required on the remote SMB server. An unauthenticated, remote attacker can exploit this to conduct man-in-the-middle attacks against the SMB server.",
            "solution": "Enforce message signing in the host's configuration. On Windows, this is found in the policy setting 'Microsoft network server: Digitally sign communications (always)'. On Samba, the setting is called 'server signing'. See the 'see also' links for further details.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?df39b8b3\nhttp://technet.microsoft.com/en-us/library/cc731957.aspx\nhttp://www.nessus.org/u?74b80723\nhttps://www.samba.org/samba/docs/current/man-html/smb.conf.5.html\nhttp://www.nessus.org/u?a3cac4ea",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.6.6",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "58453",
            "pluginname": "Terminal Services Doesn't Use Network Level Authentication (NLA) Only",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote Terminal Services is not configured to use Network Level Authentication (NLA) only. NLA uses the Credential Security Support Provider (CredSSP) protocol to perform strong server authentication either through TLS/SSL or Kerberos mechanisms, which protect against man-in-the-middle attacks. In addition to improving authentication, NLA also helps protect the remote computer from malicious users and software by completing user authentication before a full RDP connection is established.",
            "solution": "Enable Network Level Authentication (NLA) on the remote RDP server. This is generally done on the 'Remote' tab of the 'System' settings on Windows.",
            "cve": "",
            "cvss3": "4.0",
            "cvss2": "4.3",
            "see_also": "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc732713(v=ws.11)\nhttp://www.nessus.org/u?e2628096",
            "plugin_output": "Nessus was able to negotiate non-NLA (Network Level Authentication) security."
        },
        {
            "file_no": 0,
            "ip": "10.27.6.6",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "57608",
            "pluginname": "SMB Signing not required",
            "hostname": "",
            "port": "445",
            "protocol": "tcp",
            "severity": "2",
            "description": "Signing is not required on the remote SMB server. An unauthenticated, remote attacker can exploit this to conduct man-in-the-middle attacks against the SMB server.",
            "solution": "Enforce message signing in the host's configuration. On Windows, this is found in the policy setting 'Microsoft network server: Digitally sign communications (always)'. On Samba, the setting is called 'server signing'. See the 'see also' links for further details.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?df39b8b3\nhttp://technet.microsoft.com/en-us/library/cc731957.aspx\nhttp://www.nessus.org/u?74b80723\nhttps://www.samba.org/samba/docs/current/man-html/smb.conf.5.html\nhttp://www.nessus.org/u?a3cac4ea",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.6.5",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "58453",
            "pluginname": "Terminal Services Doesn't Use Network Level Authentication (NLA) Only",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote Terminal Services is not configured to use Network Level Authentication (NLA) only. NLA uses the Credential Security Support Provider (CredSSP) protocol to perform strong server authentication either through TLS/SSL or Kerberos mechanisms, which protect against man-in-the-middle attacks. In addition to improving authentication, NLA also helps protect the remote computer from malicious users and software by completing user authentication before a full RDP connection is established.",
            "solution": "Enable Network Level Authentication (NLA) on the remote RDP server. This is generally done on the 'Remote' tab of the 'System' settings on Windows.",
            "cve": "",
            "cvss3": "4.0",
            "cvss2": "4.3",
            "see_also": "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc732713(v=ws.11)\nhttp://www.nessus.org/u?e2628096",
            "plugin_output": "Nessus was able to negotiate non-NLA (Network Level Authentication) security."
        },
        {
            "file_no": 0,
            "ip": "10.27.6.5",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "57608",
            "pluginname": "SMB Signing not required",
            "hostname": "",
            "port": "445",
            "protocol": "tcp",
            "severity": "2",
            "description": "Signing is not required on the remote SMB server. An unauthenticated, remote attacker can exploit this to conduct man-in-the-middle attacks against the SMB server.",
            "solution": "Enforce message signing in the host's configuration. On Windows, this is found in the policy setting 'Microsoft network server: Digitally sign communications (always)'. On Samba, the setting is called 'server signing'. See the 'see also' links for further details.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?df39b8b3\nhttp://technet.microsoft.com/en-us/library/cc731957.aspx\nhttp://www.nessus.org/u?74b80723\nhttps://www.samba.org/samba/docs/current/man-html/smb.conf.5.html\nhttp://www.nessus.org/u?a3cac4ea",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.6.4",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.6.4",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.6.4",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.6.4",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.6.4",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "58453",
            "pluginname": "Terminal Services Doesn't Use Network Level Authentication (NLA) Only",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote Terminal Services is not configured to use Network Level Authentication (NLA) only. NLA uses the Credential Security Support Provider (CredSSP) protocol to perform strong server authentication either through TLS/SSL or Kerberos mechanisms, which protect against man-in-the-middle attacks. In addition to improving authentication, NLA also helps protect the remote computer from malicious users and software by completing user authentication before a full RDP connection is established.",
            "solution": "Enable Network Level Authentication (NLA) on the remote RDP server. This is generally done on the 'Remote' tab of the 'System' settings on Windows.",
            "cve": "",
            "cvss3": "4.0",
            "cvss2": "4.3",
            "see_also": "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc732713(v=ws.11)\nhttp://www.nessus.org/u?e2628096",
            "plugin_output": "Nessus was able to negotiate non-NLA (Network Level Authentication) security."
        },
        {
            "file_no": 0,
            "ip": "10.27.6.4",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=Cloudbase-Init WinRM"
        },
        {
            "file_no": 0,
            "ip": "10.27.6.4",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=Cloudbase-Init WinRM\n|-Issuer  : CN=Cloudbase-Init WinRM"
        },
        {
            "file_no": 0,
            "ip": "10.27.6.4",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "35291",
            "pluginname": "SSL Certificate Signed Using Weak Hashing Algorithm",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote service uses an SSL certificate chain that has been signed using a cryptographically weak hashing algorithm (e.g. MD2, MD4, MD5, or SHA1). These signature algorithms are known to be vulnerable to collision attacks. An attacker can exploit this to generate another certificate with the same digital signature, allowing an attacker to masquerade as the affected service.\n\nNote that this plugin reports all SSL certificate chains signed with SHA-1 that expire after January 1, 2017 as vulnerable. This is in accordance with Google's gradual sunsetting of the SHA-1 cryptographic hash algorithm.\n\nNote that certificates in the chain that are contained in the Nessus CA database (known_CA.inc) have been ignored.",
            "solution": "Contact the Certificate Authority to have the SSL certificate reissued.",
            "cve": "CVE-2004-2761",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://tools.ietf.org/html/rfc3279\nhttp://www.nessus.org/u?9bb87bf2\nhttp://www.nessus.org/u?e120eea1\nhttp://www.nessus.org/u?5d894816\nhttp://www.nessus.org/u?51db68aa\nhttp://www.nessus.org/u?9dc7bfba",
            "plugin_output": "The following certificates were part of the certificate chain sent by\nthe remote host, but contain hashes that are considered to be weak.\nSubject             : CN=Cloudbase-Init WinRM\nSignature Algorithm : SHA-1 With RSA Encryption\nValid From          : Sep 03 06:09:22 2020 GMT\nValid To            : Sep 02 06:09:22 2030 GMT\nRaw PEM certificate :\n-----BEGIN CERTIFICATE-----\nMIICxjCCAa6gAwIBAgIQHd+K+Idm+6FPD1EntDAIJTANBgkqhkiG9w0BAQUFADAfMR0wGwYDVQQDExRDbG91ZGJhc2UtSW5pdCBXaW5STTAeFw0yMDA5MDMwNjA5MjJaFw0zMDA5MDIwNjA5MjJaMB8xHTAbBgNVBAMTFENsb3VkYmFzZS1Jbml0IFdpblJNMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAz1wHU+5OjWcip7V99lFGXwAwgpinlnCPI9LG4xvwWnC7oYR6PDxgRNEQsoqAST6jzIHSPtLNiezJVnmNsBUQI7tojuPRjUMqyChpgxSVtEn8CFsNB1wsl4yU12dl/48jvk3WxZCRFcp3S0SuXX7+W0BoHxBszms0lKtrptnb9NIjlXiyQKaEbTw6kxoxDMBtLbKgz3eujTrh+aHb9Ctksn8P35LxAkqEcNjiyrJPFFrIBZE4VwF2YhV5B7i29iu89qoZEJ5M8+FH1nb4H4pw6fQ5XPxkVsEozR6mPDFGRK5I6gZxKb99gCwxxPAw8lOtLViXIU5oh9TY0+N4ts6ajwIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQCxze/gVsoz5wleQY6wAoNwvFIpsOMZtyWe0DC3LcteCxatYzuPohm7ZSkQyAJnXZToY/+/VPEA5MoHSsb+BRSJGfjMQqPt2TFF5O2nKKx91Os588ttqsJZSq50Aw0ophLI+IOMDlLKk/IRm8AyAiuxfGB1IvfDTjG6QTfTFpF73c8LzWQQpiVW0eYm9nB2nYzYGiAQ9MRHh0L3E2kfE7zFnfBo6nzPim3MAyg8h4E66J4ObG9ly/Du6vySXCcrB8f2GbSV0yjFlyM10Av49gx+x5Z3xzcR3P0p/xi2IxoK7nCPHOuvsTzyNkKTanRsjRtv3Lq7cdTWWY/9xmNOdJY1\n-----END CERTIFICATE-----"
        },
        {
            "file_no": 0,
            "ip": "10.27.6.3",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.6.3",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.6.3",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.6.3",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.6.3",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=Cloudbase-Init WinRM"
        },
        {
            "file_no": 0,
            "ip": "10.27.6.3",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=Cloudbase-Init WinRM\n|-Issuer  : CN=Cloudbase-Init WinRM"
        },
        {
            "file_no": 0,
            "ip": "10.27.6.3",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "35291",
            "pluginname": "SSL Certificate Signed Using Weak Hashing Algorithm",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote service uses an SSL certificate chain that has been signed using a cryptographically weak hashing algorithm (e.g. MD2, MD4, MD5, or SHA1). These signature algorithms are known to be vulnerable to collision attacks. An attacker can exploit this to generate another certificate with the same digital signature, allowing an attacker to masquerade as the affected service.\n\nNote that this plugin reports all SSL certificate chains signed with SHA-1 that expire after January 1, 2017 as vulnerable. This is in accordance with Google's gradual sunsetting of the SHA-1 cryptographic hash algorithm.\n\nNote that certificates in the chain that are contained in the Nessus CA database (known_CA.inc) have been ignored.",
            "solution": "Contact the Certificate Authority to have the SSL certificate reissued.",
            "cve": "CVE-2004-2761",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://tools.ietf.org/html/rfc3279\nhttp://www.nessus.org/u?9bb87bf2\nhttp://www.nessus.org/u?e120eea1\nhttp://www.nessus.org/u?5d894816\nhttp://www.nessus.org/u?51db68aa\nhttp://www.nessus.org/u?9dc7bfba",
            "plugin_output": "The following certificates were part of the certificate chain sent by\nthe remote host, but contain hashes that are considered to be weak.\nSubject             : CN=Cloudbase-Init WinRM\nSignature Algorithm : SHA-1 With RSA Encryption\nValid From          : Sep 03 06:09:22 2020 GMT\nValid To            : Sep 02 06:09:22 2030 GMT\nRaw PEM certificate :\n-----BEGIN CERTIFICATE-----\nMIICxjCCAa6gAwIBAgIQHd+K+Idm+6FPD1EntDAIJTANBgkqhkiG9w0BAQUFADAfMR0wGwYDVQQDExRDbG91ZGJhc2UtSW5pdCBXaW5STTAeFw0yMDA5MDMwNjA5MjJaFw0zMDA5MDIwNjA5MjJaMB8xHTAbBgNVBAMTFENsb3VkYmFzZS1Jbml0IFdpblJNMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAz1wHU+5OjWcip7V99lFGXwAwgpinlnCPI9LG4xvwWnC7oYR6PDxgRNEQsoqAST6jzIHSPtLNiezJVnmNsBUQI7tojuPRjUMqyChpgxSVtEn8CFsNB1wsl4yU12dl/48jvk3WxZCRFcp3S0SuXX7+W0BoHxBszms0lKtrptnb9NIjlXiyQKaEbTw6kxoxDMBtLbKgz3eujTrh+aHb9Ctksn8P35LxAkqEcNjiyrJPFFrIBZE4VwF2YhV5B7i29iu89qoZEJ5M8+FH1nb4H4pw6fQ5XPxkVsEozR6mPDFGRK5I6gZxKb99gCwxxPAw8lOtLViXIU5oh9TY0+N4ts6ajwIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQCxze/gVsoz5wleQY6wAoNwvFIpsOMZtyWe0DC3LcteCxatYzuPohm7ZSkQyAJnXZToY/+/VPEA5MoHSsb+BRSJGfjMQqPt2TFF5O2nKKx91Os588ttqsJZSq50Aw0ophLI+IOMDlLKk/IRm8AyAiuxfGB1IvfDTjG6QTfTFpF73c8LzWQQpiVW0eYm9nB2nYzYGiAQ9MRHh0L3E2kfE7zFnfBo6nzPim3MAyg8h4E66J4ObG9ly/Du6vySXCcrB8f2GbSV0yjFlyM10Av49gx+x5Z3xzcR3P0p/xi2IxoK7nCPHOuvsTzyNkKTanRsjRtv3Lq7cdTWWY/9xmNOdJY1\n-----END CERTIFICATE-----"
        },
        {
            "file_no": 0,
            "ip": "10.27.6.2",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "57608",
            "pluginname": "SMB Signing not required",
            "hostname": "",
            "port": "445",
            "protocol": "tcp",
            "severity": "2",
            "description": "Signing is not required on the remote SMB server. An unauthenticated, remote attacker can exploit this to conduct man-in-the-middle attacks against the SMB server.",
            "solution": "Enforce message signing in the host's configuration. On Windows, this is found in the policy setting 'Microsoft network server: Digitally sign communications (always)'. On Samba, the setting is called 'server signing'. See the 'see also' links for further details.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?df39b8b3\nhttp://technet.microsoft.com/en-us/library/cc731957.aspx\nhttp://www.nessus.org/u?74b80723\nhttps://www.samba.org/samba/docs/current/man-html/smb.conf.5.html\nhttp://www.nessus.org/u?a3cac4ea",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.6.1",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "57608",
            "pluginname": "SMB Signing not required",
            "hostname": "",
            "port": "445",
            "protocol": "tcp",
            "severity": "2",
            "description": "Signing is not required on the remote SMB server. An unauthenticated, remote attacker can exploit this to conduct man-in-the-middle attacks against the SMB server.",
            "solution": "Enforce message signing in the host's configuration. On Windows, this is found in the policy setting 'Microsoft network server: Digitally sign communications (always)'. On Samba, the setting is called 'server signing'. See the 'see also' links for further details.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?df39b8b3\nhttp://technet.microsoft.com/en-us/library/cc731957.aspx\nhttp://www.nessus.org/u?74b80723\nhttps://www.samba.org/samba/docs/current/man-html/smb.conf.5.html\nhttp://www.nessus.org/u?a3cac4ea",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.5.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.205",
            "system": "Juniper SSL VPN Appliance",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=Acer Cyber Security Incorporated/CN=acsivpn.acercsi.com\n|-Issuer  : C=TW/O=TAIWAN-CA/CN=TWCA Secure SSL Certification Authority"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.204",
            "system": "Juniper SSL VPN Appliance",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=Acer Cyber Security Incorporated/CN=acsivpn.acercsi.com\n|-Issuer  : C=TW/O=TAIWAN-CA/CN=TWCA Secure SSL Certification Authority"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.203",
            "system": "Juniper SSL VPN Appliance",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=Acer Cyber Security Incorporated/CN=acsivpn.acercsi.com\n|-Issuer  : C=TW/O=TAIWAN-CA/CN=TWCA Secure SSL Certification Authority"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.151",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.151",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.151",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.69",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "201848",
            "pluginname": "Apache Tomcat 9.0.0.M1 < 9.0.90",
            "hostname": "",
            "port": "8082",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Tomcat installed on the remote host is prior to 9.0.90. It is, therefore, affected by a vulnerability as referenced in the fixed_in_apache_tomcat_9.0.90_security-9 advisory.\n\n  - Improper Handling of Exceptional Conditions, Uncontrolled Resource Consumption vulnerability in Apache     Tomcat. When processing an HTTP/2 stream, Tomcat did not handle some cases of excessive HTTP headers     correctly. This led to a miscounting of active HTTP/2 streams which in turn led to the use of an incorrect     infinite timeout which allowed connections to remain open which should have been closed. This issue     affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M20, from 10.1.0-M1 through 10.1.24, from 9.0.0-M1     through 9.0.89. Users are recommended to upgrade to version 11.0.0-M21, 10.1.25 or 9.0.90, which fixes the     issue. (CVE-2024-34750)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Apache Tomcat version 9.0.90 or later.",
            "cve": "CVE-2024-34750",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?c0d803ed\nhttp://www.nessus.org/u?9c97b7d7",
            "plugin_output": "URL               : http://10.27.5.69:8082/\nInstalled version : 9.0.86\nFixed version     : 9.0.90"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.69",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "12085",
            "pluginname": "Apache Tomcat Default Files",
            "hostname": "",
            "port": "8082",
            "protocol": "tcp",
            "severity": "2",
            "description": "The default error page, default index page, example JSPs and/or example servlets are installed on the remote Apache Tomcat server. These files should be removed as they may help an attacker uncover information about the remote Tomcat install or host itself.",
            "solution": "Delete the default index page and remove the example JSP and servlets. Follow the Tomcat or OWASP instructions to replace or modify the default error page.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?4cb3b4dd\nhttps://www.owasp.org/index.php/Securing_tomcat",
            "plugin_output": "The server is not configured to return a custom page in the event of a client requesting a non-existent resource.\nThis may result in a potential disclosure of sensitive information about the server to attackers."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.69",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : CN=ozcustomer.acercsi.com\n|-Not After : Jun 04 02:37:44 2024 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.69",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : CN=ozcustomer.acercsi.com\nIssuer           : C=US, O=Let's Encrypt, CN=R3\nNot valid before : Mar  6 02:37:45 2024 GMT\nNot valid after  : Jun  4 02:37:44 2024 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.69",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.68",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : CN=portal-test.acercsi.com\n|-Not After : Nov 10 06:00:44 2024 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.68",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : CN=portal-test.acercsi.com\nIssuer           : C=US, O=Let's Encrypt, CN=E6\nNot valid before : Aug 12 06:00:45 2024 GMT\nNot valid after  : Nov 10 06:00:44 2024 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.68",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.67",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.64",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.64",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.64",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=ACSI/OU=ICD300/CN=Acer Cyber Security Inc."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.64",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=ACSI/OU=ICD300/CN=Acer Cyber Security Inc.\n|-Issuer  : C=TW/ST=Taiwan/L=Taipei/O=ACSI/OU=ICD300/CN=Acer Cyber Security Inc."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.64",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 2 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.55",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.55",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "80",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.55",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com\n|-Issuer  : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.55",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "80",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com\n|-Issuer  : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.54",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.54",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "80",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.54",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com\n|-Issuer  : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.54",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "80",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com\n|-Issuer  : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.50",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "201848",
            "pluginname": "Apache Tomcat 9.0.0.M1 < 9.0.90",
            "hostname": "",
            "port": "8082",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Tomcat installed on the remote host is prior to 9.0.90. It is, therefore, affected by a vulnerability as referenced in the fixed_in_apache_tomcat_9.0.90_security-9 advisory.\n\n  - Improper Handling of Exceptional Conditions, Uncontrolled Resource Consumption vulnerability in Apache     Tomcat. When processing an HTTP/2 stream, Tomcat did not handle some cases of excessive HTTP headers     correctly. This led to a miscounting of active HTTP/2 streams which in turn led to the use of an incorrect     infinite timeout which allowed connections to remain open which should have been closed. This issue     affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M20, from 10.1.0-M1 through 10.1.24, from 9.0.0-M1     through 9.0.89. Users are recommended to upgrade to version 11.0.0-M21, 10.1.25 or 9.0.90, which fixes the     issue. (CVE-2024-34750)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Apache Tomcat version 9.0.90 or later.",
            "cve": "CVE-2024-34750",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?c0d803ed\nhttp://www.nessus.org/u?9c97b7d7",
            "plugin_output": "URL               : http://10.27.5.50:8082/\nInstalled version : 9.0.86\nFixed version     : 9.0.90"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.50",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "12085",
            "pluginname": "Apache Tomcat Default Files",
            "hostname": "",
            "port": "8082",
            "protocol": "tcp",
            "severity": "2",
            "description": "The default error page, default index page, example JSPs and/or example servlets are installed on the remote Apache Tomcat server. These files should be removed as they may help an attacker uncover information about the remote Tomcat install or host itself.",
            "solution": "Delete the default index page and remove the example JSP and servlets. Follow the Tomcat or OWASP instructions to replace or modify the default error page.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?4cb3b4dd\nhttps://www.owasp.org/index.php/Securing_tomcat",
            "plugin_output": "The server is not configured to return a custom page in the event of a client requesting a non-existent resource.\nThis may result in a potential disclosure of sensitive information about the server to attackers."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.50",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.48",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "209150",
            "pluginname": "OpenSSL 3.0.0 < 3.0.16 Vulnerability",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of OpenSSL installed on the remote host is prior to 3.0.16. It is, therefore, affected by a vulnerability as referenced in the 3.0.16 advisory.\n\n  - Issue summary: Use of the low-level GF(2^m) elliptic curve APIs with untrusted explicit values for the     field polynomial can lead to out-of-bounds memory reads or writes. Impact summary: Out of bound memory     writes can lead to an application crash or even a possibility of a remote code execution, however, in all     the protocols involving Elliptic Curve Cryptography that we're aware of, either only named curves are     supported, or, if explicit curve parameters are supported, they specify an X9.62 encoding of binary     (GF(2^m)) curves that can't represent problematic input values. Thus the likelihood of existence of a     vulnerable application is low. In particular, the X9.62 encoding is used for ECC keys in X.509     certificates, so problematic inputs cannot occur in the context of processing X.509 certificates. Any     problematic use-cases would have to be using an exotic curve encoding. The affected APIs include:\n    EC_GROUP_new_curve_GF2m(), EC_GROUP_new_from_params(), and various supporting BN_GF2m_*() functions.\n    Applications working with exotic explicit binary (GF(2^m)) curve parameters, that make it possible to     represent invalid field polynomials with a zero constant term, via the above or similar APIs, may     terminate abruptly as a result of reading or writing outside of array bounds. Remote code execution cannot     easily be ruled out. The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.\n    (CVE-2024-9143)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSL version 3.0.16 or later.",
            "cve": "CVE-2024-9143",
            "cvss3": "4.3",
            "cvss2": "6.8",
            "see_also": "http://www.nessus.org/u?4cbe1bfc\nhttps://openssl-library.org/news/secadv/20241016.txt\nhttps://openssl-library.org/policies/general/security-policy/#low\nhttps://www.cve.org/CVERecord?id=CVE-2024-9143",
            "plugin_output": "Banner           : Apache/2.4.62 (codeit) OpenSSL/3.0.14+quic mod_wsgi/4.6.8 Python/3.8\nReported version : 3.0.14\nFixed version    : 3.0.16"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.48",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "201085",
            "pluginname": "OpenSSL 3.0.0 < 3.0.15 Vulnerability",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "4",
            "description": "The version of OpenSSL installed on the remote host is prior to 3.0.15. It is, therefore, affected by a vulnerability as referenced in the 3.0.15 advisory.\n\n  - Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an empty supported client     protocols buffer may cause a crash or memory contents to be sent to the peer. Impact summary: A buffer     overread can have a range of potential consequences such as unexpected application beahviour or a crash.\n    In particular this issue could result in up to 255 bytes of arbitrary private data from memory being sent     to the peer leading to a loss of confidentiality. However, only applications that directly call the     SSL_select_next_proto function with a 0 length list of supported client protocols are affected by this     issue. This would normally never be a valid scenario and is typically not under attacker control but may     occur by accident in the case of a configuration or programming error in the calling application. The     OpenSSL API function SSL_select_next_proto is typically used by TLS applications that support ALPN     (Application Layer Protocol Negotiation) or NPN (Next Protocol Negotiation). NPN is older, was never     standardised and is deprecated in favour of ALPN. We believe that ALPN is significantly more widely     deployed than NPN. The SSL_select_next_proto function accepts a list of protocols from the server and a     list of protocols from the client and returns the first protocol that appears in the server list that also     appears in the client list. In the case of no overlap between the two lists it returns the first item in     the client list. In either case it will signal whether an overlap between the two lists was found. In the     case where SSL_select_next_proto is called with a zero length client list it fails to notice this     condition and returns the memory immediately following the client list pointer (and reports that there was     no overlap in the lists). This function is typically called from a server side application callback for     ALPN or a client side application callback for NPN. In the case of ALPN the list of protocols supplied by     the client is guaranteed by libssl to never be zero in length. The list of server protocols comes from the     application and should never normally be expected to be of zero length. In this case if the     SSL_select_next_proto function has been called as expected (with the list supplied by the client passed in     the client/client_len parameters), then the application will not be vulnerable to this issue. If the     application has accidentally been configured with a zero length server list, and has accidentally passed     that zero length server list in the client/client_len parameters, and has additionally failed to correctly     handle a no overlap response (which would normally result in a handshake failure in ALPN) then it will     be vulnerable to this problem. In the case of NPN, the protocol permits the client to opportunistically     select a protocol when there is no overlap. OpenSSL returns the first client protocol in the no overlap     case in support of this. The list of client protocols comes from the application and should never normally     be expected to be of zero length. However if the SSL_select_next_proto function is accidentally called     with a client_len of 0 then an invalid memory pointer will be returned instead. If the application uses     this output as the opportunistic protocol then the loss of confidentiality will occur. This issue has been     assessed as Low severity because applications are most likely to be vulnerable if they are using NPN     instead of ALPN - but NPN is not widely used. It also requires an application configuration or programming     error. Finally, this issue would not typically be under attacker control making active exploitation     unlikely. The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue. Due to the low     severity of this issue we are not issuing new releases of OpenSSL at this time. The fix will be included     in the next releases when they become available. Found by Joseph Birr-Pixton. Thanks to David Benjamin     (Google). Fix developed by Matt Caswell. Fixed in OpenSSL 1.1.1za (premium support) (Affected since     1.1.1). (CVE-2024-5535)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to OpenSSL version 3.0.15 or later.",
            "cve": "CVE-2024-5535",
            "cvss3": "9.1",
            "cvss2": "4.3",
            "see_also": "http://www.nessus.org/u?8f2a60eb\nhttps://www.cve.org/CVERecord?id=CVE-2024-5535",
            "plugin_output": "Banner           : Apache/2.4.62 (codeit) OpenSSL/3.0.14+quic mod_wsgi/4.6.8 Python/3.8\nReported version : 3.0.14\nFixed version    : 3.0.15"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.48",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=Acer eDC/OU=SAFE3.0/E=johnny.liao@acer.com\n|-Issuer  : C=TW/ST=Taiwan/L=Taipei/O=Acer eDC/OU=SAFE3.0/E=johnny.liao@acer.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.48",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=Acer eDC/OU=SAFE3.0/E=johnny.liao@acer.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.48",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8000",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=Acer eDC/OU=SAFE3.0/E=johnny.liao@acer.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.48",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8000",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=Acer eDC/OU=SAFE3.0/E=johnny.liao@acer.com\n|-Issuer  : C=TW/ST=Taiwan/L=Taipei/O=Acer eDC/OU=SAFE3.0/E=johnny.liao@acer.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.48",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "148367",
            "pluginname": "Python Unsupported Version Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote host contains one or more unsupported versions of Python.\n\nLack of support implies that no new security patches for the product will be released by the vendor. As a result, it is likely to contain security vulnerabilities.",
            "solution": "Upgrade to a version of Python that is currently supported.",
            "cve": "",
            "cvss3": "10.0",
            "cvss2": "10.0",
            "see_also": "https://www.python.org/downloads/\nhttps://devguide.python.org/devcycle/",
            "plugin_output": "The following Python installation is unsupported :\nPath              : /\nPort              : 443\nInstalled version : 3.8\nLatest version    : 3.10\nSupport dates     : 2024-10-14 (end of life)"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.48",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 197 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.47",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.47",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "80",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.47",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com\n|-Issuer  : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.47",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "80",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com\n|-Issuer  : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.46",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.46",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "80",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.46",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com\n|-Issuer  : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.46",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "80",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com\n|-Issuer  : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.45",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "80",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.45",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.45",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "80",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com\n|-Issuer  : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.45",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com\n|-Issuer  : C=EN/ST=Hello/L=EN/O=EN/OU=EN/CN=EN/E=123@123.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.44",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "9443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=syncdb/O=icd08a/OU=RD/E=acsi@acsi.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.44",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "9443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=syncdb/O=icd08a/OU=RD/E=acsi@acsi.com\n|-Issuer  : CN=syncdb/O=icd08a/OU=RD/E=acsi@acsi.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.44",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.43",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.43",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.43",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.43",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "58453",
            "pluginname": "Terminal Services Doesn't Use Network Level Authentication (NLA) Only",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote Terminal Services is not configured to use Network Level Authentication (NLA) only. NLA uses the Credential Security Support Provider (CredSSP) protocol to perform strong server authentication either through TLS/SSL or Kerberos mechanisms, which protect against man-in-the-middle attacks. In addition to improving authentication, NLA also helps protect the remote computer from malicious users and software by completing user authentication before a full RDP connection is established.",
            "solution": "Enable Network Level Authentication (NLA) on the remote RDP server. This is generally done on the 'Remote' tab of the 'System' settings on Windows.",
            "cve": "",
            "cvss3": "4.0",
            "cvss2": "4.3",
            "see_also": "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc732713(v=ws.11)\nhttp://www.nessus.org/u?e2628096",
            "plugin_output": "Nessus was able to negotiate non-NLA (Network Level Authentication) security."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.43",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=acsi-sw-091"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.43",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=acsi-sw-091\n|-Issuer  : CN=acsi-sw-091"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.42",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 41 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.41",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.40",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=acsi-sw-084"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.40",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=acsi-sw-084\n|-Issuer  : CN=acsi-sw-084"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.38",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.38",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.38",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.38",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.38",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "58453",
            "pluginname": "Terminal Services Doesn't Use Network Level Authentication (NLA) Only",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote Terminal Services is not configured to use Network Level Authentication (NLA) only. NLA uses the Credential Security Support Provider (CredSSP) protocol to perform strong server authentication either through TLS/SSL or Kerberos mechanisms, which protect against man-in-the-middle attacks. In addition to improving authentication, NLA also helps protect the remote computer from malicious users and software by completing user authentication before a full RDP connection is established.",
            "solution": "Enable Network Level Authentication (NLA) on the remote RDP server. This is generally done on the 'Remote' tab of the 'System' settings on Windows.",
            "cve": "",
            "cvss3": "4.0",
            "cvss2": "4.3",
            "see_also": "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc732713(v=ws.11)\nhttp://www.nessus.org/u?e2628096",
            "plugin_output": "Nessus was able to negotiate non-NLA (Network Level Authentication) security."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.38",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=acsi-sw-077"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.38",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=acsi-sw-077\n|-Issuer  : CN=acsi-sw-077"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.38",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "57608",
            "pluginname": "SMB Signing not required",
            "hostname": "",
            "port": "445",
            "protocol": "tcp",
            "severity": "2",
            "description": "Signing is not required on the remote SMB server. An unauthenticated, remote attacker can exploit this to conduct man-in-the-middle attacks against the SMB server.",
            "solution": "Enforce message signing in the host's configuration. On Windows, this is found in the policy setting 'Microsoft network server: Digitally sign communications (always)'. On Samba, the setting is called 'server signing'. See the 'see also' links for further details.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?df39b8b3\nhttp://technet.microsoft.com/en-us/library/cc731957.aspx\nhttp://www.nessus.org/u?74b80723\nhttps://www.samba.org/samba/docs/current/man-html/smb.conf.5.html\nhttp://www.nessus.org/u?a3cac4ea",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.5.37",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/L=臺北市/O=市政府-資訊局/CN=doit-jira.gov.taipei\n|-Issuer  : C=TW/O=行政院/CN=政府伺服器數位憑證管理中心 - G1"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.37",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.34",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 1725 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.32",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -267 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.28",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=syncdb/O=icd08a/OU=RD/E=acsi@acsi.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.28",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=syncdb/O=icd08a/OU=RD/E=acsi@acsi.com\n|-Issuer  : CN=syncdb/O=icd08a/OU=RD/E=acsi@acsi.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.28",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.25",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.24",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -233 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.23",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.22",
            "system": "",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "25",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.22",
            "system": "",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "25",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.22",
            "system": "",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "25",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=''/ST=''/L=''/O=''/CN=''\n|-Issuer  : C=''/ST=''/L=''/O=''/CN=''"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.22",
            "system": "",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "25",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=''/ST=''/L=''/O=''/CN=''"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.20",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=TW/ST=Taiwan/L=Taipei/O=Acer Cyber Security Incorporated/CN=cti.acercsi.com\n|-Not After : Nov 06 15:59:59 2024 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.20",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=TW, ST=Taiwan, L=Taipei, O=Acer Cyber Security Incorporated, CN=cti.acercsi.com\nIssuer           : C=TW, O=TAIWAN-CA, CN=TWCA Secure SSL Certification Authority\nNot valid before : Nov  6 09:37:51 2023 GMT\nNot valid after  : Nov  6 15:59:59 2024 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.20",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -157 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.18",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=California/L=Sunnyvale/O=Micro Focus/OU=Support Team/CN=acsi-sl-024/E=arst-support@microfocus.com\n|-Issuer  : C=US/ST=California/L=Sunnyvale/O=Micro Focus/OU=Support Team/CN=TemporaryAuthority/E=arst-support@microfocus.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.18",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=California/L=Sunnyvale/O=Micro Focus/OU=Support Team/CN=acsi-sl-024/E=arst-support@microfocus.com\n|-Issuer  : C=US/ST=California/L=Sunnyvale/O=Micro Focus/OU=Support Team/CN=TemporaryAuthority/E=arst-support@microfocus.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.18",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "12218",
            "pluginname": "mDNS Detection (Remote Network)",
            "hostname": "",
            "port": "5353",
            "protocol": "udp",
            "severity": "2",
            "description": "The remote service understands the Bonjour (also known as ZeroConf or mDNS) protocol, which allows anyone to uncover information from the remote host such as its operating system type and exact version, its hostname, and the list of services it is running. \n\nThis plugin attempts to discover mDNS used by hosts that are not on the network segment on which Nessus resides.",
            "solution": "Filter incoming traffic to UDP port 5353, if desired.",
            "cve": "",
            "cvss3": "",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "Nessus was able to extract the following information :\n- mDNS hostname       : acsi-sl-024.local."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.18",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 5130 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.16",
            "system": "Linux Kernel 2.2\nLinux Kernel 2.4\nLinux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "25",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.16",
            "system": "Linux Kernel 2.2\nLinux Kernel 2.4\nLinux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "465",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.16",
            "system": "Linux Kernel 2.2\nLinux Kernel 2.4\nLinux Kernel 2.6",
            "os": "linux",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "25",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.16",
            "system": "Linux Kernel 2.2\nLinux Kernel 2.4\nLinux Kernel 2.6",
            "os": "linux",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "465",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.16",
            "system": "Linux Kernel 2.2\nLinux Kernel 2.4\nLinux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "25",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=''/ST=''/L=''/O=''/CN=''\n|-Issuer  : C=''/ST=''/L=''/O=''/CN=''"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.16",
            "system": "Linux Kernel 2.2\nLinux Kernel 2.4\nLinux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "25",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=''/ST=''/L=''/O=''/CN=''"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.16",
            "system": "Linux Kernel 2.2\nLinux Kernel 2.4\nLinux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "465",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=''/ST=''/L=''/O=''/CN=''\n|-Issuer  : C=''/ST=''/L=''/O=''/CN=''"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.16",
            "system": "Linux Kernel 2.2\nLinux Kernel 2.4\nLinux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "465",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=''/ST=''/L=''/O=''/CN=''"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.16",
            "system": "Linux Kernel 2.2\nLinux Kernel 2.4\nLinux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taiwan/L=Taipei City/O=Cellopoint International Corporation/OU=Security Division/CN=mailgw.cellopoint.com/E=security@cellopoint.com\n|-Issuer  : C=TW/ST=Taiwan/L=Taipei City/O=Cellopoint International Corporation/OU=Security Division/CN=Cellopoint Root CA/E=security@cellopoint.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.16",
            "system": "Linux Kernel 2.2\nLinux Kernel 2.4\nLinux Kernel 2.6",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.15",
            "system": "Linux Kernel 2.2\nLinux Kernel 2.4\nLinux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "25",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.15",
            "system": "Linux Kernel 2.2\nLinux Kernel 2.4\nLinux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "465",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.15",
            "system": "Linux Kernel 2.2\nLinux Kernel 2.4\nLinux Kernel 2.6",
            "os": "linux",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "25",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.15",
            "system": "Linux Kernel 2.2\nLinux Kernel 2.4\nLinux Kernel 2.6",
            "os": "linux",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "465",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.15",
            "system": "Linux Kernel 2.2\nLinux Kernel 2.4\nLinux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "25",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=''/ST=''/L=''/O=''/CN=''"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.15",
            "system": "Linux Kernel 2.2\nLinux Kernel 2.4\nLinux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "465",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=''/ST=''/L=''/O=''/CN=''"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.15",
            "system": "Linux Kernel 2.2\nLinux Kernel 2.4\nLinux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "25",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=''/ST=''/L=''/O=''/CN=''\n|-Issuer  : C=''/ST=''/L=''/O=''/CN=''"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.15",
            "system": "Linux Kernel 2.2\nLinux Kernel 2.4\nLinux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "465",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=''/ST=''/L=''/O=''/CN=''\n|-Issuer  : C=''/ST=''/L=''/O=''/CN=''"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.15",
            "system": "Linux Kernel 2.2\nLinux Kernel 2.4\nLinux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taiwan/L=Taipei City/O=Cellopoint International Corporation/OU=Security Division/CN=mailgw.cellopoint.com/E=security@cellopoint.com\n|-Issuer  : C=TW/ST=Taiwan/L=Taipei City/O=Cellopoint International Corporation/OU=Security Division/CN=Cellopoint Root CA/E=security@cellopoint.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.15",
            "system": "Linux Kernel 2.2\nLinux Kernel 2.4\nLinux Kernel 2.6",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.10",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.10",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.10",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.10",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=Cloudbase-Init WinRM"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.10",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=Cloudbase-Init WinRM\n|-Issuer  : CN=Cloudbase-Init WinRM"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.10",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "35291",
            "pluginname": "SSL Certificate Signed Using Weak Hashing Algorithm",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote service uses an SSL certificate chain that has been signed using a cryptographically weak hashing algorithm (e.g. MD2, MD4, MD5, or SHA1). These signature algorithms are known to be vulnerable to collision attacks. An attacker can exploit this to generate another certificate with the same digital signature, allowing an attacker to masquerade as the affected service.\n\nNote that this plugin reports all SSL certificate chains signed with SHA-1 that expire after January 1, 2017 as vulnerable. This is in accordance with Google's gradual sunsetting of the SHA-1 cryptographic hash algorithm.\n\nNote that certificates in the chain that are contained in the Nessus CA database (known_CA.inc) have been ignored.",
            "solution": "Contact the Certificate Authority to have the SSL certificate reissued.",
            "cve": "CVE-2004-2761",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://tools.ietf.org/html/rfc3279\nhttp://www.nessus.org/u?9bb87bf2\nhttp://www.nessus.org/u?e120eea1\nhttp://www.nessus.org/u?5d894816\nhttp://www.nessus.org/u?51db68aa\nhttp://www.nessus.org/u?9dc7bfba",
            "plugin_output": "The following certificates were part of the certificate chain sent by\nthe remote host, but contain hashes that are considered to be weak.\nSubject             : CN=Cloudbase-Init WinRM\nSignature Algorithm : SHA-1 With RSA Encryption\nValid From          : Sep 08 07:43:33 2020 GMT\nValid To            : Sep 07 07:43:33 2030 GMT\nRaw PEM certificate :\n-----BEGIN CERTIFICATE-----\nMIICxjCCAa6gAwIBAgIQaTn6T4uTgrhL4UX1xNwY6TANBgkqhkiG9w0BAQUFADAfMR0wGwYDVQQDExRDbG91ZGJhc2UtSW5pdCBXaW5STTAeFw0yMDA5MDgwNzQzMzNaFw0zMDA5MDcwNzQzMzNaMB8xHTAbBgNVBAMTFENsb3VkYmFzZS1Jbml0IFdpblJNMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvULtdLsobzpRry4CJjTq5XAUBrKwVstB/b3RfFXYxlmY9Li8hd+GLrtbVTyu6W7L41YrzZgGbKhe8awUY8qTQJqc5MHy/kb/Hm4edOlufzcZTB4R9/fEhdYWM5cs0rfzAAKYVaT7P3Ca1mwknJ99edu0/xI+GQxsEI8yekytEGZbo/sfl82g+qDHnJCLLWyGW977nQ6gScZ2PluobBMt2fAehb5afssVoH4MMNIaaWqXVoIg+mxUq/DL3/EQieGAhpSvZuysjx4Us1xWxkPSLuSldX7nT4VhfSrN0otj5ORPHPur+7ypW6pdzAVSAKbzuNEVtqGjd+tNAqc+I/QmbQIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQBeG12omrbftm9A1qezQDtVaTtOXOUKhn2PKBaQHkgdZLhJJIlITTaumojLZu/rjiA0WWd5f6GW9yxjnOCOIn/iQk63u6BTk4uOO+e8OBXUgol4FkAAL8BjBEHSpZcrF0+7uePXvmMxgS/TdVUJ5AkVGddgnYdL95etKlfmBl5kry1C0QQ43fddykPoXUhH4HHkRliiomiinxcCud6EKSu7RA7ccwedcqNbbvgox9S2yMMyeYK1DVq7V13LOTek7HvJRYMs9ctaZcpbvwuix/r8PrhnLXovBeesqVP90LZEgCqkhOU5Qg99UVc/7cohLLVrRnQWP2ImxyAx4w+ypSyb\n-----END CERTIFICATE-----"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.9",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "211503",
            "pluginname": "Apache Tomcat 9.0.92 < 9.0.96 multiple vulnerabilities",
            "hostname": "",
            "port": "80",
            "protocol": "tcp",
            "severity": "4",
            "description": "The version of Tomcat installed on the remote host is prior to 9.0.96. It is, therefore, affected by multiple vulnerabilities as referenced in the fixed_in_apache_tomcat_9.0.96_security-9 advisory.\n\n  - Incorrect object re-cycling and re-use vulnerability in Apache Tomcat. Incorrect recycling of the request     and response used by HTTP/2 requests could lead to request and/or response mix-up between users. This     issue affects Apache Tomcat: from 11.0.0-M23 through 11.0.0-M26, from 10.1.27 through 10.1.30, from 9.0.92     through 9.0.95. Users are recommended to upgrade to version 11.0.0, 10.1.31 or 9.0.96, which fixes the     issue. (CVE-2024-52317)\n\n  - Unchecked Error Condition vulnerability in Apache Tomcat. If Tomcat is configured to use a custom Jakarta     Authentication (formerly JASPIC) ServerAuthContext component which may throw an exception during the     authentication process without explicitly setting an HTTP status to indicate failure, the authentication     may not fail, allowing the user to bypass the authentication process. There are no known Jakarta     Authentication components that behave in this way. This issue affects Apache Tomcat: from 11.0.0-M1     through 11.0.0-M26, from 10.1.0-M1 through 10.1.30, from 9.0.0-M1 through 9.0.95. Users are recommended to     upgrade to version 11.0.0, 10.1.31 or 9.0.96, which fix the issue. (CVE-2024-52316)\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Apache Tomcat version 9.0.96 or later.",
            "cve": "CVE-2024-52316",
            "cvss3": "9.8",
            "cvss2": "7.5",
            "see_also": "http://www.nessus.org/u?b59e0a8f\nhttp://www.nessus.org/u?518ab8d8\nhttp://www.nessus.org/u?f9ad966a",
            "plugin_output": "URL               : http://10.27.5.9/\nInstalled version : 9.0.93\nFixed version     : 9.0.96"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.9",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "211503",
            "pluginname": "Apache Tomcat 9.0.92 < 9.0.96 multiple vulnerabilities",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "4",
            "description": "The version of Tomcat installed on the remote host is prior to 9.0.96. It is, therefore, affected by multiple vulnerabilities as referenced in the fixed_in_apache_tomcat_9.0.96_security-9 advisory.\n\n  - Incorrect object re-cycling and re-use vulnerability in Apache Tomcat. Incorrect recycling of the request     and response used by HTTP/2 requests could lead to request and/or response mix-up between users. This     issue affects Apache Tomcat: from 11.0.0-M23 through 11.0.0-M26, from 10.1.27 through 10.1.30, from 9.0.92     through 9.0.95. Users are recommended to upgrade to version 11.0.0, 10.1.31 or 9.0.96, which fixes the     issue. (CVE-2024-52317)\n\n  - Unchecked Error Condition vulnerability in Apache Tomcat. If Tomcat is configured to use a custom Jakarta     Authentication (formerly JASPIC) ServerAuthContext component which may throw an exception during the     authentication process without explicitly setting an HTTP status to indicate failure, the authentication     may not fail, allowing the user to bypass the authentication process. There are no known Jakarta     Authentication components that behave in this way. This issue affects Apache Tomcat: from 11.0.0-M1     through 11.0.0-M26, from 10.1.0-M1 through 10.1.30, from 9.0.0-M1 through 9.0.95. Users are recommended to     upgrade to version 11.0.0, 10.1.31 or 9.0.96, which fix the issue. (CVE-2024-52316)\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Apache Tomcat version 9.0.96 or later.",
            "cve": "CVE-2024-52316",
            "cvss3": "9.8",
            "cvss2": "7.5",
            "see_also": "http://www.nessus.org/u?b59e0a8f\nhttp://www.nessus.org/u?518ab8d8\nhttp://www.nessus.org/u?f9ad966a",
            "plugin_output": "URL               : https://10.27.5.9/\nInstalled version : 9.0.93\nFixed version     : 9.0.96"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.9",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "12085",
            "pluginname": "Apache Tomcat Default Files",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The default error page, default index page, example JSPs and/or example servlets are installed on the remote Apache Tomcat server. These files should be removed as they may help an attacker uncover information about the remote Tomcat install or host itself.",
            "solution": "Delete the default index page and remove the example JSP and servlets. Follow the Tomcat or OWASP instructions to replace or modify the default error page.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?4cb3b4dd\nhttps://www.owasp.org/index.php/Securing_tomcat",
            "plugin_output": "The server is not configured to return a custom page in the event of a client requesting a non-existent resource.\nThis may result in a potential disclosure of sensitive information about the server to attackers."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.9",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "12085",
            "pluginname": "Apache Tomcat Default Files",
            "hostname": "",
            "port": "80",
            "protocol": "tcp",
            "severity": "2",
            "description": "The default error page, default index page, example JSPs and/or example servlets are installed on the remote Apache Tomcat server. These files should be removed as they may help an attacker uncover information about the remote Tomcat install or host itself.",
            "solution": "Delete the default index page and remove the example JSP and servlets. Follow the Tomcat or OWASP instructions to replace or modify the default error page.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?4cb3b4dd\nhttps://www.owasp.org/index.php/Securing_tomcat",
            "plugin_output": "The server is not configured to return a custom page in the event of a client requesting a non-existent resource.\nThis may result in a potential disclosure of sensitive information about the server to attackers."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.9",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -480 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.8",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=acsi-sw-096"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.8",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=acsi-sw-096\n|-Issuer  : CN=acsi-sw-096"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.6",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.6",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.6",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.6",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.6",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "45411",
            "pluginname": "SSL Certificate with Wrong Hostname",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The 'commonName' (CN) attribute of the SSL certificate presented for this service is for a different machine.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The identities known by Nessus are :\n10.27.5.6\n10.27.5.6\nThe Common Name in the certificate is :\nworksheets.acercsi.com\nThe Subject Alternate Names in the certificate are :\nworksheets.acercsi.com\nwww.worksheets.acercsi.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.6",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "58453",
            "pluginname": "Terminal Services Doesn't Use Network Level Authentication (NLA) Only",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote Terminal Services is not configured to use Network Level Authentication (NLA) only. NLA uses the Credential Security Support Provider (CredSSP) protocol to perform strong server authentication either through TLS/SSL or Kerberos mechanisms, which protect against man-in-the-middle attacks. In addition to improving authentication, NLA also helps protect the remote computer from malicious users and software by completing user authentication before a full RDP connection is established.",
            "solution": "Enable Network Level Authentication (NLA) on the remote RDP server. This is generally done on the 'Remote' tab of the 'System' settings on Windows.",
            "cve": "",
            "cvss3": "4.0",
            "cvss2": "4.3",
            "see_also": "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc732713(v=ws.11)\nhttp://www.nessus.org/u?e2628096",
            "plugin_output": "Nessus was able to negotiate non-NLA (Network Level Authentication) security."
        },
        {
            "file_no": 0,
            "ip": "10.27.5.6",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=acsi-sw-108"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.6",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=acsi-sw-108\n|-Issuer  : CN=acsi-sw-108"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.6",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "45410",
            "pluginname": "SSL Certificate 'commonName' Mismatch",
            "hostname": "\nacsi-sw-108\n",
            "port": "443",
            "protocol": "tcp",
            "severity": "0",
            "description": "The service running on the remote host presents an SSL certificate for which the 'commonName' (CN) attribute does not match the hostname on which the service listens.",
            "solution": "If the machine has several names, make sure that users connect to the service through the DNS hostname that matches the common name in the certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "",
            "plugin_output": "The host name known by Nessus is :\nacsi-sw-108\nThe Common Name in the certificate is :\nworksheets.acercsi.com\nThe Subject Alternate Names in the certificate are :\nworksheets.acercsi.com\nwww.worksheets.acercsi.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.5.6",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "57608",
            "pluginname": "SMB Signing not required",
            "hostname": "",
            "port": "445",
            "protocol": "tcp",
            "severity": "2",
            "description": "Signing is not required on the remote SMB server. An unauthenticated, remote attacker can exploit this to conduct man-in-the-middle attacks against the SMB server.",
            "solution": "Enforce message signing in the host's configuration. On Windows, this is found in the policy setting 'Microsoft network server: Digitally sign communications (always)'. On Samba, the setting is called 'server signing'. See the 'see also' links for further details.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?df39b8b3\nhttp://technet.microsoft.com/en-us/library/cc731957.aspx\nhttp://www.nessus.org/u?74b80723\nhttps://www.samba.org/samba/docs/current/man-html/smb.conf.5.html\nhttp://www.nessus.org/u?a3cac4ea",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.4.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.203",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 4 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.141",
            "system": "Dell iDRAC",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.141",
            "system": "Dell iDRAC",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.141",
            "system": "Dell iDRAC",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC7 default certificate"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.141",
            "system": "Dell iDRAC",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC7 default certificate"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.141",
            "system": "Dell iDRAC",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC7 default certificate\n|-Not After : Jun 04 23:54:19 2021 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC7 default certificate\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC7 default certificate"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.141",
            "system": "Dell iDRAC",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC7 default certificate\n|-Not After : Jun 04 23:54:19 2021 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC7 default certificate\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC7 default certificate"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.141",
            "system": "Dell iDRAC",
            "os": "other",
            "pluginid": "35291",
            "pluginname": "SSL Certificate Signed Using Weak Hashing Algorithm",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote service uses an SSL certificate chain that has been signed using a cryptographically weak hashing algorithm (e.g. MD2, MD4, MD5, or SHA1). These signature algorithms are known to be vulnerable to collision attacks. An attacker can exploit this to generate another certificate with the same digital signature, allowing an attacker to masquerade as the affected service.\n\nNote that this plugin reports all SSL certificate chains signed with SHA-1 that expire after January 1, 2017 as vulnerable. This is in accordance with Google's gradual sunsetting of the SHA-1 cryptographic hash algorithm.\n\nNote that certificates in the chain that are contained in the Nessus CA database (known_CA.inc) have been ignored.",
            "solution": "Contact the Certificate Authority to have the SSL certificate reissued.",
            "cve": "CVE-2004-2761",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://tools.ietf.org/html/rfc3279\nhttp://www.nessus.org/u?9bb87bf2\nhttp://www.nessus.org/u?e120eea1\nhttp://www.nessus.org/u?5d894816\nhttp://www.nessus.org/u?51db68aa\nhttp://www.nessus.org/u?9dc7bfba",
            "plugin_output": "The following certificates were part of the certificate chain sent by\nthe remote host, but contain hashes that are considered to be weak.\nSubject             : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC7 default certificate\nSignature Algorithm : SHA-1 With RSA Encryption\nValid From          : Jun 07 23:54:19 2011 GMT\nValid To            : Jun 04 23:54:19 2021 GMT\nRaw PEM certificate :\n-----BEGIN CERTIFICATE-----\nMIIDdDCCAt2gAwIBAgIBATANBgkqhkiG9w0BAQUFADCBiTELMAkGA1UEBhMCVVMxDjAMBgNVBAgTBVRleGFzMRMwEQYDVQQHEwpSb3VuZCBSb2NrMRIwEAYDVQQKEwlEZWxsIEluYy4xHDAaBgNVBAsTE1JlbW90ZSBBY2Nlc3MgR3JvdXAxIzAhBgNVBAMTGmlEUkFDNyBkZWZhdWx0IGNlcnRpZmljYXRlMB4XDTExMDYwNzIzNTQxOVoXDTIxMDYwNDIzNTQxOVowgYkxCzAJBgNVBAYTAlVTMQ4wDAYDVQQIEwVUZXhhczETMBEGA1UEBxMKUm91bmQgUm9jazESMBAGA1UEChMJRGVsbCBJbmMuMRwwGgYDVQQLExNSZW1vdGUgQWNjZXNzIEdyb3VwMSMwIQYDVQQDExppRFJBQzcgZGVmYXVsdCBjZXJ0aWZpY2F0ZTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAugi3cinKGfvL8Wi9JRbbsKVyDZj0T8gwmNiVIWjGNxFec1Ev3WzLcI43GNylNEIL5iLuHhuIKb1M3ahHNdfmvPdZCPCghQBWnlwoo3fMhVaQyES5q1eJFbDWJl80S1aLV5xiFGzUYJSElzBCSfnqNWiYwppIdk2Ri+i/jNc1uc0CAwEAAaOB6TCB5jAdBgNVHQ4EFgQUybet+hYTCVUv7YmnhfEL1bXLRfwwgbYGA1UdIwSBrjCBq4AUybet+hYTCVUv7YmnhfEL1bXLRfyhgY+kgYwwgYkxCzAJBgNVBAYTAlVTMQ4wDAYDVQQIEwVUZXhhczETMBEGA1UEBxMKUm91bmQgUm9jazESMBAGA1UEChMJRGVsbCBJbmMuMRwwGgYDVQQLExNSZW1vdGUgQWNjZXNzIEdyb3VwMSMwIQYDVQQDExppRFJBQzcgZGVmYXVsdCBjZXJ0aWZpY2F0ZYIBATAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUAA4GBAAacuXHbG2owadVJkdQOO4I8QPZgVT1Od3VzUFPU7NBoWIdYDCT9fpnuywMvo/0jazlKCBMT+gkoNJrIRQ+qToTyzp12hRNR6zEu8acEJS7NLzR+dhBtO2A66RT50nQX/exXZUj/Zd3PIvdHVhvLlt8eTeYyr5i5WQ+C/Um9B7lC\n-----END CERTIFICATE-----"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.141",
            "system": "Dell iDRAC",
            "os": "other",
            "pluginid": "35291",
            "pluginname": "SSL Certificate Signed Using Weak Hashing Algorithm",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote service uses an SSL certificate chain that has been signed using a cryptographically weak hashing algorithm (e.g. MD2, MD4, MD5, or SHA1). These signature algorithms are known to be vulnerable to collision attacks. An attacker can exploit this to generate another certificate with the same digital signature, allowing an attacker to masquerade as the affected service.\n\nNote that this plugin reports all SSL certificate chains signed with SHA-1 that expire after January 1, 2017 as vulnerable. This is in accordance with Google's gradual sunsetting of the SHA-1 cryptographic hash algorithm.\n\nNote that certificates in the chain that are contained in the Nessus CA database (known_CA.inc) have been ignored.",
            "solution": "Contact the Certificate Authority to have the SSL certificate reissued.",
            "cve": "CVE-2004-2761",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://tools.ietf.org/html/rfc3279\nhttp://www.nessus.org/u?9bb87bf2\nhttp://www.nessus.org/u?e120eea1\nhttp://www.nessus.org/u?5d894816\nhttp://www.nessus.org/u?51db68aa\nhttp://www.nessus.org/u?9dc7bfba",
            "plugin_output": "The following certificates were part of the certificate chain sent by\nthe remote host, but contain hashes that are considered to be weak.\nSubject             : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC7 default certificate\nSignature Algorithm : SHA-1 With RSA Encryption\nValid From          : Jun 07 23:54:19 2011 GMT\nValid To            : Jun 04 23:54:19 2021 GMT\nRaw PEM certificate :\n-----BEGIN CERTIFICATE-----\nMIIDdDCCAt2gAwIBAgIBATANBgkqhkiG9w0BAQUFADCBiTELMAkGA1UEBhMCVVMxDjAMBgNVBAgTBVRleGFzMRMwEQYDVQQHEwpSb3VuZCBSb2NrMRIwEAYDVQQKEwlEZWxsIEluYy4xHDAaBgNVBAsTE1JlbW90ZSBBY2Nlc3MgR3JvdXAxIzAhBgNVBAMTGmlEUkFDNyBkZWZhdWx0IGNlcnRpZmljYXRlMB4XDTExMDYwNzIzNTQxOVoXDTIxMDYwNDIzNTQxOVowgYkxCzAJBgNVBAYTAlVTMQ4wDAYDVQQIEwVUZXhhczETMBEGA1UEBxMKUm91bmQgUm9jazESMBAGA1UEChMJRGVsbCBJbmMuMRwwGgYDVQQLExNSZW1vdGUgQWNjZXNzIEdyb3VwMSMwIQYDVQQDExppRFJBQzcgZGVmYXVsdCBjZXJ0aWZpY2F0ZTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAugi3cinKGfvL8Wi9JRbbsKVyDZj0T8gwmNiVIWjGNxFec1Ev3WzLcI43GNylNEIL5iLuHhuIKb1M3ahHNdfmvPdZCPCghQBWnlwoo3fMhVaQyES5q1eJFbDWJl80S1aLV5xiFGzUYJSElzBCSfnqNWiYwppIdk2Ri+i/jNc1uc0CAwEAAaOB6TCB5jAdBgNVHQ4EFgQUybet+hYTCVUv7YmnhfEL1bXLRfwwgbYGA1UdIwSBrjCBq4AUybet+hYTCVUv7YmnhfEL1bXLRfyhgY+kgYwwgYkxCzAJBgNVBAYTAlVTMQ4wDAYDVQQIEwVUZXhhczETMBEGA1UEBxMKUm91bmQgUm9jazESMBAGA1UEChMJRGVsbCBJbmMuMRwwGgYDVQQLExNSZW1vdGUgQWNjZXNzIEdyb3VwMSMwIQYDVQQDExppRFJBQzcgZGVmYXVsdCBjZXJ0aWZpY2F0ZYIBATAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUAA4GBAAacuXHbG2owadVJkdQOO4I8QPZgVT1Od3VzUFPU7NBoWIdYDCT9fpnuywMvo/0jazlKCBMT+gkoNJrIRQ+qToTyzp12hRNR6zEu8acEJS7NLzR+dhBtO2A66RT50nQX/exXZUj/Zd3PIvdHVhvLlt8eTeYyr5i5WQ+C/Um9B7lC\n-----END CERTIFICATE-----"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.141",
            "system": "Dell iDRAC",
            "os": "other",
            "pluginid": "69551",
            "pluginname": "SSL Certificate Chain Contains RSA Keys Less Than 2048 bits",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "1",
            "description": "At least one of the X.509 certificates sent by the remote host has a key that is shorter than 2048 bits. According to industry standards set by the Certification Authority/Browser (CA/B) Forum, certificates issued after January 1, 2014 must be at least 2048 bits.\n\nSome browser SSL implementations may reject keys less than 2048 bits after January 1, 2014. Additionally, some SSL certificate vendors may revoke certificates less than 2048 bits before January 1, 2014.\n\nNote that Nessus will not flag root certificates with RSA keys less than 2048 bits if they were issued prior to December 31, 2010, as the standard considers them exempt.",
            "solution": "Replace the certificate in the chain with the RSA key less than 2048 bits in length with a longer key, and reissue any certificates signed by the old certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "https://www.cabforum.org/wp-content/uploads/Baseline_Requirements_V1.pdf",
            "plugin_output": "The following certificates were part of the certificate chain\nsent by the remote host, but contain RSA keys that are considered\nto be weak :\n|-Subject        : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC7 default certificate\n|-RSA Key Length : 1024 bits"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.141",
            "system": "Dell iDRAC",
            "os": "other",
            "pluginid": "69551",
            "pluginname": "SSL Certificate Chain Contains RSA Keys Less Than 2048 bits",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "At least one of the X.509 certificates sent by the remote host has a key that is shorter than 2048 bits. According to industry standards set by the Certification Authority/Browser (CA/B) Forum, certificates issued after January 1, 2014 must be at least 2048 bits.\n\nSome browser SSL implementations may reject keys less than 2048 bits after January 1, 2014. Additionally, some SSL certificate vendors may revoke certificates less than 2048 bits before January 1, 2014.\n\nNote that Nessus will not flag root certificates with RSA keys less than 2048 bits if they were issued prior to December 31, 2010, as the standard considers them exempt.",
            "solution": "Replace the certificate in the chain with the RSA key less than 2048 bits in length with a longer key, and reissue any certificates signed by the old certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "https://www.cabforum.org/wp-content/uploads/Baseline_Requirements_V1.pdf",
            "plugin_output": "The following certificates were part of the certificate chain\nsent by the remote host, but contain RSA keys that are considered\nto be weak :\n|-Subject        : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC7 default certificate\n|-RSA Key Length : 1024 bits"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.141",
            "system": "Dell iDRAC",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Texas, L=Round Rock, O=Dell Inc., OU=Remote Access Group, CN=iDRAC7 default certificate\nIssuer           : C=US, ST=Texas, L=Round Rock, O=Dell Inc., OU=Remote Access Group, CN=iDRAC7 default certificate\nNot valid before : Jun  7 23:54:19 2011 GMT\nNot valid after  : Jun  4 23:54:19 2021 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.141",
            "system": "Dell iDRAC",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Texas, L=Round Rock, O=Dell Inc., OU=Remote Access Group, CN=iDRAC7 default certificate\nIssuer           : C=US, ST=Texas, L=Round Rock, O=Dell Inc., OU=Remote Access Group, CN=iDRAC7 default certificate\nNot valid before : Jun  7 23:54:19 2011 GMT\nNot valid after  : Jun  4 23:54:19 2021 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.80",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "57608",
            "pluginname": "SMB Signing not required",
            "hostname": "",
            "port": "445",
            "protocol": "tcp",
            "severity": "2",
            "description": "Signing is not required on the remote SMB server. An unauthenticated, remote attacker can exploit this to conduct man-in-the-middle attacks against the SMB server.",
            "solution": "Enforce message signing in the host's configuration. On Windows, this is found in the policy setting 'Microsoft network server: Digitally sign communications (always)'. On Samba, the setting is called 'server signing'. See the 'see also' links for further details.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?df39b8b3\nhttp://technet.microsoft.com/en-us/library/cc731957.aspx\nhttp://www.nessus.org/u?74b80723\nhttps://www.samba.org/samba/docs/current/man-html/smb.conf.5.html\nhttp://www.nessus.org/u?a3cac4ea",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.4.79",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "57608",
            "pluginname": "SMB Signing not required",
            "hostname": "",
            "port": "445",
            "protocol": "tcp",
            "severity": "2",
            "description": "Signing is not required on the remote SMB server. An unauthenticated, remote attacker can exploit this to conduct man-in-the-middle attacks against the SMB server.",
            "solution": "Enforce message signing in the host's configuration. On Windows, this is found in the policy setting 'Microsoft network server: Digitally sign communications (always)'. On Samba, the setting is called 'server signing'. See the 'see also' links for further details.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?df39b8b3\nhttp://technet.microsoft.com/en-us/library/cc731957.aspx\nhttp://www.nessus.org/u?74b80723\nhttps://www.samba.org/samba/docs/current/man-html/smb.conf.5.html\nhttp://www.nessus.org/u?a3cac4ea",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.4.77",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.77",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.77",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.77",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "58453",
            "pluginname": "Terminal Services Doesn't Use Network Level Authentication (NLA) Only",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote Terminal Services is not configured to use Network Level Authentication (NLA) only. NLA uses the Credential Security Support Provider (CredSSP) protocol to perform strong server authentication either through TLS/SSL or Kerberos mechanisms, which protect against man-in-the-middle attacks. In addition to improving authentication, NLA also helps protect the remote computer from malicious users and software by completing user authentication before a full RDP connection is established.",
            "solution": "Enable Network Level Authentication (NLA) on the remote RDP server. This is generally done on the 'Remote' tab of the 'System' settings on Windows.",
            "cve": "",
            "cvss3": "4.0",
            "cvss2": "4.3",
            "see_also": "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc732713(v=ws.11)\nhttp://www.nessus.org/u?e2628096",
            "plugin_output": "Nessus was able to negotiate non-NLA (Network Level Authentication) security."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.77",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=acsi-sw-111"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.77",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=acsi-sw-111\n|-Issuer  : CN=acsi-sw-111"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.77",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "57608",
            "pluginname": "SMB Signing not required",
            "hostname": "",
            "port": "445",
            "protocol": "tcp",
            "severity": "2",
            "description": "Signing is not required on the remote SMB server. An unauthenticated, remote attacker can exploit this to conduct man-in-the-middle attacks against the SMB server.",
            "solution": "Enforce message signing in the host's configuration. On Windows, this is found in the policy setting 'Microsoft network server: Digitally sign communications (always)'. On Samba, the setting is called 'server signing'. See the 'see also' links for further details.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?df39b8b3\nhttp://technet.microsoft.com/en-us/library/cc731957.aspx\nhttp://www.nessus.org/u?74b80723\nhttps://www.samba.org/samba/docs/current/man-html/smb.conf.5.html\nhttp://www.nessus.org/u?a3cac4ea",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.4.76",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.76",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.76",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.76",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.76",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "58453",
            "pluginname": "Terminal Services Doesn't Use Network Level Authentication (NLA) Only",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote Terminal Services is not configured to use Network Level Authentication (NLA) only. NLA uses the Credential Security Support Provider (CredSSP) protocol to perform strong server authentication either through TLS/SSL or Kerberos mechanisms, which protect against man-in-the-middle attacks. In addition to improving authentication, NLA also helps protect the remote computer from malicious users and software by completing user authentication before a full RDP connection is established.",
            "solution": "Enable Network Level Authentication (NLA) on the remote RDP server. This is generally done on the 'Remote' tab of the 'System' settings on Windows.",
            "cve": "",
            "cvss3": "4.0",
            "cvss2": "4.3",
            "see_also": "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc732713(v=ws.11)\nhttp://www.nessus.org/u?e2628096",
            "plugin_output": "Nessus was able to negotiate non-NLA (Network Level Authentication) security."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.76",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=ACSI-SW-021"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.76",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=ACSI-SW-021\n|-Issuer  : CN=ACSI-SW-021"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.76",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "57608",
            "pluginname": "SMB Signing not required",
            "hostname": "",
            "port": "445",
            "protocol": "tcp",
            "severity": "2",
            "description": "Signing is not required on the remote SMB server. An unauthenticated, remote attacker can exploit this to conduct man-in-the-middle attacks against the SMB server.",
            "solution": "Enforce message signing in the host's configuration. On Windows, this is found in the policy setting 'Microsoft network server: Digitally sign communications (always)'. On Samba, the setting is called 'server signing'. See the 'see also' links for further details.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?df39b8b3\nhttp://technet.microsoft.com/en-us/library/cc731957.aspx\nhttp://www.nessus.org/u?74b80723\nhttps://www.samba.org/samba/docs/current/man-html/smb.conf.5.html\nhttp://www.nessus.org/u?a3cac4ea",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.4.76",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The ICMP timestamps seem to be in little endian format (not in network format)\nThe difference between the local and remote clocks is 201 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.75",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "1433",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.75",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "1433",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.75",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "1433",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.75",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "1433",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.75",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "45411",
            "pluginname": "SSL Certificate with Wrong Hostname",
            "hostname": "",
            "port": "1433",
            "protocol": "tcp",
            "severity": "2",
            "description": "The 'commonName' (CN) attribute of the SSL certificate presented for this service is for a different machine.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The identities known by Nessus are :\n10.27.4.75\n10.27.4.75\nThe Common Name in the certificate is :\nWMSvc-SHA2-ACSI-SW-020"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.75",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "1433",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=WMSvc-SHA2-ACSI-SW-020"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.75",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "1433",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=WMSvc-SHA2-ACSI-SW-020\n|-Issuer  : CN=WMSvc-SHA2-ACSI-SW-020"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.75",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "45410",
            "pluginname": "SSL Certificate 'commonName' Mismatch",
            "hostname": "\nacsi-sw-020\n",
            "port": "1433",
            "protocol": "tcp",
            "severity": "0",
            "description": "The service running on the remote host presents an SSL certificate for which the 'commonName' (CN) attribute does not match the hostname on which the service listens.",
            "solution": "If the machine has several names, make sure that users connect to the service through the DNS hostname that matches the common name in the certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "",
            "plugin_output": "The host name known by Nessus is :\nacsi-sw-020\nThe Common Name in the certificate is :\nwmsvc-sha2-acsi-sw-020"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.75",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "57608",
            "pluginname": "SMB Signing not required",
            "hostname": "",
            "port": "445",
            "protocol": "tcp",
            "severity": "2",
            "description": "Signing is not required on the remote SMB server. An unauthenticated, remote attacker can exploit this to conduct man-in-the-middle attacks against the SMB server.",
            "solution": "Enforce message signing in the host's configuration. On Windows, this is found in the policy setting 'Microsoft network server: Digitally sign communications (always)'. On Samba, the setting is called 'server signing'. See the 'see also' links for further details.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?df39b8b3\nhttp://technet.microsoft.com/en-us/library/cc731957.aspx\nhttp://www.nessus.org/u?74b80723\nhttps://www.samba.org/samba/docs/current/man-html/smb.conf.5.html\nhttp://www.nessus.org/u?a3cac4ea",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.4.74",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=aceredc/OU=K2E630/CN=0.0.0.0/E=luke.tsai@acer.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.74",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taiwan/L=Taipei/O=aceredc/OU=K2E630/CN=0.0.0.0/E=luke.tsai@acer.com\n|-Issuer  : C=TW/ST=Taiwan/L=Taipei/O=aceredc/OU=K2E630/CN=0.0.0.0/E=luke.tsai@acer.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.74",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 62 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.73",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Taipei/L=J/O=ACSI/OU=ICD08A/CN=soc@support.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.73",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taipei/L=J/O=ACSI/OU=ICD08A/CN=soc@support.com\n|-Issuer  : C=TW/ST=Taipei/L=J/O=ACSI/OU=ICD08A/CN=soc@support.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.73",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -50 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.72",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "57608",
            "pluginname": "SMB Signing not required",
            "hostname": "",
            "port": "445",
            "protocol": "tcp",
            "severity": "2",
            "description": "Signing is not required on the remote SMB server. An unauthenticated, remote attacker can exploit this to conduct man-in-the-middle attacks against the SMB server.",
            "solution": "Enforce message signing in the host's configuration. On Windows, this is found in the policy setting 'Microsoft network server: Digitally sign communications (always)'. On Samba, the setting is called 'server signing'. See the 'see also' links for further details.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?df39b8b3\nhttp://technet.microsoft.com/en-us/library/cc731957.aspx\nhttp://www.nessus.org/u?74b80723\nhttps://www.samba.org/samba/docs/current/man-html/smb.conf.5.html\nhttp://www.nessus.org/u?a3cac4ea",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.4.71",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "57608",
            "pluginname": "SMB Signing not required",
            "hostname": "",
            "port": "445",
            "protocol": "tcp",
            "severity": "2",
            "description": "Signing is not required on the remote SMB server. An unauthenticated, remote attacker can exploit this to conduct man-in-the-middle attacks against the SMB server.",
            "solution": "Enforce message signing in the host's configuration. On Windows, this is found in the policy setting 'Microsoft network server: Digitally sign communications (always)'. On Samba, the setting is called 'server signing'. See the 'see also' links for further details.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?df39b8b3\nhttp://technet.microsoft.com/en-us/library/cc731957.aspx\nhttp://www.nessus.org/u?74b80723\nhttps://www.samba.org/samba/docs/current/man-html/smb.conf.5.html\nhttp://www.nessus.org/u?a3cac4ea",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.4.70",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.70",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.70",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.70",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.70",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.70",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.70",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "58453",
            "pluginname": "Terminal Services Doesn't Use Network Level Authentication (NLA) Only",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote Terminal Services is not configured to use Network Level Authentication (NLA) only. NLA uses the Credential Security Support Provider (CredSSP) protocol to perform strong server authentication either through TLS/SSL or Kerberos mechanisms, which protect against man-in-the-middle attacks. In addition to improving authentication, NLA also helps protect the remote computer from malicious users and software by completing user authentication before a full RDP connection is established.",
            "solution": "Enable Network Level Authentication (NLA) on the remote RDP server. This is generally done on the 'Remote' tab of the 'System' settings on Windows.",
            "cve": "",
            "cvss3": "4.0",
            "cvss2": "4.3",
            "see_also": "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc732713(v=ws.11)\nhttp://www.nessus.org/u?e2628096",
            "plugin_output": "Nessus was able to negotiate non-NLA (Network Level Authentication) security."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.70",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=acsi-sw-095"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.70",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=Cloudbase-Init WinRM"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.70",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=acsi-sw-095\n|-Issuer  : CN=acsi-sw-095"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.70",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=Cloudbase-Init WinRM\n|-Issuer  : CN=Cloudbase-Init WinRM"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.70",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "35291",
            "pluginname": "SSL Certificate Signed Using Weak Hashing Algorithm",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote service uses an SSL certificate chain that has been signed using a cryptographically weak hashing algorithm (e.g. MD2, MD4, MD5, or SHA1). These signature algorithms are known to be vulnerable to collision attacks. An attacker can exploit this to generate another certificate with the same digital signature, allowing an attacker to masquerade as the affected service.\n\nNote that this plugin reports all SSL certificate chains signed with SHA-1 that expire after January 1, 2017 as vulnerable. This is in accordance with Google's gradual sunsetting of the SHA-1 cryptographic hash algorithm.\n\nNote that certificates in the chain that are contained in the Nessus CA database (known_CA.inc) have been ignored.",
            "solution": "Contact the Certificate Authority to have the SSL certificate reissued.",
            "cve": "CVE-2004-2761",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://tools.ietf.org/html/rfc3279\nhttp://www.nessus.org/u?9bb87bf2\nhttp://www.nessus.org/u?e120eea1\nhttp://www.nessus.org/u?5d894816\nhttp://www.nessus.org/u?51db68aa\nhttp://www.nessus.org/u?9dc7bfba",
            "plugin_output": "The following certificates were part of the certificate chain sent by\nthe remote host, but contain hashes that are considered to be weak.\nSubject             : CN=Cloudbase-Init WinRM\nSignature Algorithm : SHA-1 With RSA Encryption\nValid From          : Sep 08 07:43:33 2020 GMT\nValid To            : Sep 07 07:43:33 2030 GMT\nRaw PEM certificate :\n-----BEGIN CERTIFICATE-----\nMIICxjCCAa6gAwIBAgIQaTn6T4uTgrhL4UX1xNwY6TANBgkqhkiG9w0BAQUFADAfMR0wGwYDVQQDExRDbG91ZGJhc2UtSW5pdCBXaW5STTAeFw0yMDA5MDgwNzQzMzNaFw0zMDA5MDcwNzQzMzNaMB8xHTAbBgNVBAMTFENsb3VkYmFzZS1Jbml0IFdpblJNMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvULtdLsobzpRry4CJjTq5XAUBrKwVstB/b3RfFXYxlmY9Li8hd+GLrtbVTyu6W7L41YrzZgGbKhe8awUY8qTQJqc5MHy/kb/Hm4edOlufzcZTB4R9/fEhdYWM5cs0rfzAAKYVaT7P3Ca1mwknJ99edu0/xI+GQxsEI8yekytEGZbo/sfl82g+qDHnJCLLWyGW977nQ6gScZ2PluobBMt2fAehb5afssVoH4MMNIaaWqXVoIg+mxUq/DL3/EQieGAhpSvZuysjx4Us1xWxkPSLuSldX7nT4VhfSrN0otj5ORPHPur+7ypW6pdzAVSAKbzuNEVtqGjd+tNAqc+I/QmbQIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQBeG12omrbftm9A1qezQDtVaTtOXOUKhn2PKBaQHkgdZLhJJIlITTaumojLZu/rjiA0WWd5f6GW9yxjnOCOIn/iQk63u6BTk4uOO+e8OBXUgol4FkAAL8BjBEHSpZcrF0+7uePXvmMxgS/TdVUJ5AkVGddgnYdL95etKlfmBl5kry1C0QQ43fddykPoXUhH4HHkRliiomiinxcCud6EKSu7RA7ccwedcqNbbvgox9S2yMMyeYK1DVq7V13LOTek7HvJRYMs9ctaZcpbvwuix/r8PrhnLXovBeesqVP90LZEgCqkhOU5Qg99UVc/7cohLLVrRnQWP2ImxyAx4w+ypSyb\n-----END CERTIFICATE-----"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.68",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.68",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.68",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.68",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.68",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.68",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.68",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=Cloudbase-Init WinRM"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.68",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=Cloudbase-Init WinRM\n|-Issuer  : CN=Cloudbase-Init WinRM"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.68",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : O=Trend Micro internal CA/CN=acsi-sw-094\n|-Issuer  : O=Trend Micro internal CA/CN=Trend Micro internal CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.68",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "35291",
            "pluginname": "SSL Certificate Signed Using Weak Hashing Algorithm",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote service uses an SSL certificate chain that has been signed using a cryptographically weak hashing algorithm (e.g. MD2, MD4, MD5, or SHA1). These signature algorithms are known to be vulnerable to collision attacks. An attacker can exploit this to generate another certificate with the same digital signature, allowing an attacker to masquerade as the affected service.\n\nNote that this plugin reports all SSL certificate chains signed with SHA-1 that expire after January 1, 2017 as vulnerable. This is in accordance with Google's gradual sunsetting of the SHA-1 cryptographic hash algorithm.\n\nNote that certificates in the chain that are contained in the Nessus CA database (known_CA.inc) have been ignored.",
            "solution": "Contact the Certificate Authority to have the SSL certificate reissued.",
            "cve": "CVE-2004-2761",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://tools.ietf.org/html/rfc3279\nhttp://www.nessus.org/u?9bb87bf2\nhttp://www.nessus.org/u?e120eea1\nhttp://www.nessus.org/u?5d894816\nhttp://www.nessus.org/u?51db68aa\nhttp://www.nessus.org/u?9dc7bfba",
            "plugin_output": "The following certificates were part of the certificate chain sent by\nthe remote host, but contain hashes that are considered to be weak.\nSubject             : CN=Cloudbase-Init WinRM\nSignature Algorithm : SHA-1 With RSA Encryption\nValid From          : Sep 08 07:43:33 2020 GMT\nValid To            : Sep 07 07:43:33 2030 GMT\nRaw PEM certificate :\n-----BEGIN CERTIFICATE-----\nMIICxjCCAa6gAwIBAgIQaTn6T4uTgrhL4UX1xNwY6TANBgkqhkiG9w0BAQUFADAfMR0wGwYDVQQDExRDbG91ZGJhc2UtSW5pdCBXaW5STTAeFw0yMDA5MDgwNzQzMzNaFw0zMDA5MDcwNzQzMzNaMB8xHTAbBgNVBAMTFENsb3VkYmFzZS1Jbml0IFdpblJNMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvULtdLsobzpRry4CJjTq5XAUBrKwVstB/b3RfFXYxlmY9Li8hd+GLrtbVTyu6W7L41YrzZgGbKhe8awUY8qTQJqc5MHy/kb/Hm4edOlufzcZTB4R9/fEhdYWM5cs0rfzAAKYVaT7P3Ca1mwknJ99edu0/xI+GQxsEI8yekytEGZbo/sfl82g+qDHnJCLLWyGW977nQ6gScZ2PluobBMt2fAehb5afssVoH4MMNIaaWqXVoIg+mxUq/DL3/EQieGAhpSvZuysjx4Us1xWxkPSLuSldX7nT4VhfSrN0otj5ORPHPur+7ypW6pdzAVSAKbzuNEVtqGjd+tNAqc+I/QmbQIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQBeG12omrbftm9A1qezQDtVaTtOXOUKhn2PKBaQHkgdZLhJJIlITTaumojLZu/rjiA0WWd5f6GW9yxjnOCOIn/iQk63u6BTk4uOO+e8OBXUgol4FkAAL8BjBEHSpZcrF0+7uePXvmMxgS/TdVUJ5AkVGddgnYdL95etKlfmBl5kry1C0QQ43fddykPoXUhH4HHkRliiomiinxcCud6EKSu7RA7ccwedcqNbbvgox9S2yMMyeYK1DVq7V13LOTek7HvJRYMs9ctaZcpbvwuix/r8PrhnLXovBeesqVP90LZEgCqkhOU5Qg99UVc/7cohLLVrRnQWP2ImxyAx4w+ypSyb\n-----END CERTIFICATE-----"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.61",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.61",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.61",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.61",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=Cloudbase-Init WinRM"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.61",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=Cloudbase-Init WinRM\n|-Issuer  : CN=Cloudbase-Init WinRM"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.61",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "35291",
            "pluginname": "SSL Certificate Signed Using Weak Hashing Algorithm",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote service uses an SSL certificate chain that has been signed using a cryptographically weak hashing algorithm (e.g. MD2, MD4, MD5, or SHA1). These signature algorithms are known to be vulnerable to collision attacks. An attacker can exploit this to generate another certificate with the same digital signature, allowing an attacker to masquerade as the affected service.\n\nNote that this plugin reports all SSL certificate chains signed with SHA-1 that expire after January 1, 2017 as vulnerable. This is in accordance with Google's gradual sunsetting of the SHA-1 cryptographic hash algorithm.\n\nNote that certificates in the chain that are contained in the Nessus CA database (known_CA.inc) have been ignored.",
            "solution": "Contact the Certificate Authority to have the SSL certificate reissued.",
            "cve": "CVE-2004-2761",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://tools.ietf.org/html/rfc3279\nhttp://www.nessus.org/u?9bb87bf2\nhttp://www.nessus.org/u?e120eea1\nhttp://www.nessus.org/u?5d894816\nhttp://www.nessus.org/u?51db68aa\nhttp://www.nessus.org/u?9dc7bfba",
            "plugin_output": "The following certificates were part of the certificate chain sent by\nthe remote host, but contain hashes that are considered to be weak.\nSubject             : CN=Cloudbase-Init WinRM\nSignature Algorithm : SHA-1 With RSA Encryption\nValid From          : Sep 08 07:43:33 2020 GMT\nValid To            : Sep 07 07:43:33 2030 GMT\nRaw PEM certificate :\n-----BEGIN CERTIFICATE-----\nMIICxjCCAa6gAwIBAgIQaTn6T4uTgrhL4UX1xNwY6TANBgkqhkiG9w0BAQUFADAfMR0wGwYDVQQDExRDbG91ZGJhc2UtSW5pdCBXaW5STTAeFw0yMDA5MDgwNzQzMzNaFw0zMDA5MDcwNzQzMzNaMB8xHTAbBgNVBAMTFENsb3VkYmFzZS1Jbml0IFdpblJNMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvULtdLsobzpRry4CJjTq5XAUBrKwVstB/b3RfFXYxlmY9Li8hd+GLrtbVTyu6W7L41YrzZgGbKhe8awUY8qTQJqc5MHy/kb/Hm4edOlufzcZTB4R9/fEhdYWM5cs0rfzAAKYVaT7P3Ca1mwknJ99edu0/xI+GQxsEI8yekytEGZbo/sfl82g+qDHnJCLLWyGW977nQ6gScZ2PluobBMt2fAehb5afssVoH4MMNIaaWqXVoIg+mxUq/DL3/EQieGAhpSvZuysjx4Us1xWxkPSLuSldX7nT4VhfSrN0otj5ORPHPur+7ypW6pdzAVSAKbzuNEVtqGjd+tNAqc+I/QmbQIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQBeG12omrbftm9A1qezQDtVaTtOXOUKhn2PKBaQHkgdZLhJJIlITTaumojLZu/rjiA0WWd5f6GW9yxjnOCOIn/iQk63u6BTk4uOO+e8OBXUgol4FkAAL8BjBEHSpZcrF0+7uePXvmMxgS/TdVUJ5AkVGddgnYdL95etKlfmBl5kry1C0QQ43fddykPoXUhH4HHkRliiomiinxcCud6EKSu7RA7ccwedcqNbbvgox9S2yMMyeYK1DVq7V13LOTek7HvJRYMs9ctaZcpbvwuix/r8PrhnLXovBeesqVP90LZEgCqkhOU5Qg99UVc/7cohLLVrRnQWP2ImxyAx4w+ypSyb\n-----END CERTIFICATE-----"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.58",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 1781 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.56",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.55",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Taipei/L=J/O=ACSI/OU=ICD800/CN=soc@support.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.55",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taipei/L=J/O=ACSI/OU=ICD800/CN=soc@support.com\n|-Issuer  : C=TW/ST=Taipei/L=J/O=ACSI/OU=ICD800/CN=soc@support.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.55",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.54",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Taipei/L=J/O=ACSI/OU=JIRA/CN=soc@acercsi.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.54",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=TW/ST=Taipei/L=J/O=ACSI/OU=JIRA/CN=soc@acercsi.com\n|-Not After : Jul 15 07:47:27 2022 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taipei/L=J/O=ACSI/OU=JIRA/CN=soc@acercsi.com\n|-Issuer  : C=TW/ST=Taipei/L=J/O=ACSI/OU=JIRA/CN=soc@acercsi.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.54",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=TW, ST=Taipei, L=J, O=ACSI, OU=JIRA, CN=soc@acercsi.com\nIssuer           : C=TW, ST=Taipei, L=J, O=ACSI, OU=JIRA, CN=soc@acercsi.com\nNot valid before : Jul 15 07:47:27 2021 GMT\nNot valid after  : Jul 15 07:47:27 2022 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.54",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.53",
            "system": "Linux Kernel 4.15 on Ubuntu 18.04 (bionic)",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.48",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.48",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.48",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.48",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.48",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.48",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.48",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "58453",
            "pluginname": "Terminal Services Doesn't Use Network Level Authentication (NLA) Only",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote Terminal Services is not configured to use Network Level Authentication (NLA) only. NLA uses the Credential Security Support Provider (CredSSP) protocol to perform strong server authentication either through TLS/SSL or Kerberos mechanisms, which protect against man-in-the-middle attacks. In addition to improving authentication, NLA also helps protect the remote computer from malicious users and software by completing user authentication before a full RDP connection is established.",
            "solution": "Enable Network Level Authentication (NLA) on the remote RDP server. This is generally done on the 'Remote' tab of the 'System' settings on Windows.",
            "cve": "",
            "cvss3": "4.0",
            "cvss2": "4.3",
            "see_also": "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc732713(v=ws.11)\nhttp://www.nessus.org/u?e2628096",
            "plugin_output": "Nessus was able to negotiate non-NLA (Network Level Authentication) security."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.48",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=acsi-sw-069a"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.48",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=Cloudbase-Init WinRM"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.48",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=acsi-sw-069a\n|-Issuer  : CN=acsi-sw-069a"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.48",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=Cloudbase-Init WinRM\n|-Issuer  : CN=Cloudbase-Init WinRM"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.48",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "35291",
            "pluginname": "SSL Certificate Signed Using Weak Hashing Algorithm",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote service uses an SSL certificate chain that has been signed using a cryptographically weak hashing algorithm (e.g. MD2, MD4, MD5, or SHA1). These signature algorithms are known to be vulnerable to collision attacks. An attacker can exploit this to generate another certificate with the same digital signature, allowing an attacker to masquerade as the affected service.\n\nNote that this plugin reports all SSL certificate chains signed with SHA-1 that expire after January 1, 2017 as vulnerable. This is in accordance with Google's gradual sunsetting of the SHA-1 cryptographic hash algorithm.\n\nNote that certificates in the chain that are contained in the Nessus CA database (known_CA.inc) have been ignored.",
            "solution": "Contact the Certificate Authority to have the SSL certificate reissued.",
            "cve": "CVE-2004-2761",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://tools.ietf.org/html/rfc3279\nhttp://www.nessus.org/u?9bb87bf2\nhttp://www.nessus.org/u?e120eea1\nhttp://www.nessus.org/u?5d894816\nhttp://www.nessus.org/u?51db68aa\nhttp://www.nessus.org/u?9dc7bfba",
            "plugin_output": "The following certificates were part of the certificate chain sent by\nthe remote host, but contain hashes that are considered to be weak.\nSubject             : CN=Cloudbase-Init WinRM\nSignature Algorithm : SHA-1 With RSA Encryption\nValid From          : Sep 08 07:43:33 2020 GMT\nValid To            : Sep 07 07:43:33 2030 GMT\nRaw PEM certificate :\n-----BEGIN CERTIFICATE-----\nMIICxjCCAa6gAwIBAgIQaTn6T4uTgrhL4UX1xNwY6TANBgkqhkiG9w0BAQUFADAfMR0wGwYDVQQDExRDbG91ZGJhc2UtSW5pdCBXaW5STTAeFw0yMDA5MDgwNzQzMzNaFw0zMDA5MDcwNzQzMzNaMB8xHTAbBgNVBAMTFENsb3VkYmFzZS1Jbml0IFdpblJNMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvULtdLsobzpRry4CJjTq5XAUBrKwVstB/b3RfFXYxlmY9Li8hd+GLrtbVTyu6W7L41YrzZgGbKhe8awUY8qTQJqc5MHy/kb/Hm4edOlufzcZTB4R9/fEhdYWM5cs0rfzAAKYVaT7P3Ca1mwknJ99edu0/xI+GQxsEI8yekytEGZbo/sfl82g+qDHnJCLLWyGW977nQ6gScZ2PluobBMt2fAehb5afssVoH4MMNIaaWqXVoIg+mxUq/DL3/EQieGAhpSvZuysjx4Us1xWxkPSLuSldX7nT4VhfSrN0otj5ORPHPur+7ypW6pdzAVSAKbzuNEVtqGjd+tNAqc+I/QmbQIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQBeG12omrbftm9A1qezQDtVaTtOXOUKhn2PKBaQHkgdZLhJJIlITTaumojLZu/rjiA0WWd5f6GW9yxjnOCOIn/iQk63u6BTk4uOO+e8OBXUgol4FkAAL8BjBEHSpZcrF0+7uePXvmMxgS/TdVUJ5AkVGddgnYdL95etKlfmBl5kry1C0QQ43fddykPoXUhH4HHkRliiomiinxcCud6EKSu7RA7ccwedcqNbbvgox9S2yMMyeYK1DVq7V13LOTek7HvJRYMs9ctaZcpbvwuix/r8PrhnLXovBeesqVP90LZEgCqkhOU5Qg99UVc/7cohLLVrRnQWP2ImxyAx4w+ypSyb\n-----END CERTIFICATE-----"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.48",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The ICMP timestamps seem to be in little endian format (not in network format)\nThe remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.46",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 1529 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.45",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.41",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.41",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "4343",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.41",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.41",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "4343",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.41",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.41",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "4343",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.41",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.41",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "4343",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.41",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=acsi-sw-039"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.41",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "4343",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=10.27.4.41"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.41",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=acsi-sw-039\n|-Issuer  : CN=acsi-sw-039"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.41",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "4343",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : CN=10.27.4.41\n|-Not After : Mar 18 16:00:00 2023 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=10.27.4.41\n|-Issuer  : CN=10.27.4.41"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.41",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "4343",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : CN=10.27.4.41\nIssuer           : CN=10.27.4.41\nNot valid before : Mar 18 16:00:00 2020 GMT\nNot valid after  : Mar 18 16:00:00 2023 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.41",
            "system": "Microsoft Windows Server 2016 Standard 14393",
            "os": "windows",
            "pluginid": "57608",
            "pluginname": "SMB Signing not required",
            "hostname": "",
            "port": "445",
            "protocol": "tcp",
            "severity": "2",
            "description": "Signing is not required on the remote SMB server. An unauthenticated, remote attacker can exploit this to conduct man-in-the-middle attacks against the SMB server.",
            "solution": "Enforce message signing in the host's configuration. On Windows, this is found in the policy setting 'Microsoft network server: Digitally sign communications (always)'. On Samba, the setting is called 'server signing'. See the 'see also' links for further details.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?df39b8b3\nhttp://technet.microsoft.com/en-us/library/cc731957.aspx\nhttp://www.nessus.org/u?74b80723\nhttps://www.samba.org/samba/docs/current/man-html/smb.conf.5.html\nhttp://www.nessus.org/u?a3cac4ea",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.4.35",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.35",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.35",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.35",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.35",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.35",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.35",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "58453",
            "pluginname": "Terminal Services Doesn't Use Network Level Authentication (NLA) Only",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote Terminal Services is not configured to use Network Level Authentication (NLA) only. NLA uses the Credential Security Support Provider (CredSSP) protocol to perform strong server authentication either through TLS/SSL or Kerberos mechanisms, which protect against man-in-the-middle attacks. In addition to improving authentication, NLA also helps protect the remote computer from malicious users and software by completing user authentication before a full RDP connection is established.",
            "solution": "Enable Network Level Authentication (NLA) on the remote RDP server. This is generally done on the 'Remote' tab of the 'System' settings on Windows.",
            "cve": "",
            "cvss3": "4.0",
            "cvss2": "4.3",
            "see_also": "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc732713(v=ws.11)\nhttp://www.nessus.org/u?e2628096",
            "plugin_output": "Nessus was able to negotiate non-NLA (Network Level Authentication) security."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.35",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "45411",
            "pluginname": "SSL Certificate with Wrong Hostname",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The 'commonName' (CN) attribute of the SSL certificate presented for this service is for a different machine.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The identities known by Nessus are :\n10.27.4.35\n10.27.4.35\nThe Common Name in the certificate is :\nCloudbase-Init WinRM"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.35",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=acsi-sw-035a"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.35",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=acsi-sw-035a\n|-Issuer  : CN=acsi-sw-035a"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.35",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=Cloudbase-Init WinRM"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.35",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=Cloudbase-Init WinRM\n|-Issuer  : CN=Cloudbase-Init WinRM"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.35",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "35291",
            "pluginname": "SSL Certificate Signed Using Weak Hashing Algorithm",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote service uses an SSL certificate chain that has been signed using a cryptographically weak hashing algorithm (e.g. MD2, MD4, MD5, or SHA1). These signature algorithms are known to be vulnerable to collision attacks. An attacker can exploit this to generate another certificate with the same digital signature, allowing an attacker to masquerade as the affected service.\n\nNote that this plugin reports all SSL certificate chains signed with SHA-1 that expire after January 1, 2017 as vulnerable. This is in accordance with Google's gradual sunsetting of the SHA-1 cryptographic hash algorithm.\n\nNote that certificates in the chain that are contained in the Nessus CA database (known_CA.inc) have been ignored.",
            "solution": "Contact the Certificate Authority to have the SSL certificate reissued.",
            "cve": "CVE-2004-2761",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://tools.ietf.org/html/rfc3279\nhttp://www.nessus.org/u?9bb87bf2\nhttp://www.nessus.org/u?e120eea1\nhttp://www.nessus.org/u?5d894816\nhttp://www.nessus.org/u?51db68aa\nhttp://www.nessus.org/u?9dc7bfba",
            "plugin_output": "The following certificates were part of the certificate chain sent by\nthe remote host, but contain hashes that are considered to be weak.\nSubject             : CN=Cloudbase-Init WinRM\nSignature Algorithm : SHA-1 With RSA Encryption\nValid From          : Sep 08 07:43:33 2020 GMT\nValid To            : Sep 07 07:43:33 2030 GMT\nRaw PEM certificate :\n-----BEGIN CERTIFICATE-----\nMIICxjCCAa6gAwIBAgIQaTn6T4uTgrhL4UX1xNwY6TANBgkqhkiG9w0BAQUFADAfMR0wGwYDVQQDExRDbG91ZGJhc2UtSW5pdCBXaW5STTAeFw0yMDA5MDgwNzQzMzNaFw0zMDA5MDcwNzQzMzNaMB8xHTAbBgNVBAMTFENsb3VkYmFzZS1Jbml0IFdpblJNMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvULtdLsobzpRry4CJjTq5XAUBrKwVstB/b3RfFXYxlmY9Li8hd+GLrtbVTyu6W7L41YrzZgGbKhe8awUY8qTQJqc5MHy/kb/Hm4edOlufzcZTB4R9/fEhdYWM5cs0rfzAAKYVaT7P3Ca1mwknJ99edu0/xI+GQxsEI8yekytEGZbo/sfl82g+qDHnJCLLWyGW977nQ6gScZ2PluobBMt2fAehb5afssVoH4MMNIaaWqXVoIg+mxUq/DL3/EQieGAhpSvZuysjx4Us1xWxkPSLuSldX7nT4VhfSrN0otj5ORPHPur+7ypW6pdzAVSAKbzuNEVtqGjd+tNAqc+I/QmbQIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQBeG12omrbftm9A1qezQDtVaTtOXOUKhn2PKBaQHkgdZLhJJIlITTaumojLZu/rjiA0WWd5f6GW9yxjnOCOIn/iQk63u6BTk4uOO+e8OBXUgol4FkAAL8BjBEHSpZcrF0+7uePXvmMxgS/TdVUJ5AkVGddgnYdL95etKlfmBl5kry1C0QQ43fddykPoXUhH4HHkRliiomiinxcCud6EKSu7RA7ccwedcqNbbvgox9S2yMMyeYK1DVq7V13LOTek7HvJRYMs9ctaZcpbvwuix/r8PrhnLXovBeesqVP90LZEgCqkhOU5Qg99UVc/7cohLLVrRnQWP2ImxyAx4w+ypSyb\n-----END CERTIFICATE-----"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.35",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "45410",
            "pluginname": "SSL Certificate 'commonName' Mismatch",
            "hostname": "\nacsi-sw-035a\n",
            "port": "5986",
            "protocol": "tcp",
            "severity": "0",
            "description": "The service running on the remote host presents an SSL certificate for which the 'commonName' (CN) attribute does not match the hostname on which the service listens.",
            "solution": "If the machine has several names, make sure that users connect to the service through the DNS hostname that matches the common name in the certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "",
            "plugin_output": "The host name known by Nessus is :\nacsi-sw-035a\nThe Common Name in the certificate is :\ncloudbase-init winrm"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.35",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "57608",
            "pluginname": "SMB Signing not required",
            "hostname": "",
            "port": "445",
            "protocol": "tcp",
            "severity": "2",
            "description": "Signing is not required on the remote SMB server. An unauthenticated, remote attacker can exploit this to conduct man-in-the-middle attacks against the SMB server.",
            "solution": "Enforce message signing in the host's configuration. On Windows, this is found in the policy setting 'Microsoft network server: Digitally sign communications (always)'. On Samba, the setting is called 'server signing'. See the 'see also' links for further details.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?df39b8b3\nhttp://technet.microsoft.com/en-us/library/cc731957.aspx\nhttp://www.nessus.org/u?74b80723\nhttps://www.samba.org/samba/docs/current/man-html/smb.conf.5.html\nhttp://www.nessus.org/u?a3cac4ea",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.4.35",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The ICMP timestamps seem to be in little endian format (not in network format)\nThe difference between the local and remote clocks is 3 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.33",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is 12 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.32",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "58453",
            "pluginname": "Terminal Services Doesn't Use Network Level Authentication (NLA) Only",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote Terminal Services is not configured to use Network Level Authentication (NLA) only. NLA uses the Credential Security Support Provider (CredSSP) protocol to perform strong server authentication either through TLS/SSL or Kerberos mechanisms, which protect against man-in-the-middle attacks. In addition to improving authentication, NLA also helps protect the remote computer from malicious users and software by completing user authentication before a full RDP connection is established.",
            "solution": "Enable Network Level Authentication (NLA) on the remote RDP server. This is generally done on the 'Remote' tab of the 'System' settings on Windows.",
            "cve": "",
            "cvss3": "4.0",
            "cvss2": "4.3",
            "see_also": "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc732713(v=ws.11)\nhttp://www.nessus.org/u?e2628096",
            "plugin_output": "Nessus was able to negotiate non-NLA (Network Level Authentication) security."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.32",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.32",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.32",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.32",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.32",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.32",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.32",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=acsi-sw-033a"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.32",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : E=netadmin@acsi-sw-033aSS/CN=acsi-sw-033aSS/OU=Intrusion Prevention Systems/O=McAfee Inc/L=Santa Clara/ST=CA/C=US"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.32",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=Cloudbase-Init WinRM"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.32",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=acsi-sw-033a\n|-Issuer  : CN=acsi-sw-033a"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.32",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : E=netadmin@acsi-sw-033aSS/CN=acsi-sw-033aSS/OU=Intrusion Prevention Systems/O=McAfee Inc/L=Santa Clara/ST=CA/C=US\n|-Issuer  : E=netadmin@acsi-sw-033aSS/CN=acsi-sw-033aSS/OU=Intrusion Prevention Systems/O=McAfee Inc/L=Santa Clara/ST=CA/C=US"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.32",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=Cloudbase-Init WinRM\n|-Issuer  : CN=Cloudbase-Init WinRM"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.32",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "35291",
            "pluginname": "SSL Certificate Signed Using Weak Hashing Algorithm",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote service uses an SSL certificate chain that has been signed using a cryptographically weak hashing algorithm (e.g. MD2, MD4, MD5, or SHA1). These signature algorithms are known to be vulnerable to collision attacks. An attacker can exploit this to generate another certificate with the same digital signature, allowing an attacker to masquerade as the affected service.\n\nNote that this plugin reports all SSL certificate chains signed with SHA-1 that expire after January 1, 2017 as vulnerable. This is in accordance with Google's gradual sunsetting of the SHA-1 cryptographic hash algorithm.\n\nNote that certificates in the chain that are contained in the Nessus CA database (known_CA.inc) have been ignored.",
            "solution": "Contact the Certificate Authority to have the SSL certificate reissued.",
            "cve": "CVE-2004-2761",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://tools.ietf.org/html/rfc3279\nhttp://www.nessus.org/u?9bb87bf2\nhttp://www.nessus.org/u?e120eea1\nhttp://www.nessus.org/u?5d894816\nhttp://www.nessus.org/u?51db68aa\nhttp://www.nessus.org/u?9dc7bfba",
            "plugin_output": "The following certificates were part of the certificate chain sent by\nthe remote host, but contain hashes that are considered to be weak.\nSubject             : CN=Cloudbase-Init WinRM\nSignature Algorithm : SHA-1 With RSA Encryption\nValid From          : Sep 08 07:43:33 2020 GMT\nValid To            : Sep 07 07:43:33 2030 GMT\nRaw PEM certificate :\n-----BEGIN CERTIFICATE-----\nMIICxjCCAa6gAwIBAgIQaTn6T4uTgrhL4UX1xNwY6TANBgkqhkiG9w0BAQUFADAfMR0wGwYDVQQDExRDbG91ZGJhc2UtSW5pdCBXaW5STTAeFw0yMDA5MDgwNzQzMzNaFw0zMDA5MDcwNzQzMzNaMB8xHTAbBgNVBAMTFENsb3VkYmFzZS1Jbml0IFdpblJNMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvULtdLsobzpRry4CJjTq5XAUBrKwVstB/b3RfFXYxlmY9Li8hd+GLrtbVTyu6W7L41YrzZgGbKhe8awUY8qTQJqc5MHy/kb/Hm4edOlufzcZTB4R9/fEhdYWM5cs0rfzAAKYVaT7P3Ca1mwknJ99edu0/xI+GQxsEI8yekytEGZbo/sfl82g+qDHnJCLLWyGW977nQ6gScZ2PluobBMt2fAehb5afssVoH4MMNIaaWqXVoIg+mxUq/DL3/EQieGAhpSvZuysjx4Us1xWxkPSLuSldX7nT4VhfSrN0otj5ORPHPur+7ypW6pdzAVSAKbzuNEVtqGjd+tNAqc+I/QmbQIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQBeG12omrbftm9A1qezQDtVaTtOXOUKhn2PKBaQHkgdZLhJJIlITTaumojLZu/rjiA0WWd5f6GW9yxjnOCOIn/iQk63u6BTk4uOO+e8OBXUgol4FkAAL8BjBEHSpZcrF0+7uePXvmMxgS/TdVUJ5AkVGddgnYdL95etKlfmBl5kry1C0QQ43fddykPoXUhH4HHkRliiomiinxcCud6EKSu7RA7ccwedcqNbbvgox9S2yMMyeYK1DVq7V13LOTek7HvJRYMs9ctaZcpbvwuix/r8PrhnLXovBeesqVP90LZEgCqkhOU5Qg99UVc/7cohLLVrRnQWP2ImxyAx4w+ypSyb\n-----END CERTIFICATE-----"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.32",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The ICMP timestamps seem to be in little endian format (not in network format)\nThe remote clock is synchronized with the local clock."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.26",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "58453",
            "pluginname": "Terminal Services Doesn't Use Network Level Authentication (NLA) Only",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote Terminal Services is not configured to use Network Level Authentication (NLA) only. NLA uses the Credential Security Support Provider (CredSSP) protocol to perform strong server authentication either through TLS/SSL or Kerberos mechanisms, which protect against man-in-the-middle attacks. In addition to improving authentication, NLA also helps protect the remote computer from malicious users and software by completing user authentication before a full RDP connection is established.",
            "solution": "Enable Network Level Authentication (NLA) on the remote RDP server. This is generally done on the 'Remote' tab of the 'System' settings on Windows.",
            "cve": "",
            "cvss3": "4.0",
            "cvss2": "4.3",
            "see_also": "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc732713(v=ws.11)\nhttp://www.nessus.org/u?e2628096",
            "plugin_output": "Nessus was able to negotiate non-NLA (Network Level Authentication) security."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.26",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.26",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.26",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.26",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.26",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.26",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.26",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=acsi-sw-029a"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.26",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=Cloudbase-Init WinRM"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.26",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=acsi-sw-029a\n|-Issuer  : CN=acsi-sw-029a"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.26",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=Cloudbase-Init WinRM\n|-Issuer  : CN=Cloudbase-Init WinRM"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.26",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "35291",
            "pluginname": "SSL Certificate Signed Using Weak Hashing Algorithm",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote service uses an SSL certificate chain that has been signed using a cryptographically weak hashing algorithm (e.g. MD2, MD4, MD5, or SHA1). These signature algorithms are known to be vulnerable to collision attacks. An attacker can exploit this to generate another certificate with the same digital signature, allowing an attacker to masquerade as the affected service.\n\nNote that this plugin reports all SSL certificate chains signed with SHA-1 that expire after January 1, 2017 as vulnerable. This is in accordance with Google's gradual sunsetting of the SHA-1 cryptographic hash algorithm.\n\nNote that certificates in the chain that are contained in the Nessus CA database (known_CA.inc) have been ignored.",
            "solution": "Contact the Certificate Authority to have the SSL certificate reissued.",
            "cve": "CVE-2004-2761",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://tools.ietf.org/html/rfc3279\nhttp://www.nessus.org/u?9bb87bf2\nhttp://www.nessus.org/u?e120eea1\nhttp://www.nessus.org/u?5d894816\nhttp://www.nessus.org/u?51db68aa\nhttp://www.nessus.org/u?9dc7bfba",
            "plugin_output": "The following certificates were part of the certificate chain sent by\nthe remote host, but contain hashes that are considered to be weak.\nSubject             : CN=Cloudbase-Init WinRM\nSignature Algorithm : SHA-1 With RSA Encryption\nValid From          : Sep 08 07:43:33 2020 GMT\nValid To            : Sep 07 07:43:33 2030 GMT\nRaw PEM certificate :\n-----BEGIN CERTIFICATE-----\nMIICxjCCAa6gAwIBAgIQaTn6T4uTgrhL4UX1xNwY6TANBgkqhkiG9w0BAQUFADAfMR0wGwYDVQQDExRDbG91ZGJhc2UtSW5pdCBXaW5STTAeFw0yMDA5MDgwNzQzMzNaFw0zMDA5MDcwNzQzMzNaMB8xHTAbBgNVBAMTFENsb3VkYmFzZS1Jbml0IFdpblJNMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvULtdLsobzpRry4CJjTq5XAUBrKwVstB/b3RfFXYxlmY9Li8hd+GLrtbVTyu6W7L41YrzZgGbKhe8awUY8qTQJqc5MHy/kb/Hm4edOlufzcZTB4R9/fEhdYWM5cs0rfzAAKYVaT7P3Ca1mwknJ99edu0/xI+GQxsEI8yekytEGZbo/sfl82g+qDHnJCLLWyGW977nQ6gScZ2PluobBMt2fAehb5afssVoH4MMNIaaWqXVoIg+mxUq/DL3/EQieGAhpSvZuysjx4Us1xWxkPSLuSldX7nT4VhfSrN0otj5ORPHPur+7ypW6pdzAVSAKbzuNEVtqGjd+tNAqc+I/QmbQIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQBeG12omrbftm9A1qezQDtVaTtOXOUKhn2PKBaQHkgdZLhJJIlITTaumojLZu/rjiA0WWd5f6GW9yxjnOCOIn/iQk63u6BTk4uOO+e8OBXUgol4FkAAL8BjBEHSpZcrF0+7uePXvmMxgS/TdVUJ5AkVGddgnYdL95etKlfmBl5kry1C0QQ43fddykPoXUhH4HHkRliiomiinxcCud6EKSu7RA7ccwedcqNbbvgox9S2yMMyeYK1DVq7V13LOTek7HvJRYMs9ctaZcpbvwuix/r8PrhnLXovBeesqVP90LZEgCqkhOU5Qg99UVc/7cohLLVrRnQWP2ImxyAx4w+ypSyb\n-----END CERTIFICATE-----"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.22",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "1433",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.22",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.22",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "1433",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.22",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.22",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "1433",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.22",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.22",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "1433",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=SSL_Self_Signed_Fallback"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.22",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=Cloudbase-Init WinRM"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.22",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "1433",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=SSL_Self_Signed_Fallback\n|-Issuer  : CN=SSL_Self_Signed_Fallback"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.22",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=Cloudbase-Init WinRM\n|-Issuer  : CN=Cloudbase-Init WinRM"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.22",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "35291",
            "pluginname": "SSL Certificate Signed Using Weak Hashing Algorithm",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote service uses an SSL certificate chain that has been signed using a cryptographically weak hashing algorithm (e.g. MD2, MD4, MD5, or SHA1). These signature algorithms are known to be vulnerable to collision attacks. An attacker can exploit this to generate another certificate with the same digital signature, allowing an attacker to masquerade as the affected service.\n\nNote that this plugin reports all SSL certificate chains signed with SHA-1 that expire after January 1, 2017 as vulnerable. This is in accordance with Google's gradual sunsetting of the SHA-1 cryptographic hash algorithm.\n\nNote that certificates in the chain that are contained in the Nessus CA database (known_CA.inc) have been ignored.",
            "solution": "Contact the Certificate Authority to have the SSL certificate reissued.",
            "cve": "CVE-2004-2761",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://tools.ietf.org/html/rfc3279\nhttp://www.nessus.org/u?9bb87bf2\nhttp://www.nessus.org/u?e120eea1\nhttp://www.nessus.org/u?5d894816\nhttp://www.nessus.org/u?51db68aa\nhttp://www.nessus.org/u?9dc7bfba",
            "plugin_output": "The following certificates were part of the certificate chain sent by\nthe remote host, but contain hashes that are considered to be weak.\nSubject             : CN=Cloudbase-Init WinRM\nSignature Algorithm : SHA-1 With RSA Encryption\nValid From          : Sep 08 07:43:33 2020 GMT\nValid To            : Sep 07 07:43:33 2030 GMT\nRaw PEM certificate :\n-----BEGIN CERTIFICATE-----\nMIICxjCCAa6gAwIBAgIQaTn6T4uTgrhL4UX1xNwY6TANBgkqhkiG9w0BAQUFADAfMR0wGwYDVQQDExRDbG91ZGJhc2UtSW5pdCBXaW5STTAeFw0yMDA5MDgwNzQzMzNaFw0zMDA5MDcwNzQzMzNaMB8xHTAbBgNVBAMTFENsb3VkYmFzZS1Jbml0IFdpblJNMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvULtdLsobzpRry4CJjTq5XAUBrKwVstB/b3RfFXYxlmY9Li8hd+GLrtbVTyu6W7L41YrzZgGbKhe8awUY8qTQJqc5MHy/kb/Hm4edOlufzcZTB4R9/fEhdYWM5cs0rfzAAKYVaT7P3Ca1mwknJ99edu0/xI+GQxsEI8yekytEGZbo/sfl82g+qDHnJCLLWyGW977nQ6gScZ2PluobBMt2fAehb5afssVoH4MMNIaaWqXVoIg+mxUq/DL3/EQieGAhpSvZuysjx4Us1xWxkPSLuSldX7nT4VhfSrN0otj5ORPHPur+7ypW6pdzAVSAKbzuNEVtqGjd+tNAqc+I/QmbQIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQBeG12omrbftm9A1qezQDtVaTtOXOUKhn2PKBaQHkgdZLhJJIlITTaumojLZu/rjiA0WWd5f6GW9yxjnOCOIn/iQk63u6BTk4uOO+e8OBXUgol4FkAAL8BjBEHSpZcrF0+7uePXvmMxgS/TdVUJ5AkVGddgnYdL95etKlfmBl5kry1C0QQ43fddykPoXUhH4HHkRliiomiinxcCud6EKSu7RA7ccwedcqNbbvgox9S2yMMyeYK1DVq7V13LOTek7HvJRYMs9ctaZcpbvwuix/r8PrhnLXovBeesqVP90LZEgCqkhOU5Qg99UVc/7cohLLVrRnQWP2ImxyAx4w+ypSyb\n-----END CERTIFICATE-----"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.21",
            "system": "Microsoft Windows 10",
            "os": "windows",
            "pluginid": "57608",
            "pluginname": "SMB Signing not required",
            "hostname": "",
            "port": "445",
            "protocol": "tcp",
            "severity": "2",
            "description": "Signing is not required on the remote SMB server. An unauthenticated, remote attacker can exploit this to conduct man-in-the-middle attacks against the SMB server.",
            "solution": "Enforce message signing in the host's configuration. On Windows, this is found in the policy setting 'Microsoft network server: Digitally sign communications (always)'. On Samba, the setting is called 'server signing'. See the 'see also' links for further details.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?df39b8b3\nhttp://technet.microsoft.com/en-us/library/cc731957.aspx\nhttp://www.nessus.org/u?74b80723\nhttps://www.samba.org/samba/docs/current/man-html/smb.conf.5.html\nhttp://www.nessus.org/u?a3cac4ea",
            "plugin_output": ""
        },
        {
            "file_no": 0,
            "ip": "10.27.4.20",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.20",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.20",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.20",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=Cloudbase-Init WinRM"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.20",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=Cloudbase-Init WinRM\n|-Issuer  : CN=Cloudbase-Init WinRM"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.20",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "35291",
            "pluginname": "SSL Certificate Signed Using Weak Hashing Algorithm",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote service uses an SSL certificate chain that has been signed using a cryptographically weak hashing algorithm (e.g. MD2, MD4, MD5, or SHA1). These signature algorithms are known to be vulnerable to collision attacks. An attacker can exploit this to generate another certificate with the same digital signature, allowing an attacker to masquerade as the affected service.\n\nNote that this plugin reports all SSL certificate chains signed with SHA-1 that expire after January 1, 2017 as vulnerable. This is in accordance with Google's gradual sunsetting of the SHA-1 cryptographic hash algorithm.\n\nNote that certificates in the chain that are contained in the Nessus CA database (known_CA.inc) have been ignored.",
            "solution": "Contact the Certificate Authority to have the SSL certificate reissued.",
            "cve": "CVE-2004-2761",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://tools.ietf.org/html/rfc3279\nhttp://www.nessus.org/u?9bb87bf2\nhttp://www.nessus.org/u?e120eea1\nhttp://www.nessus.org/u?5d894816\nhttp://www.nessus.org/u?51db68aa\nhttp://www.nessus.org/u?9dc7bfba",
            "plugin_output": "The following certificates were part of the certificate chain sent by\nthe remote host, but contain hashes that are considered to be weak.\nSubject             : CN=Cloudbase-Init WinRM\nSignature Algorithm : SHA-1 With RSA Encryption\nValid From          : Sep 08 07:43:33 2020 GMT\nValid To            : Sep 07 07:43:33 2030 GMT\nRaw PEM certificate :\n-----BEGIN CERTIFICATE-----\nMIICxjCCAa6gAwIBAgIQaTn6T4uTgrhL4UX1xNwY6TANBgkqhkiG9w0BAQUFADAfMR0wGwYDVQQDExRDbG91ZGJhc2UtSW5pdCBXaW5STTAeFw0yMDA5MDgwNzQzMzNaFw0zMDA5MDcwNzQzMzNaMB8xHTAbBgNVBAMTFENsb3VkYmFzZS1Jbml0IFdpblJNMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvULtdLsobzpRry4CJjTq5XAUBrKwVstB/b3RfFXYxlmY9Li8hd+GLrtbVTyu6W7L41YrzZgGbKhe8awUY8qTQJqc5MHy/kb/Hm4edOlufzcZTB4R9/fEhdYWM5cs0rfzAAKYVaT7P3Ca1mwknJ99edu0/xI+GQxsEI8yekytEGZbo/sfl82g+qDHnJCLLWyGW977nQ6gScZ2PluobBMt2fAehb5afssVoH4MMNIaaWqXVoIg+mxUq/DL3/EQieGAhpSvZuysjx4Us1xWxkPSLuSldX7nT4VhfSrN0otj5ORPHPur+7ypW6pdzAVSAKbzuNEVtqGjd+tNAqc+I/QmbQIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQBeG12omrbftm9A1qezQDtVaTtOXOUKhn2PKBaQHkgdZLhJJIlITTaumojLZu/rjiA0WWd5f6GW9yxjnOCOIn/iQk63u6BTk4uOO+e8OBXUgol4FkAAL8BjBEHSpZcrF0+7uePXvmMxgS/TdVUJ5AkVGddgnYdL95etKlfmBl5kry1C0QQ43fddykPoXUhH4HHkRliiomiinxcCud6EKSu7RA7ccwedcqNbbvgox9S2yMMyeYK1DVq7V13LOTek7HvJRYMs9ctaZcpbvwuix/r8PrhnLXovBeesqVP90LZEgCqkhOU5Qg99UVc/7cohLLVrRnQWP2ImxyAx4w+ypSyb\n-----END CERTIFICATE-----"
        },
        {
            "file_no": 0,
            "ip": "10.27.4.11",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -298 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.4.10",
            "system": "Ubuntu 14.04 Linux Kernel 3.13",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -537 seconds."
        },
        {
            "file_no": 0,
            "ip": "10.27.3.102",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.3.102",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.3.102",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Mar 24 09:11:51 2016 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.3.102",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "69551",
            "pluginname": "SSL Certificate Chain Contains RSA Keys Less Than 2048 bits",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "At least one of the X.509 certificates sent by the remote host has a key that is shorter than 2048 bits. According to industry standards set by the Certification Authority/Browser (CA/B) Forum, certificates issued after January 1, 2014 must be at least 2048 bits.\n\nSome browser SSL implementations may reject keys less than 2048 bits after January 1, 2014. Additionally, some SSL certificate vendors may revoke certificates less than 2048 bits before January 1, 2014.\n\nNote that Nessus will not flag root certificates with RSA keys less than 2048 bits if they were issued prior to December 31, 2010, as the standard considers them exempt.",
            "solution": "Replace the certificate in the chain with the RSA key less than 2048 bits in length with a longer key, and reissue any certificates signed by the old certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "https://www.cabforum.org/wp-content/uploads/Baseline_Requirements_V1.pdf",
            "plugin_output": "The following certificates were part of the certificate chain\nsent by the remote host, but contain RSA keys that are considered\nto be weak :\n|-Subject        : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-RSA Key Length : 1024 bits"
        },
        {
            "file_no": 0,
            "ip": "10.27.3.102",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Apr 20 09:11:51 2011 GMT\nNot valid after  : Mar 24 09:11:51 2016 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.3.101",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.3.101",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.3.101",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Mar 24 09:11:51 2016 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.3.101",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "69551",
            "pluginname": "SSL Certificate Chain Contains RSA Keys Less Than 2048 bits",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "At least one of the X.509 certificates sent by the remote host has a key that is shorter than 2048 bits. According to industry standards set by the Certification Authority/Browser (CA/B) Forum, certificates issued after January 1, 2014 must be at least 2048 bits.\n\nSome browser SSL implementations may reject keys less than 2048 bits after January 1, 2014. Additionally, some SSL certificate vendors may revoke certificates less than 2048 bits before January 1, 2014.\n\nNote that Nessus will not flag root certificates with RSA keys less than 2048 bits if they were issued prior to December 31, 2010, as the standard considers them exempt.",
            "solution": "Replace the certificate in the chain with the RSA key less than 2048 bits in length with a longer key, and reissue any certificates signed by the old certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "https://www.cabforum.org/wp-content/uploads/Baseline_Requirements_V1.pdf",
            "plugin_output": "The following certificates were part of the certificate chain\nsent by the remote host, but contain RSA keys that are considered\nto be weak :\n|-Subject        : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-RSA Key Length : 1024 bits"
        },
        {
            "file_no": 0,
            "ip": "10.27.3.101",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Apr 20 09:11:51 2011 GMT\nNot valid after  : Mar 24 09:11:51 2016 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.3.50",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "65000",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=acsi-sl-129"
        },
        {
            "file_no": 0,
            "ip": "10.27.3.50",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=acsi-sl-129"
        },
        {
            "file_no": 0,
            "ip": "10.27.3.50",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "65000",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : CN=acsi-sl-129\n|-Not After : Oct 19 08:04:17 2023 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=acsi-sl-129\n|-Issuer  : CN=acsi-sl-129"
        },
        {
            "file_no": 0,
            "ip": "10.27.3.50",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : CN=acsi-sl-129\n|-Not After : Oct 19 08:04:17 2023 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=acsi-sl-129\n|-Issuer  : CN=acsi-sl-129"
        },
        {
            "file_no": 0,
            "ip": "10.27.3.50",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "65000",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : CN=acsi-sl-129\nIssuer           : CN=acsi-sl-129\nNot valid before : Oct 19 08:04:17 2022 GMT\nNot valid after  : Oct 19 08:04:17 2023 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.3.50",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : CN=acsi-sl-129\nIssuer           : CN=acsi-sl-129\nNot valid before : Oct 19 08:04:17 2022 GMT\nNot valid after  : Oct 19 08:04:17 2023 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.3.6",
            "system": "Arista EOS",
            "os": "other",
            "pluginid": "201205",
            "pluginname": "Splunk Enterprise 9.0.0 < 9.0.10, 9.1.0 < 9.1.5, 9.2.0 < 9.2.2 (SVD-2024-0703)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Splunk installed on the remote host is prior to tested version. It is, therefore, affected by a vulnerability as referenced in the SVD-2024-0703 advisory.\n\n  - In Splunk Enterprise versions below 9.2.2, 9.1.5, and 9.0.10 and Splunk Cloud Platform versions below     9.1.2312.109 and 9.1.2308.207, an authenticated user could create an external lookup that calls a legacy     internal function. The authenticated user could use this internal function to insert code into the Splunk     platform installation directory. From there, the user could execute arbitrary code on the Splunk platform     Instance. (CVE-2024-36983)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade Splunk Enterprise to versions 9.2.2, 9.1.5, and 9.0.10, or higher.Splunk is performing upgrades on Splunk Cloud Platform instances as part of Emergency Maintenance for customers, as described in the Splunk Cloud Platform Maintenance Policy. In the meantime, Splunk is actively monitoring for potential issues that could arise from this vulnerability.",
            "cve": "CVE-2024-36983",
            "cvss3": "8.0",
            "cvss2": "9.0",
            "see_also": "https://advisory.splunk.com/advisories/SVD-2024-0703.html",
            "plugin_output": "URL               : https://10.27.3.6/\nInstalled version : 9.2.1\nFixed version     : 9.2.2"
        },
        {
            "file_no": 0,
            "ip": "10.27.3.6",
            "system": "Arista EOS",
            "os": "other",
            "pluginid": "201197",
            "pluginname": "Splunk Enterprise 9.0.0 < 9.0.10, 9.1.0 < 9.1.5, 9.2.0 < 9.2.2 (SVD-2024-0715)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "The version of Splunk installed on the remote host is prior to tested version. It is, therefore, affected by a vulnerability as referenced in the SVD-2024-0715 advisory.\n\n  - In Splunk Enterprise versions below 9.2.2, 9.1.5, and 9.0.10 and Splunk Cloud Platform versions below     9.1.2312.200 and 9.1.2308.207, a low-privileged user that does not hold the admin or power Splunk roles     could create experimental items. (CVE-2024-36995)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade Splunk Enterprise to versions 9.2.2, 9.1.5, and 9.0.10, or higher.Splunk is performing upgrades on Splunk Cloud Platform instances as part of Routine Maintenance for customers, as described in the Splunk Cloud Platform Maintenance Policy. In the meantime, Splunk is actively monitoring for potential issues that could arise from this vulnerability.",
            "cve": "CVE-2024-36995",
            "cvss3": "3.5",
            "cvss2": "4.0",
            "see_also": "https://advisory.splunk.com/advisories/SVD-2024-0715.html",
            "plugin_output": "URL               : https://10.27.3.6/\nInstalled version : 9.2.1\nFixed version     : 9.2.2"
        },
        {
            "file_no": 0,
            "ip": "10.27.3.6",
            "system": "Arista EOS",
            "os": "other",
            "pluginid": "201200",
            "pluginname": "Splunk Enterprise 9.0.0 < 9.0.10, 9.1.0 < 9.1.5, 9.2.0 < 9.2.2 (SVD-2024-0710)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Splunk installed on the remote host is prior to tested version. It is, therefore, affected by a vulnerability as referenced in the SVD-2024-0710 advisory.\n\n  - In Splunk Enterprise versions below 9.2.2, 9.1.5, and 9.0.10 and Splunk Cloud Platform versions below     9.2.2403.100, an authenticated, low-privileged user that does not hold the admin or power Splunk roles     could send a specially crafted HTTP POST request to the datamodel/web REST endpoint in Splunk Enterprise,     potentially causing a denial of service. (CVE-2024-36990)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade Splunk Enterprise to versions 9.2.2, 9.1.5, and 9.0.10, or higher.Splunk is performing upgrades on Splunk Cloud Platform instances as part of Routine Maintenance for customers, as described in the Splunk Cloud Platform Maintenance Policy. In the meantime, Splunk is actively monitoring for potential issues that could arise from this vulnerability.",
            "cve": "CVE-2024-36990",
            "cvss3": "6.5",
            "cvss2": "6.8",
            "see_also": "https://advisory.splunk.com/advisories/SVD-2024-0710.html",
            "plugin_output": "URL               : https://10.27.3.6/\nInstalled version : 9.2.1\nFixed version     : 9.2.2"
        },
        {
            "file_no": 0,
            "ip": "10.27.3.6",
            "system": "Arista EOS",
            "os": "other",
            "pluginid": "201235",
            "pluginname": "Splunk Enterprise 9.0.0 < 9.0.10, 9.1.0 < 9.1.5, 9.2.0 < 9.2.2 (SVD-2024-0702)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Splunk installed on the remote host is prior to tested version. It is, therefore, affected by a vulnerability as referenced in the SVD-2024-0702 advisory.\n\n  - In Splunk Enterprise versions below 9.2.2, 9.1.5, and 9.0.10 and Splunk Cloud Platform versions below     9.1.2312.109 and 9.1.2308.207, an attacker could trigger a null pointer reference on the cluster/config     REST endpoint, which could result in a crash of the Splunk daemon. (CVE-2024-36982)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade Splunk Enterprise to versions 9.2.2, 9.1.5, and 9.0.10, or higher. Splunk is performing upgrades on Splunk Cloud Platform instances as part of Emergency Maintenance for customers, as described in the Splunk Cloud Platform Maintenance Policy. In the meantime, Splunk is actively monitoring for potential issues that could arise from this vulnerability.",
            "cve": "CVE-2024-36982",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "https://advisory.splunk.com/advisories/SVD-2024-0702.html",
            "plugin_output": "URL               : https://10.27.3.6/\nInstalled version : 9.2.1\nFixed version     : 9.2.2"
        },
        {
            "file_no": 0,
            "ip": "10.27.3.6",
            "system": "Arista EOS",
            "os": "other",
            "pluginid": "201208",
            "pluginname": "Splunk Enterprise 9.0.0 < 9.0.10, 9.1.0 < 9.1.5, 9.2.0 < 9.2.2 (SVD-2024-0716)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Splunk installed on the remote host is prior to tested version. It is, therefore, affected by a vulnerability as referenced in the SVD-2024-0716 advisory.\n\n  - In Splunk Enterprise versions below 9.2.2, 9.1.5, and 9.0.10 and Splunk Cloud Platform versions below     9.1.2312.109, an attacker could determine whether or not another user exists on the instance by     deciphering the error response that they would likely receive from the instance when they attempt to log     in. This disclosure could then lead to additional brute-force password-guessing attacks. This     vulnerability would require that the Splunk platform instance uses the Security Assertion Markup Language     (SAML) authentication scheme. (CVE-2024-36996)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade Splunk Enterprise to versions 9.2.2, 9.1.5, and 9.0.10, or higher.Splunk is performing upgrades on Splunk Cloud Platform instances as part of Routine Maintenance for customers, as described in the Splunk Cloud Platform Maintenance Policy. In the meantime, Splunk is actively monitoring for potential issues that could arise from this vulnerability.",
            "cve": "CVE-2024-36996",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "https://advisory.splunk.com/advisories/SVD-2024-0716.html",
            "plugin_output": "URL               : https://10.27.3.6/\nInstalled version : 9.2.1\nFixed version     : 9.2.2"
        },
        {
            "file_no": 0,
            "ip": "10.27.3.6",
            "system": "Arista EOS",
            "os": "other",
            "pluginid": "208944",
            "pluginname": "Splunk Enterprise 9.1.0 < 9.1.6, 9.2.0 < 9.2.3, 9.3.0 < 9.3.1 (SVD-2024-1006)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Splunk installed on the remote host is prior to tested version. It is, therefore, affected by a vulnerability as referenced in the SVD-2024-1006 advisory.\n\n  - In Splunk Enterprise versions below 9.3.1, 9.2.3, and 9.1.6 and Splunk Cloud Platform versions below     9.2.2403.107, 9.1.2312.204, and 9.1.2312.111, a low-privileged user that does not hold the admin or     power Splunk roles could craft a search query with an improperly formatted INGEST_EVAL parameter as     part of a [Field     Transformation](https://docs.splunk.com/Documentation/Splunk/latest/Knowledge/Managefieldtransforms) which     could crash the Splunk daemon (splunkd). (CVE-2024-45736)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade Splunk Enterprise to versions 9.3.1, 9.2.3, 9.1.6, or higher.Splunk is actively monitoring and patching Splunk Cloud Platform instances.",
            "cve": "CVE-2024-45736",
            "cvss3": "6.5",
            "cvss2": "6.8",
            "see_also": "https://advisory.splunk.com/advisories/SVD-2024-1006.html",
            "plugin_output": "URL               : https://10.27.3.6/\nInstalled version : 9.2.1\nFixed version     : 9.2.3"
        },
        {
            "file_no": 0,
            "ip": "10.27.3.6",
            "system": "Arista EOS",
            "os": "other",
            "pluginid": "201234",
            "pluginname": "Splunk Enterprise 9.0.0 < 9.0.10, 9.1.0 < 9.1.5, 9.2.0 < 9.2.2 (SVD-2024-0701)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Splunk installed on the remote host is prior to tested version. It is, therefore, affected by a vulnerability as referenced in the SVD-2024-0701 advisory.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade Splunk Enterprise to versions 9.2.2, 9.1.5, and 9.0.10, or higher.Splunk is performing upgrades on Splunk Cloud Platform instances as part of Emergency Maintenance for customers, as described in the Splunk Cloud Platform Maintenance Policy. In the meantime, Splunk is actively monitoring for potential issues that could arise from this vulnerability.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "https://advisory.splunk.com/advisories/SVD-2024-0701.html",
            "plugin_output": "URL               : https://10.27.3.6/\nInstalled version : 9.2.1\nFixed version     : 9.2.2"
        },
        {
            "file_no": 0,
            "ip": "10.27.3.6",
            "system": "Arista EOS",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=acsi-sl-310/O=SplunkUser\n|-Issuer  : C=US/ST=CA/L=San Francisco/O=Splunk/CN=SplunkCommonCA/E=support@splunk.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.3.6",
            "system": "Arista EOS",
            "os": "other",
            "pluginid": "121164",
            "pluginname": "Splunk Information Disclosure Vulnerability (SP-CAAAP5E)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The Splunk installation running on the remote web server is affected by an information disclosure vulnerability at a Splunk REST endpoint. An unauthenticated, remote attacker can exploit this, via a specially crafted request, to disclose potentially sensitive information",
            "solution": "Consult your vendor for a patch or a workaround.",
            "cve": "CVE-2018-11409",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?eaef4f0a\nhttp://www.nessus.org/u?98482484",
            "plugin_output": "Nessus was able to exploit the issue by sending the following request:\n/en-US/splunkd/__raw/services/server/info/server-info?output_mode=json\nThe following information was retrieved:\nOS name: Linux\nOS version: 4.18.0-513.18.1.el8_9.x86_64\nProduct type: enterprise\nProduct version: 9.2.1\nServer name: acsi-sl-310"
        },
        {
            "file_no": 0,
            "ip": "10.27.3.3",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.3.3",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.3.3",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.3.3",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.3.3",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.3.3",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.3.3",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "58453",
            "pluginname": "Terminal Services Doesn't Use Network Level Authentication (NLA) Only",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote Terminal Services is not configured to use Network Level Authentication (NLA) only. NLA uses the Credential Security Support Provider (CredSSP) protocol to perform strong server authentication either through TLS/SSL or Kerberos mechanisms, which protect against man-in-the-middle attacks. In addition to improving authentication, NLA also helps protect the remote computer from malicious users and software by completing user authentication before a full RDP connection is established.",
            "solution": "Enable Network Level Authentication (NLA) on the remote RDP server. This is generally done on the 'Remote' tab of the 'System' settings on Windows.",
            "cve": "",
            "cvss3": "4.0",
            "cvss2": "4.3",
            "see_also": "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc732713(v=ws.11)\nhttp://www.nessus.org/u?e2628096",
            "plugin_output": "Nessus was able to negotiate non-NLA (Network Level Authentication) security."
        },
        {
            "file_no": 0,
            "ip": "10.27.3.3",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=acsi-sw-009"
        },
        {
            "file_no": 0,
            "ip": "10.27.3.3",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=acsi-sw-009\n|-Issuer  : CN=acsi-sw-009"
        },
        {
            "file_no": 0,
            "ip": "10.27.3.3",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=Cloudbase-Init WinRM"
        },
        {
            "file_no": 0,
            "ip": "10.27.3.3",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=Cloudbase-Init WinRM\n|-Issuer  : CN=Cloudbase-Init WinRM"
        },
        {
            "file_no": 0,
            "ip": "10.27.3.3",
            "system": "Microsoft Windows",
            "os": "windows",
            "pluginid": "35291",
            "pluginname": "SSL Certificate Signed Using Weak Hashing Algorithm",
            "hostname": "",
            "port": "5986",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote service uses an SSL certificate chain that has been signed using a cryptographically weak hashing algorithm (e.g. MD2, MD4, MD5, or SHA1). These signature algorithms are known to be vulnerable to collision attacks. An attacker can exploit this to generate another certificate with the same digital signature, allowing an attacker to masquerade as the affected service.\n\nNote that this plugin reports all SSL certificate chains signed with SHA-1 that expire after January 1, 2017 as vulnerable. This is in accordance with Google's gradual sunsetting of the SHA-1 cryptographic hash algorithm.\n\nNote that certificates in the chain that are contained in the Nessus CA database (known_CA.inc) have been ignored.",
            "solution": "Contact the Certificate Authority to have the SSL certificate reissued.",
            "cve": "CVE-2004-2761",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://tools.ietf.org/html/rfc3279\nhttp://www.nessus.org/u?9bb87bf2\nhttp://www.nessus.org/u?e120eea1\nhttp://www.nessus.org/u?5d894816\nhttp://www.nessus.org/u?51db68aa\nhttp://www.nessus.org/u?9dc7bfba",
            "plugin_output": "The following certificates were part of the certificate chain sent by\nthe remote host, but contain hashes that are considered to be weak.\nSubject             : CN=Cloudbase-Init WinRM\nSignature Algorithm : SHA-1 With RSA Encryption\nValid From          : Sep 08 07:43:33 2020 GMT\nValid To            : Sep 07 07:43:33 2030 GMT\nRaw PEM certificate :\n-----BEGIN CERTIFICATE-----\nMIICxjCCAa6gAwIBAgIQaTn6T4uTgrhL4UX1xNwY6TANBgkqhkiG9w0BAQUFADAfMR0wGwYDVQQDExRDbG91ZGJhc2UtSW5pdCBXaW5STTAeFw0yMDA5MDgwNzQzMzNaFw0zMDA5MDcwNzQzMzNaMB8xHTAbBgNVBAMTFENsb3VkYmFzZS1Jbml0IFdpblJNMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvULtdLsobzpRry4CJjTq5XAUBrKwVstB/b3RfFXYxlmY9Li8hd+GLrtbVTyu6W7L41YrzZgGbKhe8awUY8qTQJqc5MHy/kb/Hm4edOlufzcZTB4R9/fEhdYWM5cs0rfzAAKYVaT7P3Ca1mwknJ99edu0/xI+GQxsEI8yekytEGZbo/sfl82g+qDHnJCLLWyGW977nQ6gScZ2PluobBMt2fAehb5afssVoH4MMNIaaWqXVoIg+mxUq/DL3/EQieGAhpSvZuysjx4Us1xWxkPSLuSldX7nT4VhfSrN0otj5ORPHPur+7ypW6pdzAVSAKbzuNEVtqGjd+tNAqc+I/QmbQIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQBeG12omrbftm9A1qezQDtVaTtOXOUKhn2PKBaQHkgdZLhJJIlITTaumojLZu/rjiA0WWd5f6GW9yxjnOCOIn/iQk63u6BTk4uOO+e8OBXUgol4FkAAL8BjBEHSpZcrF0+7uePXvmMxgS/TdVUJ5AkVGddgnYdL95etKlfmBl5kry1C0QQ43fddykPoXUhH4HHkRliiomiinxcCud6EKSu7RA7ccwedcqNbbvgox9S2yMMyeYK1DVq7V13LOTek7HvJRYMs9ctaZcpbvwuix/r8PrhnLXovBeesqVP90LZEgCqkhOU5Qg99UVc/7cohLLVrRnQWP2ImxyAx4w+ypSyb\n-----END CERTIFICATE-----"
        },
        {
            "file_no": 0,
            "ip": "10.27.3.1",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=qradar.com.tw\n|-Issuer  : CN=QRadar Local CA"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.203",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.203",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.203",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.203",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.1.203/\nInstalled version : iDRAC9 with firmware 6.10.00.00.54\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.202",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-6GQ7HY2-ESM-Venus/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.202",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-6GQ7HY2-ESM-Venus/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-6GQ7HY2-ESM-Venus/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.201",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.201",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-6GQBHY2/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.201",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-6GQBHY2/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-6GQBHY2/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.201",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.1.201/\nInstalled version : iDRAC9 with firmware 6.10.00.00.54\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.162",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nEDH-RSA-DES-CBC3-SHA          0x00, 0x16       DH            RSA      3DES-CBC(168)          SHA1\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.162",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.162",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.162",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=ILOSGH309H292/O=Hewlett Packard Enterprise/OU=ISS/L=Americas/ST=Houston/C=US\n|-Issuer  : CN=Default Issuer (Do not trust)/O=Hewlett Packard Enterprise/OU=ISS/L=Americas/ST=Houston/C=US"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.161",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.161",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nEDH-RSA-DES-CBC3-SHA          0x00, 0x16       DH            RSA      3DES-CBC(168)          SHA1\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.161",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.161",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=ILOSGH309H2GB/O=Hewlett Packard Enterprise/OU=ISS/L=Americas/ST=Houston/C=US\n|-Issuer  : CN=Default Issuer (Do not trust)/O=Hewlett Packard Enterprise/OU=ISS/L=Americas/ST=Houston/C=US"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.160",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nEDH-RSA-DES-CBC3-SHA          0x00, 0x16       DH            RSA      3DES-CBC(168)          SHA1\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.160",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.160",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.160",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=ILOSGH309H2FT/O=Hewlett Packard Enterprise/OU=ISS/L=Americas/ST=Houston/C=US\n|-Issuer  : CN=Default Issuer (Do not trust)/O=Hewlett Packard Enterprise/OU=ISS/L=Americas/ST=Houston/C=US"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.159",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nEDH-RSA-DES-CBC3-SHA          0x00, 0x16       DH            RSA      3DES-CBC(168)          SHA1\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.159",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.159",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.159",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=ILOSGH309H2G2/O=Hewlett Packard Enterprise/OU=ISS/L=Americas/ST=Houston/C=US\n|-Issuer  : CN=Default Issuer (Do not trust)/O=Hewlett Packard Enterprise/OU=ISS/L=Americas/ST=Houston/C=US"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.157",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nEDH-RSA-DES-CBC3-SHA          0x00, 0x16       DH            RSA      3DES-CBC(168)          SHA1\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.157",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.157",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.157",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=ILOSGH309H2J8/O=Hewlett Packard Enterprise/OU=ISS/L=Americas/ST=Houston/C=US\n|-Issuer  : CN=Default Issuer (Do not trust)/O=Hewlett Packard Enterprise/OU=ISS/L=Americas/ST=Houston/C=US"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.156",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nEDH-RSA-DES-CBC3-SHA          0x00, 0x16       DH            RSA      3DES-CBC(168)          SHA1\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.156",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.156",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.156",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=ILOSGH309H2J3/O=Hewlett Packard Enterprise/OU=ISS/L=Americas/ST=Houston/C=US\n|-Issuer  : CN=Default Issuer (Do not trust)/O=Hewlett Packard Enterprise/OU=ISS/L=Americas/ST=Houston/C=US"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.155",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nEDH-RSA-DES-CBC3-SHA          0x00, 0x16       DH            RSA      3DES-CBC(168)          SHA1\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.155",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.155",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.155",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=ILOSGH309H2FK/O=Hewlett Packard Enterprise/OU=ISS/L=Americas/ST=Houston/C=US\n|-Issuer  : CN=Default Issuer (Do not trust)/O=Hewlett Packard Enterprise/OU=ISS/L=Americas/ST=Houston/C=US"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.154",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nEDH-RSA-DES-CBC3-SHA          0x00, 0x16       DH            RSA      3DES-CBC(168)          SHA1\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.154",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.154",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.154",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=ILOSGH309H2HY/O=Hewlett Packard Enterprise/OU=ISS/L=Americas/ST=Houston/C=US\n|-Issuer  : CN=Default Issuer (Do not trust)/O=Hewlett Packard Enterprise/OU=ISS/L=Americas/ST=Houston/C=US"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.153",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nEDH-RSA-DES-CBC3-SHA          0x00, 0x16       DH            RSA      3DES-CBC(168)          SHA1\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.153",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.153",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.153",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=ILOSGH309H2HM/O=Hewlett Packard Enterprise/OU=ISS/L=Americas/ST=Houston/C=US\n|-Issuer  : CN=Default Issuer (Do not trust)/O=Hewlett Packard Enterprise/OU=ISS/L=Americas/ST=Houston/C=US"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.152",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nEDH-RSA-DES-CBC3-SHA          0x00, 0x16       DH            RSA      3DES-CBC(168)          SHA1\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.152",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.152",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.152",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=ILOSGH309H2HS/O=Hewlett Packard Enterprise/OU=ISS/L=Americas/ST=Houston/C=US\n|-Issuer  : CN=Default Issuer (Do not trust)/O=Hewlett Packard Enterprise/OU=ISS/L=Americas/ST=Houston/C=US"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.151",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nEDH-RSA-DES-CBC3-SHA          0x00, 0x16       DH            RSA      3DES-CBC(168)          SHA1\nECDHE-RSA-DES-CBC3-SHA        0xC0, 0x12       ECDH          RSA      3DES-CBC(168)          SHA1\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.151",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.151",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.151",
            "system": "HP Integrated Lights-Out",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=ILOSGH309H2F9/O=Hewlett Packard Enterprise/OU=ISS/L=Americas/ST=Houston/C=US\n|-Issuer  : CN=Default Issuer (Do not trust)/O=Hewlett Packard Enterprise/OU=ISS/L=Americas/ST=Houston/C=US"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.150",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-152DMF3/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.150",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-152DMF3/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-152DMF3/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.149",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-BHJ9MF3/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.149",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-BHJ9MF3/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-BHJ9MF3/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.148",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-2YS2MF3/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.148",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-2YS2MF3/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-2YS2MF3/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.147",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-8K93MF3/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.147",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-8K93MF3/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-8K93MF3/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.146",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-J42DMF3/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.146",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-J42DMF3/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-J42DMF3/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.145",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-6K93MF3/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.145",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-6K93MF3/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-6K93MF3/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.144",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-7K93MF3/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.144",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-7K93MF3/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-7K93MF3/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.143",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-3YS2MF3/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.143",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-3YS2MF3/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-3YS2MF3/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.141",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-1YS2MF3/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.141",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-1YS2MF3/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-1YS2MF3/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.140",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-9HJ9MF3/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.140",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-9HJ9MF3/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-9HJ9MF3/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.139",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.139",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.139",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.139",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.139",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5900",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.139",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.139",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "161800",
            "pluginname": "Dell EMC iDRAC9 < 5.00.00.00 (DSA-2021-177)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 5.00.00.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2021-177 advisory:\n\n  - iDRAC9 versions prior to 5.00.00.00 contain an improper input validation vulnerability. An unauthenticated     remote attacker may potentially exploit this vulnerability by sending a specially crafted malicious     request to crash the webserver or cause information disclosure. (CVE-2021-36300)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 5.00.00.00 or later.",
            "cve": "CVE-2021-36300",
            "cvss3": "8.2",
            "cvss2": "6.4",
            "see_also": "http://www.nessus.org/u?13d440ac",
            "plugin_output": "URL               : https://10.27.1.139/\nInstalled version : iDRAC9 with firmware 4.40.40.00.26\nFixed version     : iDRAC9 with firmware 5.00.00.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.139",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.1.139/\nInstalled version : iDRAC9 with firmware 4.40.40.00.26\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.139",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "162428",
            "pluginname": "Dell EMC iDRAC8 < 2.83.83.83 / Dell EMC iDRAC9 < 5.10.30.00 (DSA-2022-154)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is prior to 2.83.83.83/5.10.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-154 advisory.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.83.83.83 or later. Upgrade to Dell EMC iDRAC9 version 5.10.30.00 or later.",
            "cve": "CVE-2022-0778",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?a6cd5095",
            "plugin_output": "URL               : https://10.27.1.139/\nInstalled version : iDRAC9 with firmware 4.40.40.00.26\nFixed version     : iDRAC9 with firmware 5.10.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.139",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.1.139/\nInstalled version : iDRAC9 with firmware 4.40.40.00.26\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.138",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-252DMF3/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.138",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-252DMF3/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-252DMF3/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.137",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-FQS8QD3/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.137",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-FQS8QD3/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-FQS8QD3/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.135",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-45Z4Z63/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.135",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-45Z4Z63/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-45Z4Z63/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.134",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-35Z4Z63/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.134",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-35Z4Z63/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-35Z4Z63/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.133",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-9MPNV63/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.133",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-9MPNV63/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-9MPNV63/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.132",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-8MPNV63/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.132",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-8MPNV63/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-8MPNV63/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.131",
            "system": "",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.131",
            "system": "",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.131",
            "system": "",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=idrac-SVCTAG/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.131",
            "system": "",
            "os": "other",
            "pluginid": "161799",
            "pluginname": "Dell EMC iDRAC9 4.40.x < 4.40.29.00 (DSA-2021-177)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 4.40.29.00/5.00.00.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2021-177 advisory: \n\n  - Dell iDRAC9 versions 4.40.00.00 and later, but prior to 4.40.29.00 and 5.00.00.00 contain an SQL injection     vulnerability. A remote authenticated malicious user with low privileges may potentially exploit this     vulnerability to cause information disclosure or denial of service by supplying specially crafted input     data to the affected application. (CVE-2021-36299)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 4.40.29.00 or later.",
            "cve": "CVE-2021-36299",
            "cvss3": "8.1",
            "cvss2": "5.5",
            "see_also": "http://www.nessus.org/u?13d440ac",
            "plugin_output": "URL               : https://10.27.1.131/\nInstalled version : iDRAC9 with firmware 4.40.10.00.32\nFixed version     : iDRAC9 with firmware 4.40.29.00 / 5.00.00.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.131",
            "system": "",
            "os": "other",
            "pluginid": "161800",
            "pluginname": "Dell EMC iDRAC9 < 5.00.00.00 (DSA-2021-177)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 5.00.00.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2021-177 advisory:\n\n  - iDRAC9 versions prior to 5.00.00.00 contain an improper input validation vulnerability. An unauthenticated     remote attacker may potentially exploit this vulnerability by sending a specially crafted malicious     request to crash the webserver or cause information disclosure. (CVE-2021-36300)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 5.00.00.00 or later.",
            "cve": "CVE-2021-36300",
            "cvss3": "8.2",
            "cvss2": "6.4",
            "see_also": "http://www.nessus.org/u?13d440ac",
            "plugin_output": "URL               : https://10.27.1.131/\nInstalled version : iDRAC9 with firmware 4.40.10.00.32\nFixed version     : iDRAC9 with firmware 5.00.00.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.131",
            "system": "",
            "os": "other",
            "pluginid": "167509",
            "pluginname": "Dell EMC iDRAC9 < 6.00.30.00 (DSA-2022-265)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is prior to 6.00.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-265 advisory.\n\n  - Dell iDRAC9 version 6.00.02.00 and prior contain an improper input validation vulnerability in Racadm when     the firmware lock-down configuration is set. A remote high privileged attacker may potentially exploit     this vulnerability to bypass the firmware lock-down configuration and perform a firmware update.\n    (CVE-2022-34435)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 6.00.30.00 or later.",
            "cve": "CVE-2022-34435",
            "cvss3": "4.9",
            "cvss2": "6.1",
            "see_also": "http://www.nessus.org/u?70b40eeb",
            "plugin_output": "URL               : https://10.27.1.131/\nInstalled version : iDRAC9 with firmware 4.40.10.00.32\nFixed version     : iDRAC9 with firmware 6.00.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.131",
            "system": "",
            "os": "other",
            "pluginid": "162428",
            "pluginname": "Dell EMC iDRAC8 < 2.83.83.83 / Dell EMC iDRAC9 < 5.10.30.00 (DSA-2022-154)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is prior to 2.83.83.83/5.10.30.00. It is, therefore, affected by a vulnerability as referenced in the DSA-2022-154 advisory.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.83.83.83 or later. Upgrade to Dell EMC iDRAC9 version 5.10.30.00 or later.",
            "cve": "CVE-2022-0778",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?a6cd5095",
            "plugin_output": "URL               : https://10.27.1.131/\nInstalled version : iDRAC9 with firmware 4.40.10.00.32\nFixed version     : iDRAC9 with firmware 5.10.30.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.131",
            "system": "",
            "os": "other",
            "pluginid": "161798",
            "pluginname": "Dell EMC iDRAC8 < 2.80.80.80 / Dell EMC iDRAC9 < 4.40.40.00 (DSA-2021-177)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC8 or Dell EMC iDRAC9 installed on the remote host is affected by a vulnerability as referenced in the DSA-2021-177 advisory:\n\n  - Dell iDRAC 9 prior to version 4.40.40.00 and iDRAC 8 prior to version 2.80.80.80 contain a Stack Buffer     Overflow in Racadm. An authenticated remote attacker may potentially exploit this vulnerability to control     process execution and gain access to the underlying operating system. (CVE-2021-36301)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC8 version 2.80.80.80 or later. Upgrade to Dell EMC iDRAC9 version 4.40.40.00 or later.",
            "cve": "CVE-2021-36301",
            "cvss3": "7.2",
            "cvss2": "6.5",
            "see_also": "http://www.nessus.org/u?13d440ac",
            "plugin_output": "URL               : https://10.27.1.131/\nInstalled version : iDRAC9 with firmware 4.40.10.00.32\nFixed version     : iDRAC9 with firmware 4.40.40.00"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.131",
            "system": "",
            "os": "other",
            "pluginid": "202259",
            "pluginname": "Dell EMC iDRAC9 < 7.00.00.172 / 7.10.00.00 < 7.10.50.00 (DSA-2024-099)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Dell EMC iDRAC9 installed on the remote host is 7.00.00.172 or earlier or 7.10.0.0 prior to 7.10.50.00. It is, therefore, affected by a session hijacking vulnerability in IPMI. A malicious attacker could use this vulnerability to execute arbitrary code in the vulnerable application.\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Dell EMC iDRAC9 version 7.00.00.172, 7.10.50.00, or later.",
            "cve": "CVE-2024-25943",
            "cvss3": "7.6",
            "cvss2": "6.7",
            "see_also": "http://www.nessus.org/u?f3ad0e09",
            "plugin_output": "URL               : https://10.27.1.131/\nInstalled version : iDRAC9 with firmware 4.40.10.00.32\nFixed version     : iDRAC9 with firmware 7.00.00.172"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.130",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-F4Z2HZ2/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.130",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-F4Z2HZ2/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-F4Z2HZ2/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.129",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-F4Z1HZ2/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.129",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-F4Z1HZ2/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-F4Z1HZ2/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.128",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-G3J4HZ2/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.128",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-G3J4HZ2/E=support@dell.com\n|-Issuer  : C=US/ST=Texas/L=Round Rock/O=Dell Inc./OU=Remote Access Group/CN=iDRAC-G3J4HZ2/E=support@dell.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.101",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "9000",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.101",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.101",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "9000",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.101",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.101",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=TW/L=TW/O=ACSI/OU=TW/CN=acsi-sl-288"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.101",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "9000",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=California/L=Sunnyvale/O=Micro Focus/OU=Support Team/CN=acsi-sl-288/E=arst-support@microfocus.com\n|-Issuer  : C=US/ST=California/L=Sunnyvale/O=Hewlett-Packard/OU=ArcSight/CN=ArcSight Installation CA/E=arst-support@hp.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.101",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=TW/L=TW/O=ACSI/OU=TW/CN=acsi-sl-288\n|-Issuer  : C=TW/ST=TW/L=TW/O=ACSI/OU=TW/CN=acsi-sl-288"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.59",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "9000",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=California/L=Sunnyvale/O=Micro Focus/OU=Support Team/CN=acsi-sl-265/E=arst-support@microfocus.com\n|-Issuer  : C=US/ST=California/L=Sunnyvale/O=Micro Focus/OU=Support Team/CN=TemporaryAuthority/E=arst-support@microfocus.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.59",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=tw/ST=tw/L=tw/O=acsi/OU=acsi/CN=acsi-sl-269"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.59",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=tw/ST=tw/L=tw/O=acsi/OU=acsi/CN=acsi-sl-269\n|-Issuer  : C=tw/ST=tw/L=tw/O=acsi/OU=acsi/CN=acsi-sl-269"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.55",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "31705",
            "pluginname": "SSL Anonymous Cipher Suites Supported",
            "hostname": "",
            "port": "5666",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of anonymous SSL ciphers. While this enables an administrator to set up a service that encrypts traffic without having to generate and configure SSL certificates, it offers no way to verify the remote host's identity and renders the service vulnerable to a man-in-the-middle attack.\n\nNote: This is considerably easier to exploit if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of weak ciphers.",
            "cve": "CVE-2007-1858",
            "cvss3": "5.9",
            "cvss2": "2.6",
            "see_also": "http://www.nessus.org/u?3a040ada",
            "plugin_output": "The following is a list of SSL anonymous ciphers supported by the remote TCP server :\nMedium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nADH-DES-CBC3-SHA              0x00, 0x1B       DH            None     3DES-CBC(168)          SHA1\nAECDH-DES-CBC3-SHA            0xC0, 0x17       ECDH          None     3DES-CBC(168)          SHA1\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDH-AES128-SHA256              0x00, 0xA6       DH            None     AES-GCM(128)           SHA256\nDH-AES256-SHA384              0x00, 0xA7       DH            None     AES-GCM(256)           SHA384\nADH-AES128-SHA                0x00, 0x34       DH            None     AES-CBC(128)           SHA1\nADH-AES256-SHA                0x00, 0x3A       DH            None     AES-CBC(256)           SHA1\nADH-CAMELLIA128-SHA           0x00, 0x46       DH            None     Camellia-CBC(128)      SHA1\nADH-CAMELLIA256-SHA           0x00, 0x89       DH            None     Camellia-CBC(256)      SHA1\nADH-SEED-SHA                  0x00, 0x9B       DH            None     SEED-CBC(128)          SHA1\nAECDH-AES128-SHA              0xC0, 0x18       ECDH          None     AES-CBC(128)           SHA1\nAECDH-AES256-SHA              0xC0, 0x19       ECDH          None     AES-CBC(256)           SHA1\nAECDH-RC4-SHA                 0xC0, 0x16       ECDH          None     RC4(128)               SHA1\nDH-AES128-SHA256              0x00, 0x6C       DH            None     AES-CBC(128)           SHA256\nDH-AES256-SHA256              0x00, 0x6D       DH            None     AES-CBC(256)           SHA256\nDH-CAMELLIA128-SHA256         0x00, 0xBF       DH            None     Camellia-CBC(128)      SHA256\nDH-CAMELLIA256-SHA256         0x00, 0xC5       DH            None     Camellia-CBC(256)      SHA256\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.55",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "9000",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.55",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.55",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "5666",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nAECDH-RC4-SHA                 0xC0, 0x16       ECDH          None     RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.55",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "5666",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nADH-DES-CBC3-SHA              0x00, 0x1B       DH            None     3DES-CBC(168)          SHA1\nAECDH-DES-CBC3-SHA            0xC0, 0x17       ECDH          None     3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.55",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "9000",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.55",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.55",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "5666",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.55",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "5666",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.55",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=CA/L=95014/O=Arcsight/OU=ESM/CN=acsi-sl-265"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.55",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "9000",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=California/L=Sunnyvale/O=Micro Focus/OU=Support Team/CN=acsi-sl-265/E=arst-support@microfocus.com\n|-Issuer  : C=US/ST=California/L=Sunnyvale/O=Hewlett-Packard/OU=ArcSight/CN=ArcSight Installation CA/E=arst-support@hp.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.55",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=CA/L=95014/O=Arcsight/OU=ESM/CN=acsi-sl-265\n|-Issuer  : C=US/ST=CA/L=95014/O=Arcsight/OU=ESM/CN=acsi-sl-265"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.51",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=CA/L=95014/O=Arcsight/OU=ESM/CN=acsi-sl-261"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.51",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "9000",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=California/L=Sunnyvale/O=Micro Focus/OU=Support Team/CN=acsi-sl-261/E=arst-support@microfocus.com\n|-Issuer  : C=US/ST=California/L=Sunnyvale/O=Micro Focus/OU=Support Team/CN=TemporaryAuthority/E=arst-support@microfocus.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.51",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=CA/L=95014/O=Arcsight/OU=ESM/CN=acsi-sl-261\n|-Issuer  : C=US/ST=CA/L=95014/O=Arcsight/OU=ESM/CN=acsi-sl-261"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.46",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.46",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.46",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=TW/L=TW/O=ACSI/OU=TW/CN=acsi-sl-171"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.46",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=TW/L=TW/O=ACSI/OU=TW/CN=acsi-sl-171\n|-Issuer  : C=TW/ST=TW/L=TW/O=ACSI/OU=TW/CN=acsi-sl-171"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.42",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "9000",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.42",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.42",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "9000",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.42",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.42",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=TW/L=TW/O=ACSI/OU=TW/CN=acsi-sl-167"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.42",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "9000",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=California/L=Sunnyvale/O=Micro Focus/OU=Support Team/CN=acsi-sl-167/E=arst-support@microfocus.com\n|-Issuer  : C=US/ST=California/L=Sunnyvale/O=Hewlett-Packard/OU=ArcSight/CN=ArcSight Installation CA/E=arst-support@hp.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.42",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=TW/L=TW/O=ACSI/OU=TW/CN=acsi-sl-167\n|-Issuer  : C=TW/ST=TW/L=TW/O=ACSI/OU=TW/CN=acsi-sl-167"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.38",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=TW/L=TW/O=ACSI/OU=TW/CN=acsi-sl-163"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.38",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=TW/L=TW/O=ACSI/OU=TW/CN=acsi-sl-163\n|-Issuer  : C=TW/ST=TW/L=TW/O=ACSI/OU=TW/CN=acsi-sl-163"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.38",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.38",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.37",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "9000",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.37",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.37",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "9000",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.37",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.37",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "9000",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=California/L=Sunnyvale/O=Micro Focus/OU=Support Team/CN=acsi-sl-156/E=arst-support@microfocus.com\n|-Issuer  : C=US/ST=California/L=Sunnyvale/O=Hewlett-Packard/OU=ArcSight/CN=ArcSight Installation CA/E=arst-support@hp.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.37",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=TW/L=TW/O=ACSI/OU=ACSI/CN=acsi-sl-156\n|-Issuer  : C=TW/ST=TW/L=TW/O=ACSI/OU=ACSI/CN=acsi-sl-156"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.37",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=TW/L=TW/O=ACSI/OU=ACSI/CN=acsi-sl-156"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.32",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "9000",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.32",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.32",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "9000",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.32",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.32",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=CA/L=95014/O=Arcsight/OU=ESM/CN=acsi-sl-118"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.32",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "9000",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=California/L=Sunnyvale/O=Micro Focus/OU=Support Team/CN=acsi-sl-118/E=arst-support@microfocus.com\n|-Issuer  : C=US/ST=California/L=Sunnyvale/O=Hewlett-Packard/OU=ArcSight/CN=ArcSight Installation CA/E=arst-support@hp.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.32",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=CA/L=95014/O=Arcsight/OU=ESM/CN=acsi-sl-118\n|-Issuer  : C=US/ST=CA/L=95014/O=Arcsight/OU=ESM/CN=acsi-sl-118"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.31",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.31",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.31",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=TW/L=LongTan/O=Acer Cyber Security Inc./OU=ICD370/CN=acsi-sl-066"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.31",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=TW/L=LongTan/O=Acer Cyber Security Inc./OU=ICD370/CN=acsi-sl-066\n|-Issuer  : C=TW/ST=TW/L=LongTan/O=Acer Cyber Security Inc./OU=ICD370/CN=acsi-sl-066"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.25",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=CA/L=95014/O=Arcsight/OU=ESM/CN=acsi-sl-027"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.25",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "9000",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=California/L=Sunnyvale/O=Micro Focus/OU=Support Team/CN=acsi-sl-027/E=arst-support@microfocus.com\n|-Issuer  : C=US/ST=California/L=Sunnyvale/O=Micro Focus/OU=Support Team/CN=TemporaryAuthority/E=arst-support@microfocus.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.25",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=CA/L=95014/O=Arcsight/OU=ESM/CN=acsi-sl-027\n|-Issuer  : C=US/ST=CA/L=95014/O=Arcsight/OU=ESM/CN=acsi-sl-027"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.24",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.24",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.24",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Taiwan/L=Long Tan/O=Acer/OU=eDC/CN=acsi-sl-026"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.24",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taiwan/L=Long Tan/O=Acer/OU=eDC/CN=acsi-sl-026\n|-Issuer  : C=TW/ST=Taiwan/L=Long Tan/O=Acer/OU=eDC/CN=acsi-sl-026"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.21",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.21",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.21",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=TAIWAN/L=Long Tan/O=Acer/OU=eDC/CN=edc-sl-385"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.21",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=TAIWAN/L=Long Tan/O=Acer/OU=eDC/CN=edc-sl-385\n|-Issuer  : C=TW/ST=TAIWAN/L=Long Tan/O=Acer/OU=eDC/CN=edc-sl-385"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.19",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.19",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.1.19",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Taiwan/L=Long Tan/O=Acer/OU=eDC/CN=edc-sl-351"
        },
        {
            "file_no": 0,
            "ip": "10.27.1.19",
            "system": "Infoblox NIOS",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taiwan/L=Long Tan/O=Acer/OU=eDC/CN=edc-sl-351\n|-Issuer  : C=TW/ST=Taiwan/L=Long Tan/O=Acer/OU=eDC/CN=edc-sl-351"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.174",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "76213",
            "pluginname": "SuperMicro IPMI PSBlock File Plaintext Password Disclosure",
            "hostname": "",
            "port": "49152",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote SuperMicro IPMI device is affected by an information disclosure vulnerability because it exposes all usernames and passwords in plaintext via the PSBlock file. A remote, unauthenticated attacker can exploit this vulnerability to download all usernames and passwords and gain a shell on the device.",
            "solution": "Upgrade to the latest BIOS version.",
            "cve": "",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "http://www.nessus.org/u?8762dc4d",
            "plugin_output": "URL : http://10.27.0.174:49152/PSBlock\nNessus discovered the following usernames and passwords :\nUsername : Anonymous\nPassword : a******n\nUsername : root\nPassword : s******r"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.174",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "20007",
            "pluginname": "SSL Version 2 and 3 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote service accepts connections encrypted using SSL 2.0 and/or SSL 3.0. These versions of SSL are affected by several cryptographic flaws, including:\n\n  - An insecure padding scheme with CBC ciphers.\n\n  - Insecure session renegotiation and resumption schemes.\n\nAn attacker can exploit these flaws to conduct man-in-the-middle attacks or to decrypt communications between the affected service and clients.\n\nAlthough SSL/TLS has a secure means for choosing the highest supported version of the protocol (so that these versions will be used only if the client or server support nothing better), many web browsers implement this in an unsafe way that allows an attacker to downgrade a connection (such as in POODLE). Therefore, it is recommended that these protocols be disabled entirely.\n\nNIST has determined that SSL 3.0 is no longer acceptable for secure communications. As of the date of enforcement found in PCI DSS v3.1, any version of SSL will not meet the PCI SSC's definition of 'strong cryptography'.",
            "solution": "Consult the application's documentation to disable SSL 2.0 and 3.0.\nUse TLS 1.2 (with approved cipher suites) or higher instead.",
            "cve": "",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "https://www.schneier.com/academic/paperfiles/paper-ssl.pdf\nhttp://www.nessus.org/u?b06c7e95\nhttp://www.nessus.org/u?247c4540\nhttps://www.openssl.org/~bodo/ssl-poodle.pdf\nhttp://www.nessus.org/u?5d15ba70\nhttps://www.imperialviolet.org/2014/10/14/poodle.html\nhttps://tools.ietf.org/html/rfc7507\nhttps://tools.ietf.org/html/rfc7568",
            "plugin_output": "- SSLv3 is enabled and the server supports at least one cipher.\nExplanation: TLS 1.0 and SSL 3.0 cipher suites may be used with SSLv3\nLow Strength Ciphers (<= 64-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC-SHA                                    RSA           RSA      DES-CBC(56)            SHA1\nMedium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                                   RSA           RSA      3DES-CBC(168)          SHA1\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nAES128-SHA                                     RSA           RSA      AES-CBC(128)           SHA1\nAES256-SHA                                     RSA           RSA      AES-CBC(256)           SHA1\nIDEA-CBC-SHA                                   RSA           RSA      IDEA-CBC(128)          SHA1\nRC4-MD5                                        RSA           RSA      RC4(128)               MD5\nRC4-SHA                                        RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.174",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "78479",
            "pluginname": "SSLv3 Padding Oracle On Downgraded Legacy Encryption Vulnerability (POODLE)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "The remote host is affected by a man-in-the-middle (MitM) information disclosure vulnerability known as POODLE. The vulnerability is due to the way SSL 3.0 handles padding bytes when decrypting messages encrypted using block ciphers in cipher block chaining (CBC) mode.\nMitM attackers can decrypt a selected byte of a cipher text in as few as 256 tries if they are able to force a victim application to repeatedly send the same data over newly created SSL 3.0 connections.\n\nAs long as a client and service both support SSLv3, a connection can be 'rolled back' to SSLv3, even if TLSv1 or newer is supported by the client and service.\n\nThe TLS Fallback SCSV mechanism prevents 'version rollback' attacks without impacting legacy clients; however, it can only protect connections when the client and service support the mechanism. Sites that cannot disable SSLv3 immediately should enable this mechanism.\n\nThis is a vulnerability in the SSLv3 specification, not in any particular SSL implementation. Disabling SSLv3 is the only way to completely mitigate the vulnerability.",
            "solution": "Disable SSLv3.\n\nServices that must support SSLv3 should enable the TLS Fallback SCSV mechanism until SSLv3 can be disabled.",
            "cve": "CVE-2014-3566",
            "cvss3": "3.4",
            "cvss2": "4.3",
            "see_also": "https://www.imperialviolet.org/2014/10/14/poodle.html\nhttps://www.openssl.org/~bodo/ssl-poodle.pdf\nhttps://tools.ietf.org/html/draft-ietf-tls-downgrade-scsv-00",
            "plugin_output": "Nessus determined that the remote server supports SSLv3 with at least one CBC\ncipher suite, indicating that this server is vulnerable.\nIt appears that TLSv1 or newer is supported on the server. However, the\nFallback SCSV mechanism is not supported, allowing connections to be \"rolled\nback\" to SSLv3."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.174",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.174",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.174",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "26928",
            "pluginname": "SSL Weak Cipher Suites Supported",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of SSL ciphers that offer weak encryption.\n\nNote: This is considerably easier to exploit if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application, if possible to avoid the use of weak ciphers.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "4.3",
            "see_also": "http://www.nessus.org/u?6527892d",
            "plugin_output": "Here is the list of weak SSL ciphers supported by the remote server :\nLow Strength Ciphers (<= 64-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC-SHA                   0x00, 0x09       RSA           RSA      DES-CBC(56)            SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.174",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.174",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "42880",
            "pluginname": "SSL / TLS Renegotiation Handshakes MiTM Plaintext Data Injection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service encrypts traffic using TLS / SSL but allows a client to insecurely renegotiate the connection after the initial handshake.\nAn unauthenticated, remote attacker may be able to leverage this issue to inject an arbitrary amount of plaintext into the beginning of the application protocol stream, which could facilitate man-in-the-middle attacks if the service assumes that the sessions before and after renegotiation are from the same 'client' and merges them at the application layer.",
            "solution": "Contact the vendor for specific patch information.",
            "cve": "CVE-2009-3555",
            "cvss3": "",
            "cvss2": "5.8",
            "see_also": "http://www.ietf.org/mail-archive/web/tls/current/msg03948.html\nhttp://www.g-sec.lu/practicaltls.pdf\nhttps://tools.ietf.org/html/rfc5746",
            "plugin_output": "TLSv1 supports insecure renegotiation.\nSSLv3 supports insecure renegotiation."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.174",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "69551",
            "pluginname": "SSL Certificate Chain Contains RSA Keys Less Than 2048 bits",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "At least one of the X.509 certificates sent by the remote host has a key that is shorter than 2048 bits. According to industry standards set by the Certification Authority/Browser (CA/B) Forum, certificates issued after January 1, 2014 must be at least 2048 bits.\n\nSome browser SSL implementations may reject keys less than 2048 bits after January 1, 2014. Additionally, some SSL certificate vendors may revoke certificates less than 2048 bits before January 1, 2014.\n\nNote that Nessus will not flag root certificates with RSA keys less than 2048 bits if they were issued prior to December 31, 2010, as the standard considers them exempt.",
            "solution": "Replace the certificate in the chain with the RSA key less than 2048 bits in length with a longer key, and reissue any certificates signed by the old certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "https://www.cabforum.org/wp-content/uploads/Baseline_Requirements_V1.pdf",
            "plugin_output": "The following certificates were part of the certificate chain\nsent by the remote host, but contain RSA keys that are considered\nto be weak :\n|-Subject        : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com\n|-RSA Key Length : 1024 bits"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.174",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.174",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com\n|-Not After : Apr 12 02:19:39 2014 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com\n|-Issuer  : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.174",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "71534",
            "pluginname": "SuperMicro Device Uses Default SSL Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate of the remote host has not been changed from the default certificate that is hardwired into the firmware.  The private key corresponding to this certificate is shared across all devices running the same firmware, meaning that the remote host's X.509 certificate cannot be trusted.",
            "solution": "Configure the device to use a device-specific certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "5.8",
            "see_also": "http://www.nessus.org/u?f7e3f14d",
            "plugin_output": "This SSL key is used by other devices, and therefore cannot be trusted :\nAlgorithm  : RSA Encryption\nKey Length : 1024 bits\nPublic Key : B5 AB 59 11 E9 C8 56 2D FC 2C A4 3F 38 02 CC B2\nE8 41 55 E9 26 11 1B 2F E0 20 BB 18 1A D9 FD 90\n24 22 D9 11 68 6C DC 52 E4 2B E9 85 B1 96 9F D0\nFD 9F 98 09 A5 35 56 2D 66 F7 2F 02 71 1A E0 4A\n49 18 F6 C2 B1 CB 95 E8 F3 C3 A9 12 98 5F B7 C4\n50 AE 31 FC 55 15 28 FC 4C CF 09 AA 53 AA 33 57\n3A 96 F1 F6 31 25 E7 37 BA 49 05 57 1E 90 D2 9B\n05 41 1F A6 D6 A4 3D 27 A3 4A D9 63 6D 77 9C 4B\nExponent   : 01 00 01"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.174",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=California, L=San Jose, O=Super Micro Computer Inc., OU=Software Department, CN=IPMI, emailAddress=linda.wu@supermicro.com\nIssuer           : C=US, ST=California, L=San Jose, O=Super Micro Computer Inc., OU=Software Department, CN=IPMI, emailAddress=linda.wu@supermicro.com\nNot valid before : Apr 12 02:19:39 2012 GMT\nNot valid after  : Apr 12 02:19:39 2014 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.174",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "70545",
            "pluginname": "Dropbear SSH Server < 2013.59 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its self-reported banner, the version of Dropbear SSH running on this port is earlier than 2013.59.  As such, it is potentially affected by multiple vulnerabilities :\n\n  - A denial of service vulnerability caused by the way the     'buf_decompress()' function handles compressed files.\n    (CVE-2013-4421)\n\n  - User-enumeration is possible due to a timing error when     authenticating users. (CVE-2013-4434)",
            "solution": "Upgrade to the Dropbear SSH 2013.59 or later.",
            "cve": "CVE-2013-4421",
            "cvss3": "",
            "cvss2": "5.0",
            "see_also": "https://matt.ucc.asn.au/dropbear/CHANGES\nhttps://secure.ucc.asn.au/hg/dropbear/rev/0bf76f54de6f\nhttps://secure.ucc.asn.au/hg/dropbear/rev/a625f9e135a4",
            "plugin_output": "Version source    : SSH-2.0-dropbear_0.52\nInstalled version : 0.52\nFixed version     : 2013.59"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.174",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "93650",
            "pluginname": "Dropbear SSH Server < 2016.72 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "4",
            "description": "According to its self-reported version in its banner, Dropbear SSH running on the remote host is prior to 2016.74. It is, therefore, affected by the following vulnerabilities :\n\n  - A format string flaw exists due to improper handling of     string format specifiers (e.g., %s and %x) in usernames     and host arguments. An unauthenticated, remote attacker     can exploit this to execute arbitrary code with root     privileges. (CVE-2016-7406)\n\n  - A flaw exists in dropbearconvert due to improper     handling of specially crafted OpenSSH key files. An     unauthenticated, remote attacker can exploit this to     execute arbitrary code. (CVE-2016-7407)\n\n  - A flaw exists in dbclient when handling the -m or -c     arguments in scripts. An unauthenticated, remote attacker     can exploit this, via a specially crafted script, to     execute arbitrary code. (CVE-2016-7408)\n\n  - A flaw exists in dbclient or dropbear server if they are     compiled with the DEBUG_TRACE option and then run using     the -v switch. A local attacker can exploit this to     disclose process memory. (CVE-2016-7409)",
            "solution": "Upgrade to Dropbear SSH version 2016.74 or later.",
            "cve": "CVE-2016-7406",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "https://matt.ucc.asn.au/dropbear/CHANGES",
            "plugin_output": "Version source    : SSH-2.0-dropbear_0.52\nInstalled version : 0.52\nFixed version     : 2016.74"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.174",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "58183",
            "pluginname": "Dropbear SSH Server Channel Concurrency Use-after-free Remote Code Execution",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "3",
            "description": "According to its self-reported banner, the remote host is running a version of Dropbear SSH before 2012.55.  As such, it reportedly contains a flaw that might allow an attacker to run arbitrary code on the remote host with root privileges if they are authenticated using a public key and command restriction is enforced. \n\nNote that Nessus has not tried to exploit this vulnerability but instead has relied solely on the version in the service's banner. \n\nNote also, in cases where the host is running ESXi 4.0 or ESXi 4.1, VMware states in their KB article id 2037316 that this is a false positive since administrative access is required to login via SSH so there are no privileges to be gained by exploiting this issue.  That is true only in a default setup, not one in which SSH access has been enabled for non-root users.",
            "solution": "Upgrade to the Dropbear SSH 2012.55 or later.",
            "cve": "CVE-2012-0920",
            "cvss3": "",
            "cvss2": "7.1",
            "see_also": "https://matt.ucc.asn.au/dropbear/CHANGES\nhttps://secure.ucc.asn.au/hg/dropbear/rev/818108bf7749\nhttps://mantor.org/~northox/misc/CVE-2012-0920.html\nhttp://www.nessus.org/u?b2ca47ea",
            "plugin_output": "Version source    : SSH-2.0-dropbear_0.52\nInstalled version : 0.52\nFixed version     : 2012.55"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.173",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "76213",
            "pluginname": "SuperMicro IPMI PSBlock File Plaintext Password Disclosure",
            "hostname": "",
            "port": "49152",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote SuperMicro IPMI device is affected by an information disclosure vulnerability because it exposes all usernames and passwords in plaintext via the PSBlock file. A remote, unauthenticated attacker can exploit this vulnerability to download all usernames and passwords and gain a shell on the device.",
            "solution": "Upgrade to the latest BIOS version.",
            "cve": "",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "http://www.nessus.org/u?8762dc4d",
            "plugin_output": "URL : http://10.27.0.173:49152/PSBlock\nNessus discovered the following usernames and passwords :\nUsername : Anonymous\nPassword : a******n\nUsername : root\nPassword : s******r"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.173",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "20007",
            "pluginname": "SSL Version 2 and 3 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote service accepts connections encrypted using SSL 2.0 and/or SSL 3.0. These versions of SSL are affected by several cryptographic flaws, including:\n\n  - An insecure padding scheme with CBC ciphers.\n\n  - Insecure session renegotiation and resumption schemes.\n\nAn attacker can exploit these flaws to conduct man-in-the-middle attacks or to decrypt communications between the affected service and clients.\n\nAlthough SSL/TLS has a secure means for choosing the highest supported version of the protocol (so that these versions will be used only if the client or server support nothing better), many web browsers implement this in an unsafe way that allows an attacker to downgrade a connection (such as in POODLE). Therefore, it is recommended that these protocols be disabled entirely.\n\nNIST has determined that SSL 3.0 is no longer acceptable for secure communications. As of the date of enforcement found in PCI DSS v3.1, any version of SSL will not meet the PCI SSC's definition of 'strong cryptography'.",
            "solution": "Consult the application's documentation to disable SSL 2.0 and 3.0.\nUse TLS 1.2 (with approved cipher suites) or higher instead.",
            "cve": "",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "https://www.schneier.com/academic/paperfiles/paper-ssl.pdf\nhttp://www.nessus.org/u?b06c7e95\nhttp://www.nessus.org/u?247c4540\nhttps://www.openssl.org/~bodo/ssl-poodle.pdf\nhttp://www.nessus.org/u?5d15ba70\nhttps://www.imperialviolet.org/2014/10/14/poodle.html\nhttps://tools.ietf.org/html/rfc7507\nhttps://tools.ietf.org/html/rfc7568",
            "plugin_output": "- SSLv3 is enabled and the server supports at least one cipher.\nExplanation: TLS 1.0 and SSL 3.0 cipher suites may be used with SSLv3\nLow Strength Ciphers (<= 64-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC-SHA                                    RSA           RSA      DES-CBC(56)            SHA1\nMedium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                                   RSA           RSA      3DES-CBC(168)          SHA1\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nAES128-SHA                                     RSA           RSA      AES-CBC(128)           SHA1\nAES256-SHA                                     RSA           RSA      AES-CBC(256)           SHA1\nIDEA-CBC-SHA                                   RSA           RSA      IDEA-CBC(128)          SHA1\nRC4-MD5                                        RSA           RSA      RC4(128)               MD5\nRC4-SHA                                        RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.173",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.173",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "78479",
            "pluginname": "SSLv3 Padding Oracle On Downgraded Legacy Encryption Vulnerability (POODLE)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "The remote host is affected by a man-in-the-middle (MitM) information disclosure vulnerability known as POODLE. The vulnerability is due to the way SSL 3.0 handles padding bytes when decrypting messages encrypted using block ciphers in cipher block chaining (CBC) mode.\nMitM attackers can decrypt a selected byte of a cipher text in as few as 256 tries if they are able to force a victim application to repeatedly send the same data over newly created SSL 3.0 connections.\n\nAs long as a client and service both support SSLv3, a connection can be 'rolled back' to SSLv3, even if TLSv1 or newer is supported by the client and service.\n\nThe TLS Fallback SCSV mechanism prevents 'version rollback' attacks without impacting legacy clients; however, it can only protect connections when the client and service support the mechanism. Sites that cannot disable SSLv3 immediately should enable this mechanism.\n\nThis is a vulnerability in the SSLv3 specification, not in any particular SSL implementation. Disabling SSLv3 is the only way to completely mitigate the vulnerability.",
            "solution": "Disable SSLv3.\n\nServices that must support SSLv3 should enable the TLS Fallback SCSV mechanism until SSLv3 can be disabled.",
            "cve": "CVE-2014-3566",
            "cvss3": "3.4",
            "cvss2": "4.3",
            "see_also": "https://www.imperialviolet.org/2014/10/14/poodle.html\nhttps://www.openssl.org/~bodo/ssl-poodle.pdf\nhttps://tools.ietf.org/html/draft-ietf-tls-downgrade-scsv-00",
            "plugin_output": "Nessus determined that the remote server supports SSLv3 with at least one CBC\ncipher suite, indicating that this server is vulnerable.\nIt appears that TLSv1 or newer is supported on the server. However, the\nFallback SCSV mechanism is not supported, allowing connections to be \"rolled\nback\" to SSLv3."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.173",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.173",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "26928",
            "pluginname": "SSL Weak Cipher Suites Supported",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of SSL ciphers that offer weak encryption.\n\nNote: This is considerably easier to exploit if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application, if possible to avoid the use of weak ciphers.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "4.3",
            "see_also": "http://www.nessus.org/u?6527892d",
            "plugin_output": "Here is the list of weak SSL ciphers supported by the remote server :\nLow Strength Ciphers (<= 64-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC-SHA                   0x00, 0x09       RSA           RSA      DES-CBC(56)            SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.173",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.173",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.173",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com\n|-Not After : Apr 12 02:19:39 2014 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com\n|-Issuer  : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.173",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "69551",
            "pluginname": "SSL Certificate Chain Contains RSA Keys Less Than 2048 bits",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "At least one of the X.509 certificates sent by the remote host has a key that is shorter than 2048 bits. According to industry standards set by the Certification Authority/Browser (CA/B) Forum, certificates issued after January 1, 2014 must be at least 2048 bits.\n\nSome browser SSL implementations may reject keys less than 2048 bits after January 1, 2014. Additionally, some SSL certificate vendors may revoke certificates less than 2048 bits before January 1, 2014.\n\nNote that Nessus will not flag root certificates with RSA keys less than 2048 bits if they were issued prior to December 31, 2010, as the standard considers them exempt.",
            "solution": "Replace the certificate in the chain with the RSA key less than 2048 bits in length with a longer key, and reissue any certificates signed by the old certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "https://www.cabforum.org/wp-content/uploads/Baseline_Requirements_V1.pdf",
            "plugin_output": "The following certificates were part of the certificate chain\nsent by the remote host, but contain RSA keys that are considered\nto be weak :\n|-Subject        : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com\n|-RSA Key Length : 1024 bits"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.173",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=California, L=San Jose, O=Super Micro Computer Inc., OU=Software Department, CN=IPMI, emailAddress=linda.wu@supermicro.com\nIssuer           : C=US, ST=California, L=San Jose, O=Super Micro Computer Inc., OU=Software Department, CN=IPMI, emailAddress=linda.wu@supermicro.com\nNot valid before : Apr 12 02:19:39 2012 GMT\nNot valid after  : Apr 12 02:19:39 2014 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.173",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "71534",
            "pluginname": "SuperMicro Device Uses Default SSL Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate of the remote host has not been changed from the default certificate that is hardwired into the firmware.  The private key corresponding to this certificate is shared across all devices running the same firmware, meaning that the remote host's X.509 certificate cannot be trusted.",
            "solution": "Configure the device to use a device-specific certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "5.8",
            "see_also": "http://www.nessus.org/u?f7e3f14d",
            "plugin_output": "This SSL key is used by other devices, and therefore cannot be trusted :\nAlgorithm  : RSA Encryption\nKey Length : 1024 bits\nPublic Key : B5 AB 59 11 E9 C8 56 2D FC 2C A4 3F 38 02 CC B2\nE8 41 55 E9 26 11 1B 2F E0 20 BB 18 1A D9 FD 90\n24 22 D9 11 68 6C DC 52 E4 2B E9 85 B1 96 9F D0\nFD 9F 98 09 A5 35 56 2D 66 F7 2F 02 71 1A E0 4A\n49 18 F6 C2 B1 CB 95 E8 F3 C3 A9 12 98 5F B7 C4\n50 AE 31 FC 55 15 28 FC 4C CF 09 AA 53 AA 33 57\n3A 96 F1 F6 31 25 E7 37 BA 49 05 57 1E 90 D2 9B\n05 41 1F A6 D6 A4 3D 27 A3 4A D9 63 6D 77 9C 4B\nExponent   : 01 00 01"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.173",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "42880",
            "pluginname": "SSL / TLS Renegotiation Handshakes MiTM Plaintext Data Injection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service encrypts traffic using TLS / SSL but allows a client to insecurely renegotiate the connection after the initial handshake.\nAn unauthenticated, remote attacker may be able to leverage this issue to inject an arbitrary amount of plaintext into the beginning of the application protocol stream, which could facilitate man-in-the-middle attacks if the service assumes that the sessions before and after renegotiation are from the same 'client' and merges them at the application layer.",
            "solution": "Contact the vendor for specific patch information.",
            "cve": "CVE-2009-3555",
            "cvss3": "",
            "cvss2": "5.8",
            "see_also": "http://www.ietf.org/mail-archive/web/tls/current/msg03948.html\nhttp://www.g-sec.lu/practicaltls.pdf\nhttps://tools.ietf.org/html/rfc5746",
            "plugin_output": "TLSv1 supports insecure renegotiation.\nSSLv3 supports insecure renegotiation."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.173",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "70545",
            "pluginname": "Dropbear SSH Server < 2013.59 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its self-reported banner, the version of Dropbear SSH running on this port is earlier than 2013.59.  As such, it is potentially affected by multiple vulnerabilities :\n\n  - A denial of service vulnerability caused by the way the     'buf_decompress()' function handles compressed files.\n    (CVE-2013-4421)\n\n  - User-enumeration is possible due to a timing error when     authenticating users. (CVE-2013-4434)",
            "solution": "Upgrade to the Dropbear SSH 2013.59 or later.",
            "cve": "CVE-2013-4421",
            "cvss3": "",
            "cvss2": "5.0",
            "see_also": "https://matt.ucc.asn.au/dropbear/CHANGES\nhttps://secure.ucc.asn.au/hg/dropbear/rev/0bf76f54de6f\nhttps://secure.ucc.asn.au/hg/dropbear/rev/a625f9e135a4",
            "plugin_output": "Version source    : SSH-2.0-dropbear_0.52\nInstalled version : 0.52\nFixed version     : 2013.59"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.173",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "93650",
            "pluginname": "Dropbear SSH Server < 2016.72 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "4",
            "description": "According to its self-reported version in its banner, Dropbear SSH running on the remote host is prior to 2016.74. It is, therefore, affected by the following vulnerabilities :\n\n  - A format string flaw exists due to improper handling of     string format specifiers (e.g., %s and %x) in usernames     and host arguments. An unauthenticated, remote attacker     can exploit this to execute arbitrary code with root     privileges. (CVE-2016-7406)\n\n  - A flaw exists in dropbearconvert due to improper     handling of specially crafted OpenSSH key files. An     unauthenticated, remote attacker can exploit this to     execute arbitrary code. (CVE-2016-7407)\n\n  - A flaw exists in dbclient when handling the -m or -c     arguments in scripts. An unauthenticated, remote attacker     can exploit this, via a specially crafted script, to     execute arbitrary code. (CVE-2016-7408)\n\n  - A flaw exists in dbclient or dropbear server if they are     compiled with the DEBUG_TRACE option and then run using     the -v switch. A local attacker can exploit this to     disclose process memory. (CVE-2016-7409)",
            "solution": "Upgrade to Dropbear SSH version 2016.74 or later.",
            "cve": "CVE-2016-7406",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "https://matt.ucc.asn.au/dropbear/CHANGES",
            "plugin_output": "Version source    : SSH-2.0-dropbear_0.52\nInstalled version : 0.52\nFixed version     : 2016.74"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.173",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "58183",
            "pluginname": "Dropbear SSH Server Channel Concurrency Use-after-free Remote Code Execution",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "3",
            "description": "According to its self-reported banner, the remote host is running a version of Dropbear SSH before 2012.55.  As such, it reportedly contains a flaw that might allow an attacker to run arbitrary code on the remote host with root privileges if they are authenticated using a public key and command restriction is enforced. \n\nNote that Nessus has not tried to exploit this vulnerability but instead has relied solely on the version in the service's banner. \n\nNote also, in cases where the host is running ESXi 4.0 or ESXi 4.1, VMware states in their KB article id 2037316 that this is a false positive since administrative access is required to login via SSH so there are no privileges to be gained by exploiting this issue.  That is true only in a default setup, not one in which SSH access has been enabled for non-root users.",
            "solution": "Upgrade to the Dropbear SSH 2012.55 or later.",
            "cve": "CVE-2012-0920",
            "cvss3": "",
            "cvss2": "7.1",
            "see_also": "https://matt.ucc.asn.au/dropbear/CHANGES\nhttps://secure.ucc.asn.au/hg/dropbear/rev/818108bf7749\nhttps://mantor.org/~northox/misc/CVE-2012-0920.html\nhttp://www.nessus.org/u?b2ca47ea",
            "plugin_output": "Version source    : SSH-2.0-dropbear_0.52\nInstalled version : 0.52\nFixed version     : 2012.55"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.172",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "76213",
            "pluginname": "SuperMicro IPMI PSBlock File Plaintext Password Disclosure",
            "hostname": "",
            "port": "49152",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote SuperMicro IPMI device is affected by an information disclosure vulnerability because it exposes all usernames and passwords in plaintext via the PSBlock file. A remote, unauthenticated attacker can exploit this vulnerability to download all usernames and passwords and gain a shell on the device.",
            "solution": "Upgrade to the latest BIOS version.",
            "cve": "",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "http://www.nessus.org/u?8762dc4d",
            "plugin_output": "URL : http://10.27.0.172:49152/PSBlock\nNessus discovered the following usernames and passwords :\nUsername : Anonymous\nPassword : a******n\nUsername : root\nPassword : s******r"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.172",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "20007",
            "pluginname": "SSL Version 2 and 3 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote service accepts connections encrypted using SSL 2.0 and/or SSL 3.0. These versions of SSL are affected by several cryptographic flaws, including:\n\n  - An insecure padding scheme with CBC ciphers.\n\n  - Insecure session renegotiation and resumption schemes.\n\nAn attacker can exploit these flaws to conduct man-in-the-middle attacks or to decrypt communications between the affected service and clients.\n\nAlthough SSL/TLS has a secure means for choosing the highest supported version of the protocol (so that these versions will be used only if the client or server support nothing better), many web browsers implement this in an unsafe way that allows an attacker to downgrade a connection (such as in POODLE). Therefore, it is recommended that these protocols be disabled entirely.\n\nNIST has determined that SSL 3.0 is no longer acceptable for secure communications. As of the date of enforcement found in PCI DSS v3.1, any version of SSL will not meet the PCI SSC's definition of 'strong cryptography'.",
            "solution": "Consult the application's documentation to disable SSL 2.0 and 3.0.\nUse TLS 1.2 (with approved cipher suites) or higher instead.",
            "cve": "",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "https://www.schneier.com/academic/paperfiles/paper-ssl.pdf\nhttp://www.nessus.org/u?b06c7e95\nhttp://www.nessus.org/u?247c4540\nhttps://www.openssl.org/~bodo/ssl-poodle.pdf\nhttp://www.nessus.org/u?5d15ba70\nhttps://www.imperialviolet.org/2014/10/14/poodle.html\nhttps://tools.ietf.org/html/rfc7507\nhttps://tools.ietf.org/html/rfc7568",
            "plugin_output": "- SSLv3 is enabled and the server supports at least one cipher.\nExplanation: TLS 1.0 and SSL 3.0 cipher suites may be used with SSLv3\nLow Strength Ciphers (<= 64-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC-SHA                                    RSA           RSA      DES-CBC(56)            SHA1\nMedium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                                   RSA           RSA      3DES-CBC(168)          SHA1\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nAES128-SHA                                     RSA           RSA      AES-CBC(128)           SHA1\nAES256-SHA                                     RSA           RSA      AES-CBC(256)           SHA1\nIDEA-CBC-SHA                                   RSA           RSA      IDEA-CBC(128)          SHA1\nRC4-MD5                                        RSA           RSA      RC4(128)               MD5\nRC4-SHA                                        RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.172",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "78479",
            "pluginname": "SSLv3 Padding Oracle On Downgraded Legacy Encryption Vulnerability (POODLE)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "The remote host is affected by a man-in-the-middle (MitM) information disclosure vulnerability known as POODLE. The vulnerability is due to the way SSL 3.0 handles padding bytes when decrypting messages encrypted using block ciphers in cipher block chaining (CBC) mode.\nMitM attackers can decrypt a selected byte of a cipher text in as few as 256 tries if they are able to force a victim application to repeatedly send the same data over newly created SSL 3.0 connections.\n\nAs long as a client and service both support SSLv3, a connection can be 'rolled back' to SSLv3, even if TLSv1 or newer is supported by the client and service.\n\nThe TLS Fallback SCSV mechanism prevents 'version rollback' attacks without impacting legacy clients; however, it can only protect connections when the client and service support the mechanism. Sites that cannot disable SSLv3 immediately should enable this mechanism.\n\nThis is a vulnerability in the SSLv3 specification, not in any particular SSL implementation. Disabling SSLv3 is the only way to completely mitigate the vulnerability.",
            "solution": "Disable SSLv3.\n\nServices that must support SSLv3 should enable the TLS Fallback SCSV mechanism until SSLv3 can be disabled.",
            "cve": "CVE-2014-3566",
            "cvss3": "3.4",
            "cvss2": "4.3",
            "see_also": "https://www.imperialviolet.org/2014/10/14/poodle.html\nhttps://www.openssl.org/~bodo/ssl-poodle.pdf\nhttps://tools.ietf.org/html/draft-ietf-tls-downgrade-scsv-00",
            "plugin_output": "Nessus determined that the remote server supports SSLv3 with at least one CBC\ncipher suite, indicating that this server is vulnerable.\nIt appears that TLSv1 or newer is supported on the server. However, the\nFallback SCSV mechanism is not supported, allowing connections to be \"rolled\nback\" to SSLv3."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.172",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.172",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.172",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "26928",
            "pluginname": "SSL Weak Cipher Suites Supported",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of SSL ciphers that offer weak encryption.\n\nNote: This is considerably easier to exploit if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application, if possible to avoid the use of weak ciphers.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "4.3",
            "see_also": "http://www.nessus.org/u?6527892d",
            "plugin_output": "Here is the list of weak SSL ciphers supported by the remote server :\nLow Strength Ciphers (<= 64-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC-SHA                   0x00, 0x09       RSA           RSA      DES-CBC(56)            SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.172",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.172",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.172",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com\n|-Not After : Apr 12 02:19:39 2014 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com\n|-Issuer  : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.172",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "69551",
            "pluginname": "SSL Certificate Chain Contains RSA Keys Less Than 2048 bits",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "At least one of the X.509 certificates sent by the remote host has a key that is shorter than 2048 bits. According to industry standards set by the Certification Authority/Browser (CA/B) Forum, certificates issued after January 1, 2014 must be at least 2048 bits.\n\nSome browser SSL implementations may reject keys less than 2048 bits after January 1, 2014. Additionally, some SSL certificate vendors may revoke certificates less than 2048 bits before January 1, 2014.\n\nNote that Nessus will not flag root certificates with RSA keys less than 2048 bits if they were issued prior to December 31, 2010, as the standard considers them exempt.",
            "solution": "Replace the certificate in the chain with the RSA key less than 2048 bits in length with a longer key, and reissue any certificates signed by the old certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "https://www.cabforum.org/wp-content/uploads/Baseline_Requirements_V1.pdf",
            "plugin_output": "The following certificates were part of the certificate chain\nsent by the remote host, but contain RSA keys that are considered\nto be weak :\n|-Subject        : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com\n|-RSA Key Length : 1024 bits"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.172",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=California, L=San Jose, O=Super Micro Computer Inc., OU=Software Department, CN=IPMI, emailAddress=linda.wu@supermicro.com\nIssuer           : C=US, ST=California, L=San Jose, O=Super Micro Computer Inc., OU=Software Department, CN=IPMI, emailAddress=linda.wu@supermicro.com\nNot valid before : Apr 12 02:19:39 2012 GMT\nNot valid after  : Apr 12 02:19:39 2014 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.172",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "42880",
            "pluginname": "SSL / TLS Renegotiation Handshakes MiTM Plaintext Data Injection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service encrypts traffic using TLS / SSL but allows a client to insecurely renegotiate the connection after the initial handshake.\nAn unauthenticated, remote attacker may be able to leverage this issue to inject an arbitrary amount of plaintext into the beginning of the application protocol stream, which could facilitate man-in-the-middle attacks if the service assumes that the sessions before and after renegotiation are from the same 'client' and merges them at the application layer.",
            "solution": "Contact the vendor for specific patch information.",
            "cve": "CVE-2009-3555",
            "cvss3": "",
            "cvss2": "5.8",
            "see_also": "http://www.ietf.org/mail-archive/web/tls/current/msg03948.html\nhttp://www.g-sec.lu/practicaltls.pdf\nhttps://tools.ietf.org/html/rfc5746",
            "plugin_output": "TLSv1 supports insecure renegotiation.\nSSLv3 supports insecure renegotiation."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.172",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "71534",
            "pluginname": "SuperMicro Device Uses Default SSL Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate of the remote host has not been changed from the default certificate that is hardwired into the firmware.  The private key corresponding to this certificate is shared across all devices running the same firmware, meaning that the remote host's X.509 certificate cannot be trusted.",
            "solution": "Configure the device to use a device-specific certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "5.8",
            "see_also": "http://www.nessus.org/u?f7e3f14d",
            "plugin_output": "This SSL key is used by other devices, and therefore cannot be trusted :\nAlgorithm  : RSA Encryption\nKey Length : 1024 bits\nPublic Key : B5 AB 59 11 E9 C8 56 2D FC 2C A4 3F 38 02 CC B2\nE8 41 55 E9 26 11 1B 2F E0 20 BB 18 1A D9 FD 90\n24 22 D9 11 68 6C DC 52 E4 2B E9 85 B1 96 9F D0\nFD 9F 98 09 A5 35 56 2D 66 F7 2F 02 71 1A E0 4A\n49 18 F6 C2 B1 CB 95 E8 F3 C3 A9 12 98 5F B7 C4\n50 AE 31 FC 55 15 28 FC 4C CF 09 AA 53 AA 33 57\n3A 96 F1 F6 31 25 E7 37 BA 49 05 57 1E 90 D2 9B\n05 41 1F A6 D6 A4 3D 27 A3 4A D9 63 6D 77 9C 4B\nExponent   : 01 00 01"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.172",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "70545",
            "pluginname": "Dropbear SSH Server < 2013.59 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its self-reported banner, the version of Dropbear SSH running on this port is earlier than 2013.59.  As such, it is potentially affected by multiple vulnerabilities :\n\n  - A denial of service vulnerability caused by the way the     'buf_decompress()' function handles compressed files.\n    (CVE-2013-4421)\n\n  - User-enumeration is possible due to a timing error when     authenticating users. (CVE-2013-4434)",
            "solution": "Upgrade to the Dropbear SSH 2013.59 or later.",
            "cve": "CVE-2013-4421",
            "cvss3": "",
            "cvss2": "5.0",
            "see_also": "https://matt.ucc.asn.au/dropbear/CHANGES\nhttps://secure.ucc.asn.au/hg/dropbear/rev/0bf76f54de6f\nhttps://secure.ucc.asn.au/hg/dropbear/rev/a625f9e135a4",
            "plugin_output": "Version source    : SSH-2.0-dropbear_0.52\nInstalled version : 0.52\nFixed version     : 2013.59"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.172",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "93650",
            "pluginname": "Dropbear SSH Server < 2016.72 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "4",
            "description": "According to its self-reported version in its banner, Dropbear SSH running on the remote host is prior to 2016.74. It is, therefore, affected by the following vulnerabilities :\n\n  - A format string flaw exists due to improper handling of     string format specifiers (e.g., %s and %x) in usernames     and host arguments. An unauthenticated, remote attacker     can exploit this to execute arbitrary code with root     privileges. (CVE-2016-7406)\n\n  - A flaw exists in dropbearconvert due to improper     handling of specially crafted OpenSSH key files. An     unauthenticated, remote attacker can exploit this to     execute arbitrary code. (CVE-2016-7407)\n\n  - A flaw exists in dbclient when handling the -m or -c     arguments in scripts. An unauthenticated, remote attacker     can exploit this, via a specially crafted script, to     execute arbitrary code. (CVE-2016-7408)\n\n  - A flaw exists in dbclient or dropbear server if they are     compiled with the DEBUG_TRACE option and then run using     the -v switch. A local attacker can exploit this to     disclose process memory. (CVE-2016-7409)",
            "solution": "Upgrade to Dropbear SSH version 2016.74 or later.",
            "cve": "CVE-2016-7406",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "https://matt.ucc.asn.au/dropbear/CHANGES",
            "plugin_output": "Version source    : SSH-2.0-dropbear_0.52\nInstalled version : 0.52\nFixed version     : 2016.74"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.172",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "58183",
            "pluginname": "Dropbear SSH Server Channel Concurrency Use-after-free Remote Code Execution",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "3",
            "description": "According to its self-reported banner, the remote host is running a version of Dropbear SSH before 2012.55.  As such, it reportedly contains a flaw that might allow an attacker to run arbitrary code on the remote host with root privileges if they are authenticated using a public key and command restriction is enforced. \n\nNote that Nessus has not tried to exploit this vulnerability but instead has relied solely on the version in the service's banner. \n\nNote also, in cases where the host is running ESXi 4.0 or ESXi 4.1, VMware states in their KB article id 2037316 that this is a false positive since administrative access is required to login via SSH so there are no privileges to be gained by exploiting this issue.  That is true only in a default setup, not one in which SSH access has been enabled for non-root users.",
            "solution": "Upgrade to the Dropbear SSH 2012.55 or later.",
            "cve": "CVE-2012-0920",
            "cvss3": "",
            "cvss2": "7.1",
            "see_also": "https://matt.ucc.asn.au/dropbear/CHANGES\nhttps://secure.ucc.asn.au/hg/dropbear/rev/818108bf7749\nhttps://mantor.org/~northox/misc/CVE-2012-0920.html\nhttp://www.nessus.org/u?b2ca47ea",
            "plugin_output": "Version source    : SSH-2.0-dropbear_0.52\nInstalled version : 0.52\nFixed version     : 2012.55"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.171",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "78479",
            "pluginname": "SSLv3 Padding Oracle On Downgraded Legacy Encryption Vulnerability (POODLE)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "The remote host is affected by a man-in-the-middle (MitM) information disclosure vulnerability known as POODLE. The vulnerability is due to the way SSL 3.0 handles padding bytes when decrypting messages encrypted using block ciphers in cipher block chaining (CBC) mode.\nMitM attackers can decrypt a selected byte of a cipher text in as few as 256 tries if they are able to force a victim application to repeatedly send the same data over newly created SSL 3.0 connections.\n\nAs long as a client and service both support SSLv3, a connection can be 'rolled back' to SSLv3, even if TLSv1 or newer is supported by the client and service.\n\nThe TLS Fallback SCSV mechanism prevents 'version rollback' attacks without impacting legacy clients; however, it can only protect connections when the client and service support the mechanism. Sites that cannot disable SSLv3 immediately should enable this mechanism.\n\nThis is a vulnerability in the SSLv3 specification, not in any particular SSL implementation. Disabling SSLv3 is the only way to completely mitigate the vulnerability.",
            "solution": "Disable SSLv3.\n\nServices that must support SSLv3 should enable the TLS Fallback SCSV mechanism until SSLv3 can be disabled.",
            "cve": "CVE-2014-3566",
            "cvss3": "3.4",
            "cvss2": "4.3",
            "see_also": "https://www.imperialviolet.org/2014/10/14/poodle.html\nhttps://www.openssl.org/~bodo/ssl-poodle.pdf\nhttps://tools.ietf.org/html/draft-ietf-tls-downgrade-scsv-00",
            "plugin_output": "Nessus determined that the remote server supports SSLv3 with at least one CBC\ncipher suite, indicating that this server is vulnerable.\nIt appears that TLSv1 or newer is supported on the server. However, the\nFallback SCSV mechanism is not supported, allowing connections to be \"rolled\nback\" to SSLv3."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.171",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "20007",
            "pluginname": "SSL Version 2 and 3 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote service accepts connections encrypted using SSL 2.0 and/or SSL 3.0. These versions of SSL are affected by several cryptographic flaws, including:\n\n  - An insecure padding scheme with CBC ciphers.\n\n  - Insecure session renegotiation and resumption schemes.\n\nAn attacker can exploit these flaws to conduct man-in-the-middle attacks or to decrypt communications between the affected service and clients.\n\nAlthough SSL/TLS has a secure means for choosing the highest supported version of the protocol (so that these versions will be used only if the client or server support nothing better), many web browsers implement this in an unsafe way that allows an attacker to downgrade a connection (such as in POODLE). Therefore, it is recommended that these protocols be disabled entirely.\n\nNIST has determined that SSL 3.0 is no longer acceptable for secure communications. As of the date of enforcement found in PCI DSS v3.1, any version of SSL will not meet the PCI SSC's definition of 'strong cryptography'.",
            "solution": "Consult the application's documentation to disable SSL 2.0 and 3.0.\nUse TLS 1.2 (with approved cipher suites) or higher instead.",
            "cve": "",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "https://www.schneier.com/academic/paperfiles/paper-ssl.pdf\nhttp://www.nessus.org/u?b06c7e95\nhttp://www.nessus.org/u?247c4540\nhttps://www.openssl.org/~bodo/ssl-poodle.pdf\nhttp://www.nessus.org/u?5d15ba70\nhttps://www.imperialviolet.org/2014/10/14/poodle.html\nhttps://tools.ietf.org/html/rfc7507\nhttps://tools.ietf.org/html/rfc7568",
            "plugin_output": "- SSLv3 is enabled and the server supports at least one cipher.\nExplanation: TLS 1.0 and SSL 3.0 cipher suites may be used with SSLv3\nLow Strength Ciphers (<= 64-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC-SHA                                    RSA           RSA      DES-CBC(56)            SHA1\nMedium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                                   RSA           RSA      3DES-CBC(168)          SHA1\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nAES128-SHA                                     RSA           RSA      AES-CBC(128)           SHA1\nAES256-SHA                                     RSA           RSA      AES-CBC(256)           SHA1\nIDEA-CBC-SHA                                   RSA           RSA      IDEA-CBC(128)          SHA1\nRC4-MD5                                        RSA           RSA      RC4(128)               MD5\nRC4-SHA                                        RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.171",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.171",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.171",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "26928",
            "pluginname": "SSL Weak Cipher Suites Supported",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of SSL ciphers that offer weak encryption.\n\nNote: This is considerably easier to exploit if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application, if possible to avoid the use of weak ciphers.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "4.3",
            "see_also": "http://www.nessus.org/u?6527892d",
            "plugin_output": "Here is the list of weak SSL ciphers supported by the remote server :\nLow Strength Ciphers (<= 64-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC-SHA                   0x00, 0x09       RSA           RSA      DES-CBC(56)            SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.171",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.171",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "42880",
            "pluginname": "SSL / TLS Renegotiation Handshakes MiTM Plaintext Data Injection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service encrypts traffic using TLS / SSL but allows a client to insecurely renegotiate the connection after the initial handshake.\nAn unauthenticated, remote attacker may be able to leverage this issue to inject an arbitrary amount of plaintext into the beginning of the application protocol stream, which could facilitate man-in-the-middle attacks if the service assumes that the sessions before and after renegotiation are from the same 'client' and merges them at the application layer.",
            "solution": "Contact the vendor for specific patch information.",
            "cve": "CVE-2009-3555",
            "cvss3": "",
            "cvss2": "5.8",
            "see_also": "http://www.ietf.org/mail-archive/web/tls/current/msg03948.html\nhttp://www.g-sec.lu/practicaltls.pdf\nhttps://tools.ietf.org/html/rfc5746",
            "plugin_output": "TLSv1 supports insecure renegotiation.\nSSLv3 supports insecure renegotiation."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.171",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.171",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com\n|-Not After : Apr 12 02:19:39 2014 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com\n|-Issuer  : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.171",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "69551",
            "pluginname": "SSL Certificate Chain Contains RSA Keys Less Than 2048 bits",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "At least one of the X.509 certificates sent by the remote host has a key that is shorter than 2048 bits. According to industry standards set by the Certification Authority/Browser (CA/B) Forum, certificates issued after January 1, 2014 must be at least 2048 bits.\n\nSome browser SSL implementations may reject keys less than 2048 bits after January 1, 2014. Additionally, some SSL certificate vendors may revoke certificates less than 2048 bits before January 1, 2014.\n\nNote that Nessus will not flag root certificates with RSA keys less than 2048 bits if they were issued prior to December 31, 2010, as the standard considers them exempt.",
            "solution": "Replace the certificate in the chain with the RSA key less than 2048 bits in length with a longer key, and reissue any certificates signed by the old certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "https://www.cabforum.org/wp-content/uploads/Baseline_Requirements_V1.pdf",
            "plugin_output": "The following certificates were part of the certificate chain\nsent by the remote host, but contain RSA keys that are considered\nto be weak :\n|-Subject        : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com\n|-RSA Key Length : 1024 bits"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.171",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=California, L=San Jose, O=Super Micro Computer Inc., OU=Software Department, CN=IPMI, emailAddress=linda.wu@supermicro.com\nIssuer           : C=US, ST=California, L=San Jose, O=Super Micro Computer Inc., OU=Software Department, CN=IPMI, emailAddress=linda.wu@supermicro.com\nNot valid before : Apr 12 02:19:39 2012 GMT\nNot valid after  : Apr 12 02:19:39 2014 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.171",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "71534",
            "pluginname": "SuperMicro Device Uses Default SSL Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate of the remote host has not been changed from the default certificate that is hardwired into the firmware.  The private key corresponding to this certificate is shared across all devices running the same firmware, meaning that the remote host's X.509 certificate cannot be trusted.",
            "solution": "Configure the device to use a device-specific certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "5.8",
            "see_also": "http://www.nessus.org/u?f7e3f14d",
            "plugin_output": "This SSL key is used by other devices, and therefore cannot be trusted :\nAlgorithm  : RSA Encryption\nKey Length : 1024 bits\nPublic Key : B5 AB 59 11 E9 C8 56 2D FC 2C A4 3F 38 02 CC B2\nE8 41 55 E9 26 11 1B 2F E0 20 BB 18 1A D9 FD 90\n24 22 D9 11 68 6C DC 52 E4 2B E9 85 B1 96 9F D0\nFD 9F 98 09 A5 35 56 2D 66 F7 2F 02 71 1A E0 4A\n49 18 F6 C2 B1 CB 95 E8 F3 C3 A9 12 98 5F B7 C4\n50 AE 31 FC 55 15 28 FC 4C CF 09 AA 53 AA 33 57\n3A 96 F1 F6 31 25 E7 37 BA 49 05 57 1E 90 D2 9B\n05 41 1F A6 D6 A4 3D 27 A3 4A D9 63 6D 77 9C 4B\nExponent   : 01 00 01"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.171",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "70545",
            "pluginname": "Dropbear SSH Server < 2013.59 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its self-reported banner, the version of Dropbear SSH running on this port is earlier than 2013.59.  As such, it is potentially affected by multiple vulnerabilities :\n\n  - A denial of service vulnerability caused by the way the     'buf_decompress()' function handles compressed files.\n    (CVE-2013-4421)\n\n  - User-enumeration is possible due to a timing error when     authenticating users. (CVE-2013-4434)",
            "solution": "Upgrade to the Dropbear SSH 2013.59 or later.",
            "cve": "CVE-2013-4421",
            "cvss3": "",
            "cvss2": "5.0",
            "see_also": "https://matt.ucc.asn.au/dropbear/CHANGES\nhttps://secure.ucc.asn.au/hg/dropbear/rev/0bf76f54de6f\nhttps://secure.ucc.asn.au/hg/dropbear/rev/a625f9e135a4",
            "plugin_output": "Version source    : SSH-2.0-dropbear_0.52\nInstalled version : 0.52\nFixed version     : 2013.59"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.171",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "93650",
            "pluginname": "Dropbear SSH Server < 2016.72 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "4",
            "description": "According to its self-reported version in its banner, Dropbear SSH running on the remote host is prior to 2016.74. It is, therefore, affected by the following vulnerabilities :\n\n  - A format string flaw exists due to improper handling of     string format specifiers (e.g., %s and %x) in usernames     and host arguments. An unauthenticated, remote attacker     can exploit this to execute arbitrary code with root     privileges. (CVE-2016-7406)\n\n  - A flaw exists in dropbearconvert due to improper     handling of specially crafted OpenSSH key files. An     unauthenticated, remote attacker can exploit this to     execute arbitrary code. (CVE-2016-7407)\n\n  - A flaw exists in dbclient when handling the -m or -c     arguments in scripts. An unauthenticated, remote attacker     can exploit this, via a specially crafted script, to     execute arbitrary code. (CVE-2016-7408)\n\n  - A flaw exists in dbclient or dropbear server if they are     compiled with the DEBUG_TRACE option and then run using     the -v switch. A local attacker can exploit this to     disclose process memory. (CVE-2016-7409)",
            "solution": "Upgrade to Dropbear SSH version 2016.74 or later.",
            "cve": "CVE-2016-7406",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "https://matt.ucc.asn.au/dropbear/CHANGES",
            "plugin_output": "Version source    : SSH-2.0-dropbear_0.52\nInstalled version : 0.52\nFixed version     : 2016.74"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.171",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "58183",
            "pluginname": "Dropbear SSH Server Channel Concurrency Use-after-free Remote Code Execution",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "3",
            "description": "According to its self-reported banner, the remote host is running a version of Dropbear SSH before 2012.55.  As such, it reportedly contains a flaw that might allow an attacker to run arbitrary code on the remote host with root privileges if they are authenticated using a public key and command restriction is enforced. \n\nNote that Nessus has not tried to exploit this vulnerability but instead has relied solely on the version in the service's banner. \n\nNote also, in cases where the host is running ESXi 4.0 or ESXi 4.1, VMware states in their KB article id 2037316 that this is a false positive since administrative access is required to login via SSH so there are no privileges to be gained by exploiting this issue.  That is true only in a default setup, not one in which SSH access has been enabled for non-root users.",
            "solution": "Upgrade to the Dropbear SSH 2012.55 or later.",
            "cve": "CVE-2012-0920",
            "cvss3": "",
            "cvss2": "7.1",
            "see_also": "https://matt.ucc.asn.au/dropbear/CHANGES\nhttps://secure.ucc.asn.au/hg/dropbear/rev/818108bf7749\nhttps://mantor.org/~northox/misc/CVE-2012-0920.html\nhttp://www.nessus.org/u?b2ca47ea",
            "plugin_output": "Version source    : SSH-2.0-dropbear_0.52\nInstalled version : 0.52\nFixed version     : 2012.55"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.170",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "76213",
            "pluginname": "SuperMicro IPMI PSBlock File Plaintext Password Disclosure",
            "hostname": "",
            "port": "49152",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote SuperMicro IPMI device is affected by an information disclosure vulnerability because it exposes all usernames and passwords in plaintext via the PSBlock file. A remote, unauthenticated attacker can exploit this vulnerability to download all usernames and passwords and gain a shell on the device.",
            "solution": "Upgrade to the latest BIOS version.",
            "cve": "",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "http://www.nessus.org/u?8762dc4d",
            "plugin_output": "URL : http://10.27.0.170:49152/PSBlock\nNessus discovered the following usernames and passwords :\nUsername : Anonymous\nPassword : a******n\nUsername : root\nPassword : s******r"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.170",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "78479",
            "pluginname": "SSLv3 Padding Oracle On Downgraded Legacy Encryption Vulnerability (POODLE)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "The remote host is affected by a man-in-the-middle (MitM) information disclosure vulnerability known as POODLE. The vulnerability is due to the way SSL 3.0 handles padding bytes when decrypting messages encrypted using block ciphers in cipher block chaining (CBC) mode.\nMitM attackers can decrypt a selected byte of a cipher text in as few as 256 tries if they are able to force a victim application to repeatedly send the same data over newly created SSL 3.0 connections.\n\nAs long as a client and service both support SSLv3, a connection can be 'rolled back' to SSLv3, even if TLSv1 or newer is supported by the client and service.\n\nThe TLS Fallback SCSV mechanism prevents 'version rollback' attacks without impacting legacy clients; however, it can only protect connections when the client and service support the mechanism. Sites that cannot disable SSLv3 immediately should enable this mechanism.\n\nThis is a vulnerability in the SSLv3 specification, not in any particular SSL implementation. Disabling SSLv3 is the only way to completely mitigate the vulnerability.",
            "solution": "Disable SSLv3.\n\nServices that must support SSLv3 should enable the TLS Fallback SCSV mechanism until SSLv3 can be disabled.",
            "cve": "CVE-2014-3566",
            "cvss3": "3.4",
            "cvss2": "4.3",
            "see_also": "https://www.imperialviolet.org/2014/10/14/poodle.html\nhttps://www.openssl.org/~bodo/ssl-poodle.pdf\nhttps://tools.ietf.org/html/draft-ietf-tls-downgrade-scsv-00",
            "plugin_output": "Nessus determined that the remote server supports SSLv3 with at least one CBC\ncipher suite, indicating that this server is vulnerable.\nIt appears that TLSv1 or newer is supported on the server. However, the\nFallback SCSV mechanism is not supported, allowing connections to be \"rolled\nback\" to SSLv3."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.170",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "20007",
            "pluginname": "SSL Version 2 and 3 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote service accepts connections encrypted using SSL 2.0 and/or SSL 3.0. These versions of SSL are affected by several cryptographic flaws, including:\n\n  - An insecure padding scheme with CBC ciphers.\n\n  - Insecure session renegotiation and resumption schemes.\n\nAn attacker can exploit these flaws to conduct man-in-the-middle attacks or to decrypt communications between the affected service and clients.\n\nAlthough SSL/TLS has a secure means for choosing the highest supported version of the protocol (so that these versions will be used only if the client or server support nothing better), many web browsers implement this in an unsafe way that allows an attacker to downgrade a connection (such as in POODLE). Therefore, it is recommended that these protocols be disabled entirely.\n\nNIST has determined that SSL 3.0 is no longer acceptable for secure communications. As of the date of enforcement found in PCI DSS v3.1, any version of SSL will not meet the PCI SSC's definition of 'strong cryptography'.",
            "solution": "Consult the application's documentation to disable SSL 2.0 and 3.0.\nUse TLS 1.2 (with approved cipher suites) or higher instead.",
            "cve": "",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "https://www.schneier.com/academic/paperfiles/paper-ssl.pdf\nhttp://www.nessus.org/u?b06c7e95\nhttp://www.nessus.org/u?247c4540\nhttps://www.openssl.org/~bodo/ssl-poodle.pdf\nhttp://www.nessus.org/u?5d15ba70\nhttps://www.imperialviolet.org/2014/10/14/poodle.html\nhttps://tools.ietf.org/html/rfc7507\nhttps://tools.ietf.org/html/rfc7568",
            "plugin_output": "- SSLv3 is enabled and the server supports at least one cipher.\nExplanation: TLS 1.0 and SSL 3.0 cipher suites may be used with SSLv3\nLow Strength Ciphers (<= 64-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC-SHA                                    RSA           RSA      DES-CBC(56)            SHA1\nMedium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                                   RSA           RSA      3DES-CBC(168)          SHA1\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nAES128-SHA                                     RSA           RSA      AES-CBC(128)           SHA1\nAES256-SHA                                     RSA           RSA      AES-CBC(256)           SHA1\nIDEA-CBC-SHA                                   RSA           RSA      IDEA-CBC(128)          SHA1\nRC4-MD5                                        RSA           RSA      RC4(128)               MD5\nRC4-SHA                                        RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.170",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "26928",
            "pluginname": "SSL Weak Cipher Suites Supported",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of SSL ciphers that offer weak encryption.\n\nNote: This is considerably easier to exploit if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application, if possible to avoid the use of weak ciphers.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "4.3",
            "see_also": "http://www.nessus.org/u?6527892d",
            "plugin_output": "Here is the list of weak SSL ciphers supported by the remote server :\nLow Strength Ciphers (<= 64-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC-SHA                   0x00, 0x09       RSA           RSA      DES-CBC(56)            SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.170",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.170",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.170",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.170",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "42880",
            "pluginname": "SSL / TLS Renegotiation Handshakes MiTM Plaintext Data Injection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service encrypts traffic using TLS / SSL but allows a client to insecurely renegotiate the connection after the initial handshake.\nAn unauthenticated, remote attacker may be able to leverage this issue to inject an arbitrary amount of plaintext into the beginning of the application protocol stream, which could facilitate man-in-the-middle attacks if the service assumes that the sessions before and after renegotiation are from the same 'client' and merges them at the application layer.",
            "solution": "Contact the vendor for specific patch information.",
            "cve": "CVE-2009-3555",
            "cvss3": "",
            "cvss2": "5.8",
            "see_also": "http://www.ietf.org/mail-archive/web/tls/current/msg03948.html\nhttp://www.g-sec.lu/practicaltls.pdf\nhttps://tools.ietf.org/html/rfc5746",
            "plugin_output": "TLSv1 supports insecure renegotiation.\nSSLv3 supports insecure renegotiation."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.170",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.170",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com\n|-Not After : Apr 12 02:19:39 2014 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com\n|-Issuer  : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.170",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "69551",
            "pluginname": "SSL Certificate Chain Contains RSA Keys Less Than 2048 bits",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "At least one of the X.509 certificates sent by the remote host has a key that is shorter than 2048 bits. According to industry standards set by the Certification Authority/Browser (CA/B) Forum, certificates issued after January 1, 2014 must be at least 2048 bits.\n\nSome browser SSL implementations may reject keys less than 2048 bits after January 1, 2014. Additionally, some SSL certificate vendors may revoke certificates less than 2048 bits before January 1, 2014.\n\nNote that Nessus will not flag root certificates with RSA keys less than 2048 bits if they were issued prior to December 31, 2010, as the standard considers them exempt.",
            "solution": "Replace the certificate in the chain with the RSA key less than 2048 bits in length with a longer key, and reissue any certificates signed by the old certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "https://www.cabforum.org/wp-content/uploads/Baseline_Requirements_V1.pdf",
            "plugin_output": "The following certificates were part of the certificate chain\nsent by the remote host, but contain RSA keys that are considered\nto be weak :\n|-Subject        : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com\n|-RSA Key Length : 1024 bits"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.170",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=California, L=San Jose, O=Super Micro Computer Inc., OU=Software Department, CN=IPMI, emailAddress=linda.wu@supermicro.com\nIssuer           : C=US, ST=California, L=San Jose, O=Super Micro Computer Inc., OU=Software Department, CN=IPMI, emailAddress=linda.wu@supermicro.com\nNot valid before : Apr 12 02:19:39 2012 GMT\nNot valid after  : Apr 12 02:19:39 2014 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.170",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "71534",
            "pluginname": "SuperMicro Device Uses Default SSL Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate of the remote host has not been changed from the default certificate that is hardwired into the firmware.  The private key corresponding to this certificate is shared across all devices running the same firmware, meaning that the remote host's X.509 certificate cannot be trusted.",
            "solution": "Configure the device to use a device-specific certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "5.8",
            "see_also": "http://www.nessus.org/u?f7e3f14d",
            "plugin_output": "This SSL key is used by other devices, and therefore cannot be trusted :\nAlgorithm  : RSA Encryption\nKey Length : 1024 bits\nPublic Key : B5 AB 59 11 E9 C8 56 2D FC 2C A4 3F 38 02 CC B2\nE8 41 55 E9 26 11 1B 2F E0 20 BB 18 1A D9 FD 90\n24 22 D9 11 68 6C DC 52 E4 2B E9 85 B1 96 9F D0\nFD 9F 98 09 A5 35 56 2D 66 F7 2F 02 71 1A E0 4A\n49 18 F6 C2 B1 CB 95 E8 F3 C3 A9 12 98 5F B7 C4\n50 AE 31 FC 55 15 28 FC 4C CF 09 AA 53 AA 33 57\n3A 96 F1 F6 31 25 E7 37 BA 49 05 57 1E 90 D2 9B\n05 41 1F A6 D6 A4 3D 27 A3 4A D9 63 6D 77 9C 4B\nExponent   : 01 00 01"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.170",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "70545",
            "pluginname": "Dropbear SSH Server < 2013.59 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its self-reported banner, the version of Dropbear SSH running on this port is earlier than 2013.59.  As such, it is potentially affected by multiple vulnerabilities :\n\n  - A denial of service vulnerability caused by the way the     'buf_decompress()' function handles compressed files.\n    (CVE-2013-4421)\n\n  - User-enumeration is possible due to a timing error when     authenticating users. (CVE-2013-4434)",
            "solution": "Upgrade to the Dropbear SSH 2013.59 or later.",
            "cve": "CVE-2013-4421",
            "cvss3": "",
            "cvss2": "5.0",
            "see_also": "https://matt.ucc.asn.au/dropbear/CHANGES\nhttps://secure.ucc.asn.au/hg/dropbear/rev/0bf76f54de6f\nhttps://secure.ucc.asn.au/hg/dropbear/rev/a625f9e135a4",
            "plugin_output": "Version source    : SSH-2.0-dropbear_0.52\nInstalled version : 0.52\nFixed version     : 2013.59"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.170",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "93650",
            "pluginname": "Dropbear SSH Server < 2016.72 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "4",
            "description": "According to its self-reported version in its banner, Dropbear SSH running on the remote host is prior to 2016.74. It is, therefore, affected by the following vulnerabilities :\n\n  - A format string flaw exists due to improper handling of     string format specifiers (e.g., %s and %x) in usernames     and host arguments. An unauthenticated, remote attacker     can exploit this to execute arbitrary code with root     privileges. (CVE-2016-7406)\n\n  - A flaw exists in dropbearconvert due to improper     handling of specially crafted OpenSSH key files. An     unauthenticated, remote attacker can exploit this to     execute arbitrary code. (CVE-2016-7407)\n\n  - A flaw exists in dbclient when handling the -m or -c     arguments in scripts. An unauthenticated, remote attacker     can exploit this, via a specially crafted script, to     execute arbitrary code. (CVE-2016-7408)\n\n  - A flaw exists in dbclient or dropbear server if they are     compiled with the DEBUG_TRACE option and then run using     the -v switch. A local attacker can exploit this to     disclose process memory. (CVE-2016-7409)",
            "solution": "Upgrade to Dropbear SSH version 2016.74 or later.",
            "cve": "CVE-2016-7406",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "https://matt.ucc.asn.au/dropbear/CHANGES",
            "plugin_output": "Version source    : SSH-2.0-dropbear_0.52\nInstalled version : 0.52\nFixed version     : 2016.74"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.170",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "58183",
            "pluginname": "Dropbear SSH Server Channel Concurrency Use-after-free Remote Code Execution",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "3",
            "description": "According to its self-reported banner, the remote host is running a version of Dropbear SSH before 2012.55.  As such, it reportedly contains a flaw that might allow an attacker to run arbitrary code on the remote host with root privileges if they are authenticated using a public key and command restriction is enforced. \n\nNote that Nessus has not tried to exploit this vulnerability but instead has relied solely on the version in the service's banner. \n\nNote also, in cases where the host is running ESXi 4.0 or ESXi 4.1, VMware states in their KB article id 2037316 that this is a false positive since administrative access is required to login via SSH so there are no privileges to be gained by exploiting this issue.  That is true only in a default setup, not one in which SSH access has been enabled for non-root users.",
            "solution": "Upgrade to the Dropbear SSH 2012.55 or later.",
            "cve": "CVE-2012-0920",
            "cvss3": "",
            "cvss2": "7.1",
            "see_also": "https://matt.ucc.asn.au/dropbear/CHANGES\nhttps://secure.ucc.asn.au/hg/dropbear/rev/818108bf7749\nhttps://mantor.org/~northox/misc/CVE-2012-0920.html\nhttp://www.nessus.org/u?b2ca47ea",
            "plugin_output": "Version source    : SSH-2.0-dropbear_0.52\nInstalled version : 0.52\nFixed version     : 2012.55"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.169",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "76213",
            "pluginname": "SuperMicro IPMI PSBlock File Plaintext Password Disclosure",
            "hostname": "",
            "port": "49152",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote SuperMicro IPMI device is affected by an information disclosure vulnerability because it exposes all usernames and passwords in plaintext via the PSBlock file. A remote, unauthenticated attacker can exploit this vulnerability to download all usernames and passwords and gain a shell on the device.",
            "solution": "Upgrade to the latest BIOS version.",
            "cve": "",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "http://www.nessus.org/u?8762dc4d",
            "plugin_output": "URL : http://10.27.0.169:49152/PSBlock\nNessus discovered the following usernames and passwords :\nUsername : Anonymous\nPassword : a******n\nUsername : root\nPassword : s******r"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.169",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "20007",
            "pluginname": "SSL Version 2 and 3 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote service accepts connections encrypted using SSL 2.0 and/or SSL 3.0. These versions of SSL are affected by several cryptographic flaws, including:\n\n  - An insecure padding scheme with CBC ciphers.\n\n  - Insecure session renegotiation and resumption schemes.\n\nAn attacker can exploit these flaws to conduct man-in-the-middle attacks or to decrypt communications between the affected service and clients.\n\nAlthough SSL/TLS has a secure means for choosing the highest supported version of the protocol (so that these versions will be used only if the client or server support nothing better), many web browsers implement this in an unsafe way that allows an attacker to downgrade a connection (such as in POODLE). Therefore, it is recommended that these protocols be disabled entirely.\n\nNIST has determined that SSL 3.0 is no longer acceptable for secure communications. As of the date of enforcement found in PCI DSS v3.1, any version of SSL will not meet the PCI SSC's definition of 'strong cryptography'.",
            "solution": "Consult the application's documentation to disable SSL 2.0 and 3.0.\nUse TLS 1.2 (with approved cipher suites) or higher instead.",
            "cve": "",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "https://www.schneier.com/academic/paperfiles/paper-ssl.pdf\nhttp://www.nessus.org/u?b06c7e95\nhttp://www.nessus.org/u?247c4540\nhttps://www.openssl.org/~bodo/ssl-poodle.pdf\nhttp://www.nessus.org/u?5d15ba70\nhttps://www.imperialviolet.org/2014/10/14/poodle.html\nhttps://tools.ietf.org/html/rfc7507\nhttps://tools.ietf.org/html/rfc7568",
            "plugin_output": "- SSLv3 is enabled and the server supports at least one cipher.\nExplanation: TLS 1.0 and SSL 3.0 cipher suites may be used with SSLv3\nLow Strength Ciphers (<= 64-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC-SHA                                    RSA           RSA      DES-CBC(56)            SHA1\nMedium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                                   RSA           RSA      3DES-CBC(168)          SHA1\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nAES128-SHA                                     RSA           RSA      AES-CBC(128)           SHA1\nAES256-SHA                                     RSA           RSA      AES-CBC(256)           SHA1\nIDEA-CBC-SHA                                   RSA           RSA      IDEA-CBC(128)          SHA1\nRC4-MD5                                        RSA           RSA      RC4(128)               MD5\nRC4-SHA                                        RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.169",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.169",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "78479",
            "pluginname": "SSLv3 Padding Oracle On Downgraded Legacy Encryption Vulnerability (POODLE)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "The remote host is affected by a man-in-the-middle (MitM) information disclosure vulnerability known as POODLE. The vulnerability is due to the way SSL 3.0 handles padding bytes when decrypting messages encrypted using block ciphers in cipher block chaining (CBC) mode.\nMitM attackers can decrypt a selected byte of a cipher text in as few as 256 tries if they are able to force a victim application to repeatedly send the same data over newly created SSL 3.0 connections.\n\nAs long as a client and service both support SSLv3, a connection can be 'rolled back' to SSLv3, even if TLSv1 or newer is supported by the client and service.\n\nThe TLS Fallback SCSV mechanism prevents 'version rollback' attacks without impacting legacy clients; however, it can only protect connections when the client and service support the mechanism. Sites that cannot disable SSLv3 immediately should enable this mechanism.\n\nThis is a vulnerability in the SSLv3 specification, not in any particular SSL implementation. Disabling SSLv3 is the only way to completely mitigate the vulnerability.",
            "solution": "Disable SSLv3.\n\nServices that must support SSLv3 should enable the TLS Fallback SCSV mechanism until SSLv3 can be disabled.",
            "cve": "CVE-2014-3566",
            "cvss3": "3.4",
            "cvss2": "4.3",
            "see_also": "https://www.imperialviolet.org/2014/10/14/poodle.html\nhttps://www.openssl.org/~bodo/ssl-poodle.pdf\nhttps://tools.ietf.org/html/draft-ietf-tls-downgrade-scsv-00",
            "plugin_output": "Nessus determined that the remote server supports SSLv3 with at least one CBC\ncipher suite, indicating that this server is vulnerable.\nIt appears that TLSv1 or newer is supported on the server. However, the\nFallback SCSV mechanism is not supported, allowing connections to be \"rolled\nback\" to SSLv3."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.169",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.169",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "26928",
            "pluginname": "SSL Weak Cipher Suites Supported",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of SSL ciphers that offer weak encryption.\n\nNote: This is considerably easier to exploit if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application, if possible to avoid the use of weak ciphers.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "4.3",
            "see_also": "http://www.nessus.org/u?6527892d",
            "plugin_output": "Here is the list of weak SSL ciphers supported by the remote server :\nLow Strength Ciphers (<= 64-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC-SHA                   0x00, 0x09       RSA           RSA      DES-CBC(56)            SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.169",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.169",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.169",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com\n|-Not After : Apr 12 02:19:39 2014 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com\n|-Issuer  : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.169",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "69551",
            "pluginname": "SSL Certificate Chain Contains RSA Keys Less Than 2048 bits",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "At least one of the X.509 certificates sent by the remote host has a key that is shorter than 2048 bits. According to industry standards set by the Certification Authority/Browser (CA/B) Forum, certificates issued after January 1, 2014 must be at least 2048 bits.\n\nSome browser SSL implementations may reject keys less than 2048 bits after January 1, 2014. Additionally, some SSL certificate vendors may revoke certificates less than 2048 bits before January 1, 2014.\n\nNote that Nessus will not flag root certificates with RSA keys less than 2048 bits if they were issued prior to December 31, 2010, as the standard considers them exempt.",
            "solution": "Replace the certificate in the chain with the RSA key less than 2048 bits in length with a longer key, and reissue any certificates signed by the old certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "https://www.cabforum.org/wp-content/uploads/Baseline_Requirements_V1.pdf",
            "plugin_output": "The following certificates were part of the certificate chain\nsent by the remote host, but contain RSA keys that are considered\nto be weak :\n|-Subject        : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com\n|-RSA Key Length : 1024 bits"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.169",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "42880",
            "pluginname": "SSL / TLS Renegotiation Handshakes MiTM Plaintext Data Injection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service encrypts traffic using TLS / SSL but allows a client to insecurely renegotiate the connection after the initial handshake.\nAn unauthenticated, remote attacker may be able to leverage this issue to inject an arbitrary amount of plaintext into the beginning of the application protocol stream, which could facilitate man-in-the-middle attacks if the service assumes that the sessions before and after renegotiation are from the same 'client' and merges them at the application layer.",
            "solution": "Contact the vendor for specific patch information.",
            "cve": "CVE-2009-3555",
            "cvss3": "",
            "cvss2": "5.8",
            "see_also": "http://www.ietf.org/mail-archive/web/tls/current/msg03948.html\nhttp://www.g-sec.lu/practicaltls.pdf\nhttps://tools.ietf.org/html/rfc5746",
            "plugin_output": "TLSv1 supports insecure renegotiation.\nSSLv3 supports insecure renegotiation."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.169",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=California, L=San Jose, O=Super Micro Computer Inc., OU=Software Department, CN=IPMI, emailAddress=linda.wu@supermicro.com\nIssuer           : C=US, ST=California, L=San Jose, O=Super Micro Computer Inc., OU=Software Department, CN=IPMI, emailAddress=linda.wu@supermicro.com\nNot valid before : Apr 12 02:19:39 2012 GMT\nNot valid after  : Apr 12 02:19:39 2014 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.169",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "71534",
            "pluginname": "SuperMicro Device Uses Default SSL Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate of the remote host has not been changed from the default certificate that is hardwired into the firmware.  The private key corresponding to this certificate is shared across all devices running the same firmware, meaning that the remote host's X.509 certificate cannot be trusted.",
            "solution": "Configure the device to use a device-specific certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "5.8",
            "see_also": "http://www.nessus.org/u?f7e3f14d",
            "plugin_output": "This SSL key is used by other devices, and therefore cannot be trusted :\nAlgorithm  : RSA Encryption\nKey Length : 1024 bits\nPublic Key : B5 AB 59 11 E9 C8 56 2D FC 2C A4 3F 38 02 CC B2\nE8 41 55 E9 26 11 1B 2F E0 20 BB 18 1A D9 FD 90\n24 22 D9 11 68 6C DC 52 E4 2B E9 85 B1 96 9F D0\nFD 9F 98 09 A5 35 56 2D 66 F7 2F 02 71 1A E0 4A\n49 18 F6 C2 B1 CB 95 E8 F3 C3 A9 12 98 5F B7 C4\n50 AE 31 FC 55 15 28 FC 4C CF 09 AA 53 AA 33 57\n3A 96 F1 F6 31 25 E7 37 BA 49 05 57 1E 90 D2 9B\n05 41 1F A6 D6 A4 3D 27 A3 4A D9 63 6D 77 9C 4B\nExponent   : 01 00 01"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.169",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "70545",
            "pluginname": "Dropbear SSH Server < 2013.59 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its self-reported banner, the version of Dropbear SSH running on this port is earlier than 2013.59.  As such, it is potentially affected by multiple vulnerabilities :\n\n  - A denial of service vulnerability caused by the way the     'buf_decompress()' function handles compressed files.\n    (CVE-2013-4421)\n\n  - User-enumeration is possible due to a timing error when     authenticating users. (CVE-2013-4434)",
            "solution": "Upgrade to the Dropbear SSH 2013.59 or later.",
            "cve": "CVE-2013-4421",
            "cvss3": "",
            "cvss2": "5.0",
            "see_also": "https://matt.ucc.asn.au/dropbear/CHANGES\nhttps://secure.ucc.asn.au/hg/dropbear/rev/0bf76f54de6f\nhttps://secure.ucc.asn.au/hg/dropbear/rev/a625f9e135a4",
            "plugin_output": "Version source    : SSH-2.0-dropbear_0.52\nInstalled version : 0.52\nFixed version     : 2013.59"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.169",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "93650",
            "pluginname": "Dropbear SSH Server < 2016.72 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "4",
            "description": "According to its self-reported version in its banner, Dropbear SSH running on the remote host is prior to 2016.74. It is, therefore, affected by the following vulnerabilities :\n\n  - A format string flaw exists due to improper handling of     string format specifiers (e.g., %s and %x) in usernames     and host arguments. An unauthenticated, remote attacker     can exploit this to execute arbitrary code with root     privileges. (CVE-2016-7406)\n\n  - A flaw exists in dropbearconvert due to improper     handling of specially crafted OpenSSH key files. An     unauthenticated, remote attacker can exploit this to     execute arbitrary code. (CVE-2016-7407)\n\n  - A flaw exists in dbclient when handling the -m or -c     arguments in scripts. An unauthenticated, remote attacker     can exploit this, via a specially crafted script, to     execute arbitrary code. (CVE-2016-7408)\n\n  - A flaw exists in dbclient or dropbear server if they are     compiled with the DEBUG_TRACE option and then run using     the -v switch. A local attacker can exploit this to     disclose process memory. (CVE-2016-7409)",
            "solution": "Upgrade to Dropbear SSH version 2016.74 or later.",
            "cve": "CVE-2016-7406",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "https://matt.ucc.asn.au/dropbear/CHANGES",
            "plugin_output": "Version source    : SSH-2.0-dropbear_0.52\nInstalled version : 0.52\nFixed version     : 2016.74"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.169",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "58183",
            "pluginname": "Dropbear SSH Server Channel Concurrency Use-after-free Remote Code Execution",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "3",
            "description": "According to its self-reported banner, the remote host is running a version of Dropbear SSH before 2012.55.  As such, it reportedly contains a flaw that might allow an attacker to run arbitrary code on the remote host with root privileges if they are authenticated using a public key and command restriction is enforced. \n\nNote that Nessus has not tried to exploit this vulnerability but instead has relied solely on the version in the service's banner. \n\nNote also, in cases where the host is running ESXi 4.0 or ESXi 4.1, VMware states in their KB article id 2037316 that this is a false positive since administrative access is required to login via SSH so there are no privileges to be gained by exploiting this issue.  That is true only in a default setup, not one in which SSH access has been enabled for non-root users.",
            "solution": "Upgrade to the Dropbear SSH 2012.55 or later.",
            "cve": "CVE-2012-0920",
            "cvss3": "",
            "cvss2": "7.1",
            "see_also": "https://matt.ucc.asn.au/dropbear/CHANGES\nhttps://secure.ucc.asn.au/hg/dropbear/rev/818108bf7749\nhttps://mantor.org/~northox/misc/CVE-2012-0920.html\nhttp://www.nessus.org/u?b2ca47ea",
            "plugin_output": "Version source    : SSH-2.0-dropbear_0.52\nInstalled version : 0.52\nFixed version     : 2012.55"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.168",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "76213",
            "pluginname": "SuperMicro IPMI PSBlock File Plaintext Password Disclosure",
            "hostname": "",
            "port": "49152",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote SuperMicro IPMI device is affected by an information disclosure vulnerability because it exposes all usernames and passwords in plaintext via the PSBlock file. A remote, unauthenticated attacker can exploit this vulnerability to download all usernames and passwords and gain a shell on the device.",
            "solution": "Upgrade to the latest BIOS version.",
            "cve": "",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "http://www.nessus.org/u?8762dc4d",
            "plugin_output": "URL : http://10.27.0.168:49152/PSBlock\nNessus discovered the following usernames and passwords :\nUsername : Anonymous\nPassword : a******n\nUsername : root\nPassword : s******r"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.168",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "78479",
            "pluginname": "SSLv3 Padding Oracle On Downgraded Legacy Encryption Vulnerability (POODLE)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "The remote host is affected by a man-in-the-middle (MitM) information disclosure vulnerability known as POODLE. The vulnerability is due to the way SSL 3.0 handles padding bytes when decrypting messages encrypted using block ciphers in cipher block chaining (CBC) mode.\nMitM attackers can decrypt a selected byte of a cipher text in as few as 256 tries if they are able to force a victim application to repeatedly send the same data over newly created SSL 3.0 connections.\n\nAs long as a client and service both support SSLv3, a connection can be 'rolled back' to SSLv3, even if TLSv1 or newer is supported by the client and service.\n\nThe TLS Fallback SCSV mechanism prevents 'version rollback' attacks without impacting legacy clients; however, it can only protect connections when the client and service support the mechanism. Sites that cannot disable SSLv3 immediately should enable this mechanism.\n\nThis is a vulnerability in the SSLv3 specification, not in any particular SSL implementation. Disabling SSLv3 is the only way to completely mitigate the vulnerability.",
            "solution": "Disable SSLv3.\n\nServices that must support SSLv3 should enable the TLS Fallback SCSV mechanism until SSLv3 can be disabled.",
            "cve": "CVE-2014-3566",
            "cvss3": "3.4",
            "cvss2": "4.3",
            "see_also": "https://www.imperialviolet.org/2014/10/14/poodle.html\nhttps://www.openssl.org/~bodo/ssl-poodle.pdf\nhttps://tools.ietf.org/html/draft-ietf-tls-downgrade-scsv-00",
            "plugin_output": "Nessus determined that the remote server supports SSLv3 with at least one CBC\ncipher suite, indicating that this server is vulnerable.\nIt appears that TLSv1 or newer is supported on the server. However, the\nFallback SCSV mechanism is not supported, allowing connections to be \"rolled\nback\" to SSLv3."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.168",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "20007",
            "pluginname": "SSL Version 2 and 3 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote service accepts connections encrypted using SSL 2.0 and/or SSL 3.0. These versions of SSL are affected by several cryptographic flaws, including:\n\n  - An insecure padding scheme with CBC ciphers.\n\n  - Insecure session renegotiation and resumption schemes.\n\nAn attacker can exploit these flaws to conduct man-in-the-middle attacks or to decrypt communications between the affected service and clients.\n\nAlthough SSL/TLS has a secure means for choosing the highest supported version of the protocol (so that these versions will be used only if the client or server support nothing better), many web browsers implement this in an unsafe way that allows an attacker to downgrade a connection (such as in POODLE). Therefore, it is recommended that these protocols be disabled entirely.\n\nNIST has determined that SSL 3.0 is no longer acceptable for secure communications. As of the date of enforcement found in PCI DSS v3.1, any version of SSL will not meet the PCI SSC's definition of 'strong cryptography'.",
            "solution": "Consult the application's documentation to disable SSL 2.0 and 3.0.\nUse TLS 1.2 (with approved cipher suites) or higher instead.",
            "cve": "",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "https://www.schneier.com/academic/paperfiles/paper-ssl.pdf\nhttp://www.nessus.org/u?b06c7e95\nhttp://www.nessus.org/u?247c4540\nhttps://www.openssl.org/~bodo/ssl-poodle.pdf\nhttp://www.nessus.org/u?5d15ba70\nhttps://www.imperialviolet.org/2014/10/14/poodle.html\nhttps://tools.ietf.org/html/rfc7507\nhttps://tools.ietf.org/html/rfc7568",
            "plugin_output": "- SSLv3 is enabled and the server supports at least one cipher.\nExplanation: TLS 1.0 and SSL 3.0 cipher suites may be used with SSLv3\nLow Strength Ciphers (<= 64-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC-SHA                                    RSA           RSA      DES-CBC(56)            SHA1\nMedium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                                   RSA           RSA      3DES-CBC(168)          SHA1\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nAES128-SHA                                     RSA           RSA      AES-CBC(128)           SHA1\nAES256-SHA                                     RSA           RSA      AES-CBC(256)           SHA1\nIDEA-CBC-SHA                                   RSA           RSA      IDEA-CBC(128)          SHA1\nRC4-MD5                                        RSA           RSA      RC4(128)               MD5\nRC4-SHA                                        RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.168",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.168",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.168",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "26928",
            "pluginname": "SSL Weak Cipher Suites Supported",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of SSL ciphers that offer weak encryption.\n\nNote: This is considerably easier to exploit if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application, if possible to avoid the use of weak ciphers.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "4.3",
            "see_also": "http://www.nessus.org/u?6527892d",
            "plugin_output": "Here is the list of weak SSL ciphers supported by the remote server :\nLow Strength Ciphers (<= 64-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC-SHA                   0x00, 0x09       RSA           RSA      DES-CBC(56)            SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.168",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.168",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "42880",
            "pluginname": "SSL / TLS Renegotiation Handshakes MiTM Plaintext Data Injection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service encrypts traffic using TLS / SSL but allows a client to insecurely renegotiate the connection after the initial handshake.\nAn unauthenticated, remote attacker may be able to leverage this issue to inject an arbitrary amount of plaintext into the beginning of the application protocol stream, which could facilitate man-in-the-middle attacks if the service assumes that the sessions before and after renegotiation are from the same 'client' and merges them at the application layer.",
            "solution": "Contact the vendor for specific patch information.",
            "cve": "CVE-2009-3555",
            "cvss3": "",
            "cvss2": "5.8",
            "see_also": "http://www.ietf.org/mail-archive/web/tls/current/msg03948.html\nhttp://www.g-sec.lu/practicaltls.pdf\nhttps://tools.ietf.org/html/rfc5746",
            "plugin_output": "TLSv1 supports insecure renegotiation.\nSSLv3 supports insecure renegotiation."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.168",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.168",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com\n|-Not After : Apr 12 02:19:39 2014 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com\n|-Issuer  : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.168",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "69551",
            "pluginname": "SSL Certificate Chain Contains RSA Keys Less Than 2048 bits",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "At least one of the X.509 certificates sent by the remote host has a key that is shorter than 2048 bits. According to industry standards set by the Certification Authority/Browser (CA/B) Forum, certificates issued after January 1, 2014 must be at least 2048 bits.\n\nSome browser SSL implementations may reject keys less than 2048 bits after January 1, 2014. Additionally, some SSL certificate vendors may revoke certificates less than 2048 bits before January 1, 2014.\n\nNote that Nessus will not flag root certificates with RSA keys less than 2048 bits if they were issued prior to December 31, 2010, as the standard considers them exempt.",
            "solution": "Replace the certificate in the chain with the RSA key less than 2048 bits in length with a longer key, and reissue any certificates signed by the old certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "https://www.cabforum.org/wp-content/uploads/Baseline_Requirements_V1.pdf",
            "plugin_output": "The following certificates were part of the certificate chain\nsent by the remote host, but contain RSA keys that are considered\nto be weak :\n|-Subject        : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com\n|-RSA Key Length : 1024 bits"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.168",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=California, L=San Jose, O=Super Micro Computer Inc., OU=Software Department, CN=IPMI, emailAddress=linda.wu@supermicro.com\nIssuer           : C=US, ST=California, L=San Jose, O=Super Micro Computer Inc., OU=Software Department, CN=IPMI, emailAddress=linda.wu@supermicro.com\nNot valid before : Apr 12 02:19:39 2012 GMT\nNot valid after  : Apr 12 02:19:39 2014 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.168",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "71534",
            "pluginname": "SuperMicro Device Uses Default SSL Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate of the remote host has not been changed from the default certificate that is hardwired into the firmware.  The private key corresponding to this certificate is shared across all devices running the same firmware, meaning that the remote host's X.509 certificate cannot be trusted.",
            "solution": "Configure the device to use a device-specific certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "5.8",
            "see_also": "http://www.nessus.org/u?f7e3f14d",
            "plugin_output": "This SSL key is used by other devices, and therefore cannot be trusted :\nAlgorithm  : RSA Encryption\nKey Length : 1024 bits\nPublic Key : B5 AB 59 11 E9 C8 56 2D FC 2C A4 3F 38 02 CC B2\nE8 41 55 E9 26 11 1B 2F E0 20 BB 18 1A D9 FD 90\n24 22 D9 11 68 6C DC 52 E4 2B E9 85 B1 96 9F D0\nFD 9F 98 09 A5 35 56 2D 66 F7 2F 02 71 1A E0 4A\n49 18 F6 C2 B1 CB 95 E8 F3 C3 A9 12 98 5F B7 C4\n50 AE 31 FC 55 15 28 FC 4C CF 09 AA 53 AA 33 57\n3A 96 F1 F6 31 25 E7 37 BA 49 05 57 1E 90 D2 9B\n05 41 1F A6 D6 A4 3D 27 A3 4A D9 63 6D 77 9C 4B\nExponent   : 01 00 01"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.168",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "70545",
            "pluginname": "Dropbear SSH Server < 2013.59 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its self-reported banner, the version of Dropbear SSH running on this port is earlier than 2013.59.  As such, it is potentially affected by multiple vulnerabilities :\n\n  - A denial of service vulnerability caused by the way the     'buf_decompress()' function handles compressed files.\n    (CVE-2013-4421)\n\n  - User-enumeration is possible due to a timing error when     authenticating users. (CVE-2013-4434)",
            "solution": "Upgrade to the Dropbear SSH 2013.59 or later.",
            "cve": "CVE-2013-4421",
            "cvss3": "",
            "cvss2": "5.0",
            "see_also": "https://matt.ucc.asn.au/dropbear/CHANGES\nhttps://secure.ucc.asn.au/hg/dropbear/rev/0bf76f54de6f\nhttps://secure.ucc.asn.au/hg/dropbear/rev/a625f9e135a4",
            "plugin_output": "Version source    : SSH-2.0-dropbear_0.52\nInstalled version : 0.52\nFixed version     : 2013.59"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.168",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "93650",
            "pluginname": "Dropbear SSH Server < 2016.72 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "4",
            "description": "According to its self-reported version in its banner, Dropbear SSH running on the remote host is prior to 2016.74. It is, therefore, affected by the following vulnerabilities :\n\n  - A format string flaw exists due to improper handling of     string format specifiers (e.g., %s and %x) in usernames     and host arguments. An unauthenticated, remote attacker     can exploit this to execute arbitrary code with root     privileges. (CVE-2016-7406)\n\n  - A flaw exists in dropbearconvert due to improper     handling of specially crafted OpenSSH key files. An     unauthenticated, remote attacker can exploit this to     execute arbitrary code. (CVE-2016-7407)\n\n  - A flaw exists in dbclient when handling the -m or -c     arguments in scripts. An unauthenticated, remote attacker     can exploit this, via a specially crafted script, to     execute arbitrary code. (CVE-2016-7408)\n\n  - A flaw exists in dbclient or dropbear server if they are     compiled with the DEBUG_TRACE option and then run using     the -v switch. A local attacker can exploit this to     disclose process memory. (CVE-2016-7409)",
            "solution": "Upgrade to Dropbear SSH version 2016.74 or later.",
            "cve": "CVE-2016-7406",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "https://matt.ucc.asn.au/dropbear/CHANGES",
            "plugin_output": "Version source    : SSH-2.0-dropbear_0.52\nInstalled version : 0.52\nFixed version     : 2016.74"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.168",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "58183",
            "pluginname": "Dropbear SSH Server Channel Concurrency Use-after-free Remote Code Execution",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "3",
            "description": "According to its self-reported banner, the remote host is running a version of Dropbear SSH before 2012.55.  As such, it reportedly contains a flaw that might allow an attacker to run arbitrary code on the remote host with root privileges if they are authenticated using a public key and command restriction is enforced. \n\nNote that Nessus has not tried to exploit this vulnerability but instead has relied solely on the version in the service's banner. \n\nNote also, in cases where the host is running ESXi 4.0 or ESXi 4.1, VMware states in their KB article id 2037316 that this is a false positive since administrative access is required to login via SSH so there are no privileges to be gained by exploiting this issue.  That is true only in a default setup, not one in which SSH access has been enabled for non-root users.",
            "solution": "Upgrade to the Dropbear SSH 2012.55 or later.",
            "cve": "CVE-2012-0920",
            "cvss3": "",
            "cvss2": "7.1",
            "see_also": "https://matt.ucc.asn.au/dropbear/CHANGES\nhttps://secure.ucc.asn.au/hg/dropbear/rev/818108bf7749\nhttps://mantor.org/~northox/misc/CVE-2012-0920.html\nhttp://www.nessus.org/u?b2ca47ea",
            "plugin_output": "Version source    : SSH-2.0-dropbear_0.52\nInstalled version : 0.52\nFixed version     : 2012.55"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.167",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "78479",
            "pluginname": "SSLv3 Padding Oracle On Downgraded Legacy Encryption Vulnerability (POODLE)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "The remote host is affected by a man-in-the-middle (MitM) information disclosure vulnerability known as POODLE. The vulnerability is due to the way SSL 3.0 handles padding bytes when decrypting messages encrypted using block ciphers in cipher block chaining (CBC) mode.\nMitM attackers can decrypt a selected byte of a cipher text in as few as 256 tries if they are able to force a victim application to repeatedly send the same data over newly created SSL 3.0 connections.\n\nAs long as a client and service both support SSLv3, a connection can be 'rolled back' to SSLv3, even if TLSv1 or newer is supported by the client and service.\n\nThe TLS Fallback SCSV mechanism prevents 'version rollback' attacks without impacting legacy clients; however, it can only protect connections when the client and service support the mechanism. Sites that cannot disable SSLv3 immediately should enable this mechanism.\n\nThis is a vulnerability in the SSLv3 specification, not in any particular SSL implementation. Disabling SSLv3 is the only way to completely mitigate the vulnerability.",
            "solution": "Disable SSLv3.\n\nServices that must support SSLv3 should enable the TLS Fallback SCSV mechanism until SSLv3 can be disabled.",
            "cve": "CVE-2014-3566",
            "cvss3": "3.4",
            "cvss2": "4.3",
            "see_also": "https://www.imperialviolet.org/2014/10/14/poodle.html\nhttps://www.openssl.org/~bodo/ssl-poodle.pdf\nhttps://tools.ietf.org/html/draft-ietf-tls-downgrade-scsv-00",
            "plugin_output": "Nessus determined that the remote server supports SSLv3 with at least one CBC\ncipher suite, indicating that this server is vulnerable.\nIt appears that TLSv1 or newer is supported on the server. However, the\nFallback SCSV mechanism is not supported, allowing connections to be \"rolled\nback\" to SSLv3."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.167",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "20007",
            "pluginname": "SSL Version 2 and 3 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote service accepts connections encrypted using SSL 2.0 and/or SSL 3.0. These versions of SSL are affected by several cryptographic flaws, including:\n\n  - An insecure padding scheme with CBC ciphers.\n\n  - Insecure session renegotiation and resumption schemes.\n\nAn attacker can exploit these flaws to conduct man-in-the-middle attacks or to decrypt communications between the affected service and clients.\n\nAlthough SSL/TLS has a secure means for choosing the highest supported version of the protocol (so that these versions will be used only if the client or server support nothing better), many web browsers implement this in an unsafe way that allows an attacker to downgrade a connection (such as in POODLE). Therefore, it is recommended that these protocols be disabled entirely.\n\nNIST has determined that SSL 3.0 is no longer acceptable for secure communications. As of the date of enforcement found in PCI DSS v3.1, any version of SSL will not meet the PCI SSC's definition of 'strong cryptography'.",
            "solution": "Consult the application's documentation to disable SSL 2.0 and 3.0.\nUse TLS 1.2 (with approved cipher suites) or higher instead.",
            "cve": "",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "https://www.schneier.com/academic/paperfiles/paper-ssl.pdf\nhttp://www.nessus.org/u?b06c7e95\nhttp://www.nessus.org/u?247c4540\nhttps://www.openssl.org/~bodo/ssl-poodle.pdf\nhttp://www.nessus.org/u?5d15ba70\nhttps://www.imperialviolet.org/2014/10/14/poodle.html\nhttps://tools.ietf.org/html/rfc7507\nhttps://tools.ietf.org/html/rfc7568",
            "plugin_output": "- SSLv3 is enabled and the server supports at least one cipher.\nExplanation: TLS 1.0 and SSL 3.0 cipher suites may be used with SSLv3\nLow Strength Ciphers (<= 64-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC-SHA                                    RSA           RSA      DES-CBC(56)            SHA1\nMedium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                                   RSA           RSA      3DES-CBC(168)          SHA1\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nAES128-SHA                                     RSA           RSA      AES-CBC(128)           SHA1\nAES256-SHA                                     RSA           RSA      AES-CBC(256)           SHA1\nIDEA-CBC-SHA                                   RSA           RSA      IDEA-CBC(128)          SHA1\nRC4-MD5                                        RSA           RSA      RC4(128)               MD5\nRC4-SHA                                        RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.167",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.167",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.167",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "26928",
            "pluginname": "SSL Weak Cipher Suites Supported",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of SSL ciphers that offer weak encryption.\n\nNote: This is considerably easier to exploit if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application, if possible to avoid the use of weak ciphers.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "4.3",
            "see_also": "http://www.nessus.org/u?6527892d",
            "plugin_output": "Here is the list of weak SSL ciphers supported by the remote server :\nLow Strength Ciphers (<= 64-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC-SHA                   0x00, 0x09       RSA           RSA      DES-CBC(56)            SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.167",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.167",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.167",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com\n|-Not After : Apr 12 02:19:39 2014 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com\n|-Issuer  : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.167",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "69551",
            "pluginname": "SSL Certificate Chain Contains RSA Keys Less Than 2048 bits",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "At least one of the X.509 certificates sent by the remote host has a key that is shorter than 2048 bits. According to industry standards set by the Certification Authority/Browser (CA/B) Forum, certificates issued after January 1, 2014 must be at least 2048 bits.\n\nSome browser SSL implementations may reject keys less than 2048 bits after January 1, 2014. Additionally, some SSL certificate vendors may revoke certificates less than 2048 bits before January 1, 2014.\n\nNote that Nessus will not flag root certificates with RSA keys less than 2048 bits if they were issued prior to December 31, 2010, as the standard considers them exempt.",
            "solution": "Replace the certificate in the chain with the RSA key less than 2048 bits in length with a longer key, and reissue any certificates signed by the old certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "https://www.cabforum.org/wp-content/uploads/Baseline_Requirements_V1.pdf",
            "plugin_output": "The following certificates were part of the certificate chain\nsent by the remote host, but contain RSA keys that are considered\nto be weak :\n|-Subject        : C=US/ST=California/L=San Jose/O=Super Micro Computer Inc./OU=Software Department/CN=IPMI/E=linda.wu@supermicro.com\n|-RSA Key Length : 1024 bits"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.167",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "42880",
            "pluginname": "SSL / TLS Renegotiation Handshakes MiTM Plaintext Data Injection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service encrypts traffic using TLS / SSL but allows a client to insecurely renegotiate the connection after the initial handshake.\nAn unauthenticated, remote attacker may be able to leverage this issue to inject an arbitrary amount of plaintext into the beginning of the application protocol stream, which could facilitate man-in-the-middle attacks if the service assumes that the sessions before and after renegotiation are from the same 'client' and merges them at the application layer.",
            "solution": "Contact the vendor for specific patch information.",
            "cve": "CVE-2009-3555",
            "cvss3": "",
            "cvss2": "5.8",
            "see_also": "http://www.ietf.org/mail-archive/web/tls/current/msg03948.html\nhttp://www.g-sec.lu/practicaltls.pdf\nhttps://tools.ietf.org/html/rfc5746",
            "plugin_output": "TLSv1 supports insecure renegotiation.\nSSLv3 supports insecure renegotiation."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.167",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "71534",
            "pluginname": "SuperMicro Device Uses Default SSL Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate of the remote host has not been changed from the default certificate that is hardwired into the firmware.  The private key corresponding to this certificate is shared across all devices running the same firmware, meaning that the remote host's X.509 certificate cannot be trusted.",
            "solution": "Configure the device to use a device-specific certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "5.8",
            "see_also": "http://www.nessus.org/u?f7e3f14d",
            "plugin_output": "This SSL key is used by other devices, and therefore cannot be trusted :\nAlgorithm  : RSA Encryption\nKey Length : 1024 bits\nPublic Key : B5 AB 59 11 E9 C8 56 2D FC 2C A4 3F 38 02 CC B2\nE8 41 55 E9 26 11 1B 2F E0 20 BB 18 1A D9 FD 90\n24 22 D9 11 68 6C DC 52 E4 2B E9 85 B1 96 9F D0\nFD 9F 98 09 A5 35 56 2D 66 F7 2F 02 71 1A E0 4A\n49 18 F6 C2 B1 CB 95 E8 F3 C3 A9 12 98 5F B7 C4\n50 AE 31 FC 55 15 28 FC 4C CF 09 AA 53 AA 33 57\n3A 96 F1 F6 31 25 E7 37 BA 49 05 57 1E 90 D2 9B\n05 41 1F A6 D6 A4 3D 27 A3 4A D9 63 6D 77 9C 4B\nExponent   : 01 00 01"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.167",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=California, L=San Jose, O=Super Micro Computer Inc., OU=Software Department, CN=IPMI, emailAddress=linda.wu@supermicro.com\nIssuer           : C=US, ST=California, L=San Jose, O=Super Micro Computer Inc., OU=Software Department, CN=IPMI, emailAddress=linda.wu@supermicro.com\nNot valid before : Apr 12 02:19:39 2012 GMT\nNot valid after  : Apr 12 02:19:39 2014 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.167",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "70545",
            "pluginname": "Dropbear SSH Server < 2013.59 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to its self-reported banner, the version of Dropbear SSH running on this port is earlier than 2013.59.  As such, it is potentially affected by multiple vulnerabilities :\n\n  - A denial of service vulnerability caused by the way the     'buf_decompress()' function handles compressed files.\n    (CVE-2013-4421)\n\n  - User-enumeration is possible due to a timing error when     authenticating users. (CVE-2013-4434)",
            "solution": "Upgrade to the Dropbear SSH 2013.59 or later.",
            "cve": "CVE-2013-4421",
            "cvss3": "",
            "cvss2": "5.0",
            "see_also": "https://matt.ucc.asn.au/dropbear/CHANGES\nhttps://secure.ucc.asn.au/hg/dropbear/rev/0bf76f54de6f\nhttps://secure.ucc.asn.au/hg/dropbear/rev/a625f9e135a4",
            "plugin_output": "Version source    : SSH-2.0-dropbear_0.52\nInstalled version : 0.52\nFixed version     : 2013.59"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.167",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "93650",
            "pluginname": "Dropbear SSH Server < 2016.72 Multiple Vulnerabilities",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "4",
            "description": "According to its self-reported version in its banner, Dropbear SSH running on the remote host is prior to 2016.74. It is, therefore, affected by the following vulnerabilities :\n\n  - A format string flaw exists due to improper handling of     string format specifiers (e.g., %s and %x) in usernames     and host arguments. An unauthenticated, remote attacker     can exploit this to execute arbitrary code with root     privileges. (CVE-2016-7406)\n\n  - A flaw exists in dropbearconvert due to improper     handling of specially crafted OpenSSH key files. An     unauthenticated, remote attacker can exploit this to     execute arbitrary code. (CVE-2016-7407)\n\n  - A flaw exists in dbclient when handling the -m or -c     arguments in scripts. An unauthenticated, remote attacker     can exploit this, via a specially crafted script, to     execute arbitrary code. (CVE-2016-7408)\n\n  - A flaw exists in dbclient or dropbear server if they are     compiled with the DEBUG_TRACE option and then run using     the -v switch. A local attacker can exploit this to     disclose process memory. (CVE-2016-7409)",
            "solution": "Upgrade to Dropbear SSH version 2016.74 or later.",
            "cve": "CVE-2016-7406",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "https://matt.ucc.asn.au/dropbear/CHANGES",
            "plugin_output": "Version source    : SSH-2.0-dropbear_0.52\nInstalled version : 0.52\nFixed version     : 2016.74"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.167",
            "system": "Super Micro",
            "os": "other",
            "pluginid": "58183",
            "pluginname": "Dropbear SSH Server Channel Concurrency Use-after-free Remote Code Execution",
            "hostname": "",
            "port": "22",
            "protocol": "tcp",
            "severity": "3",
            "description": "According to its self-reported banner, the remote host is running a version of Dropbear SSH before 2012.55.  As such, it reportedly contains a flaw that might allow an attacker to run arbitrary code on the remote host with root privileges if they are authenticated using a public key and command restriction is enforced. \n\nNote that Nessus has not tried to exploit this vulnerability but instead has relied solely on the version in the service's banner. \n\nNote also, in cases where the host is running ESXi 4.0 or ESXi 4.1, VMware states in their KB article id 2037316 that this is a false positive since administrative access is required to login via SSH so there are no privileges to be gained by exploiting this issue.  That is true only in a default setup, not one in which SSH access has been enabled for non-root users.",
            "solution": "Upgrade to the Dropbear SSH 2012.55 or later.",
            "cve": "CVE-2012-0920",
            "cvss3": "",
            "cvss2": "7.1",
            "see_also": "https://matt.ucc.asn.au/dropbear/CHANGES\nhttps://secure.ucc.asn.au/hg/dropbear/rev/818108bf7749\nhttps://mantor.org/~northox/misc/CVE-2012-0920.html\nhttp://www.nessus.org/u?b2ca47ea",
            "plugin_output": "Version source    : SSH-2.0-dropbear_0.52\nInstalled version : 0.52\nFixed version     : 2012.55"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.109",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.109",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.109",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Mar 24 09:11:51 2016 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.109",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "69551",
            "pluginname": "SSL Certificate Chain Contains RSA Keys Less Than 2048 bits",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "At least one of the X.509 certificates sent by the remote host has a key that is shorter than 2048 bits. According to industry standards set by the Certification Authority/Browser (CA/B) Forum, certificates issued after January 1, 2014 must be at least 2048 bits.\n\nSome browser SSL implementations may reject keys less than 2048 bits after January 1, 2014. Additionally, some SSL certificate vendors may revoke certificates less than 2048 bits before January 1, 2014.\n\nNote that Nessus will not flag root certificates with RSA keys less than 2048 bits if they were issued prior to December 31, 2010, as the standard considers them exempt.",
            "solution": "Replace the certificate in the chain with the RSA key less than 2048 bits in length with a longer key, and reissue any certificates signed by the old certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "https://www.cabforum.org/wp-content/uploads/Baseline_Requirements_V1.pdf",
            "plugin_output": "The following certificates were part of the certificate chain\nsent by the remote host, but contain RSA keys that are considered\nto be weak :\n|-Subject        : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-RSA Key Length : 1024 bits"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.109",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Apr 20 09:11:51 2011 GMT\nNot valid after  : Mar 24 09:11:51 2016 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.108",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.108",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.108",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Mar 24 09:11:51 2016 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.108",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "69551",
            "pluginname": "SSL Certificate Chain Contains RSA Keys Less Than 2048 bits",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "At least one of the X.509 certificates sent by the remote host has a key that is shorter than 2048 bits. According to industry standards set by the Certification Authority/Browser (CA/B) Forum, certificates issued after January 1, 2014 must be at least 2048 bits.\n\nSome browser SSL implementations may reject keys less than 2048 bits after January 1, 2014. Additionally, some SSL certificate vendors may revoke certificates less than 2048 bits before January 1, 2014.\n\nNote that Nessus will not flag root certificates with RSA keys less than 2048 bits if they were issued prior to December 31, 2010, as the standard considers them exempt.",
            "solution": "Replace the certificate in the chain with the RSA key less than 2048 bits in length with a longer key, and reissue any certificates signed by the old certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "https://www.cabforum.org/wp-content/uploads/Baseline_Requirements_V1.pdf",
            "plugin_output": "The following certificates were part of the certificate chain\nsent by the remote host, but contain RSA keys that are considered\nto be weak :\n|-Subject        : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-RSA Key Length : 1024 bits"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.108",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Apr 20 09:11:51 2011 GMT\nNot valid after  : Mar 24 09:11:51 2016 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.104",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.104",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Feb 24 09:11:35 2022 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.104",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Feb 24 09:11:35 2017 GMT\nNot valid after  : Feb 24 09:11:35 2022 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.103",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.103",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Feb 24 09:11:35 2022 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.103",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Feb 24 09:11:35 2017 GMT\nNot valid after  : Feb 24 09:11:35 2022 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.102",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.102",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Not After : Feb 24 09:11:35 2022 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com\n|-Issuer  : C=US/ST=Georgia/L=Atlanta/O=American Megatrends Inc/OU=Service Processors/CN=AMI/E=support@ami.com"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.102",
            "system": "Dell PowerEdge Blade Chassis",
            "os": "other",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nIssuer           : C=US, ST=Georgia, L=Atlanta, O=American Megatrends Inc, OU=Service Processors, CN=AMI, emailAddress=support@ami.com\nNot valid before : Feb 24 09:11:35 2017 GMT\nNot valid after  : Feb 24 09:11:35 2022 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.9",
            "system": "Arista EOS",
            "os": "other",
            "pluginid": "136929",
            "pluginname": "JQuery 1.2 < 3.5.0 Multiple XSS",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to the self-reported version in the script, the version of JQuery hosted on the remote web server is greater than or equal to 1.2 and prior to 3.5.0. It is, therefore, affected by multiple cross site scripting vulnerabilities.\n\nNote, the vulnerabilities referenced in this plugin have no security impact on PAN-OS, and/or the scenarios required for successful exploitation do not exist on devices running a PAN-OS release.",
            "solution": "Upgrade to JQuery version 3.5.0 or later.",
            "cve": "CVE-2020-11022",
            "cvss3": "6.1",
            "cvss2": "4.3",
            "see_also": "https://blog.jquery.com/2020/04/10/jquery-3-5-0-released/\nhttps://security.paloaltonetworks.com/PAN-SA-2020-0007",
            "plugin_output": "URL               : https://10.27.0.9/asset/jquery-3.3.1.min.js\nInstalled version : 3.3.1\nFixed version     : 3.5.0"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.9",
            "system": "Arista EOS",
            "os": "other",
            "pluginid": "136929",
            "pluginname": "JQuery 1.2 < 3.5.0 Multiple XSS",
            "hostname": "",
            "port": "80",
            "protocol": "tcp",
            "severity": "2",
            "description": "According to the self-reported version in the script, the version of JQuery hosted on the remote web server is greater than or equal to 1.2 and prior to 3.5.0. It is, therefore, affected by multiple cross site scripting vulnerabilities.\n\nNote, the vulnerabilities referenced in this plugin have no security impact on PAN-OS, and/or the scenarios required for successful exploitation do not exist on devices running a PAN-OS release.",
            "solution": "Upgrade to JQuery version 3.5.0 or later.",
            "cve": "CVE-2020-11022",
            "cvss3": "6.1",
            "cvss2": "4.3",
            "see_also": "https://blog.jquery.com/2020/04/10/jquery-3-5-0-released/\nhttps://security.paloaltonetworks.com/PAN-SA-2020-0007",
            "plugin_output": "URL               : http://10.27.0.9/asset/jquery-3.3.1.min.js\nInstalled version : 3.3.1\nFixed version     : 3.5.0"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.9",
            "system": "Arista EOS",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=10.27.0.9"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.9",
            "system": "Arista EOS",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=10.27.0.9\n|-Issuer  : CN=10.27.0.9"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.7",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.7",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.7",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=JP/ST=Kanagawa/L=Odawara/O=Hitachi, Ltd./OU=IT Platform Division Group/CN=Hitachi, Ltd./E=gum@str.hitachi.co.jp"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.7",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=JP/ST=Kanagawa/L=Odawara/O=Hitachi, Ltd./OU=IT Platform Division Group/CN=Hitachi, Ltd./E=gum@str.hitachi.co.jp\n|-Issuer  : C=JP/ST=Kanagawa/L=Odawara/O=Hitachi, Ltd./OU=IT Platform Division Group/CN=Hitachi, Ltd./E=gum@str.hitachi.co.jp"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.6",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.6",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.6",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=JP/ST=Kanagawa/L=Odawara/O=Hitachi, Ltd./OU=IT Platform Division Group/CN=Hitachi, Ltd./E=gum@str.hitachi.co.jp"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.6",
            "system": "Linux Kernel 2.6",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=JP/ST=Kanagawa/L=Odawara/O=Hitachi, Ltd./OU=IT Platform Division Group/CN=Hitachi, Ltd./E=gum@str.hitachi.co.jp\n|-Issuer  : C=JP/ST=Kanagawa/L=Odawara/O=Hitachi, Ltd./OU=IT Platform Division Group/CN=Hitachi, Ltd./E=gum@str.hitachi.co.jp"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.5",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "1099",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.5",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.5",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "1099",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.5",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.5",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "5990",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=US/ST=NC/L=Pinehurst/O=WBEM Solutions Inc/OU=WBEM Server/CN=J WBEM Server"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.5",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "1099",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=JP/ST=Kanagawa/L=Odawara/O=Disk Array Systems Division/OU=Hitachi, Ltd./CN=Hitachi, Ltd."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.5",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=JP/ST=Kanagawa/L=Odawara/O=Hitachi, Ltd./OU=IT Platform Division Group/CN=Hitachi, Ltd./E=svp@str.hitachi.co.jp"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.5",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "5990",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=US/ST=NC/L=Pinehurst/O=WBEM Solutions Inc/OU=WBEM Server/CN=J WBEM Server\n|-Not After : Feb 21 16:06:11 2022 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=US/ST=NC/L=Pinehurst/O=WBEM Solutions Inc/OU=WBEM Server/CN=J WBEM Server\n|-Issuer  : C=US/ST=NC/L=Pinehurst/O=WBEM Solutions Inc/OU=WBEM Server/CN=J WBEM Server"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.5",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "1099",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=JP/ST=Kanagawa/L=Odawara/O=Disk Array Systems Division/OU=Hitachi, Ltd./CN=Hitachi, Ltd.\n|-Issuer  : C=JP/ST=Kanagawa/L=Odawara/O=Disk Array Systems Division/OU=Hitachi, Ltd./CN=Hitachi, Ltd."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.5",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was part of the certificate chain\nsent by the remote host, but it has expired :\n|-Subject   : C=JP/ST=Kanagawa/L=Odawara/O=Hitachi, Ltd./OU=IT Platform Division Group/CN=Hitachi, Ltd./E=svp@str.hitachi.co.jp\n|-Not After : Apr 18 00:16:04 2024 GMT\nThe following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=JP/ST=Kanagawa/L=Odawara/O=Hitachi, Ltd./OU=IT Platform Division Group/CN=Hitachi, Ltd./E=svp@str.hitachi.co.jp\n|-Issuer  : C=JP/ST=Kanagawa/L=Odawara/O=Hitachi, Ltd./OU=IT Platform Division Group/CN=Hitachi, Ltd./E=svp@str.hitachi.co.jp"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.5",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "5990",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=US, ST=NC, L=Pinehurst, O=WBEM Solutions Inc, OU=WBEM Server, CN=J WBEM Server\nIssuer           : C=US, ST=NC, L=Pinehurst, O=WBEM Solutions Inc, OU=WBEM Server, CN=J WBEM Server\nNot valid before : Feb 22 16:06:11 2017 GMT\nNot valid after  : Feb 21 16:06:11 2022 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.5",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "15901",
            "pluginname": "SSL Certificate Expiry",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "This plugin checks expiry dates of certificates associated with SSL- enabled services on the target and reports whether any have already expired.",
            "solution": "Purchase or generate a new SSL certificate to replace the existing one.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "The SSL certificate has already expired :\nSubject          : C=JP, ST=Kanagawa, L=Odawara, O=Hitachi, Ltd., OU=IT Platform Division Group, CN=Hitachi, Ltd., emailAddress=svp@str.hitachi.co.jp\nIssuer           : C=JP, ST=Kanagawa, L=Odawara, O=Hitachi, Ltd., OU=IT Platform Division Group, CN=Hitachi, Ltd., emailAddress=svp@str.hitachi.co.jp\nNot valid before : Apr 18 00:16:04 2014 GMT\nNot valid after  : Apr 18 00:16:04 2024 GMT"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.4",
            "system": "Arista EOS",
            "os": "other",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.4",
            "system": "Arista EOS",
            "os": "other",
            "pluginid": "20007",
            "pluginname": "SSL Version 2 and 3 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote service accepts connections encrypted using SSL 2.0 and/or SSL 3.0. These versions of SSL are affected by several cryptographic flaws, including:\n\n  - An insecure padding scheme with CBC ciphers.\n\n  - Insecure session renegotiation and resumption schemes.\n\nAn attacker can exploit these flaws to conduct man-in-the-middle attacks or to decrypt communications between the affected service and clients.\n\nAlthough SSL/TLS has a secure means for choosing the highest supported version of the protocol (so that these versions will be used only if the client or server support nothing better), many web browsers implement this in an unsafe way that allows an attacker to downgrade a connection (such as in POODLE). Therefore, it is recommended that these protocols be disabled entirely.\n\nNIST has determined that SSL 3.0 is no longer acceptable for secure communications. As of the date of enforcement found in PCI DSS v3.1, any version of SSL will not meet the PCI SSC's definition of 'strong cryptography'.",
            "solution": "Consult the application's documentation to disable SSL 2.0 and 3.0.\nUse TLS 1.2 (with approved cipher suites) or higher instead.",
            "cve": "",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "https://www.schneier.com/academic/paperfiles/paper-ssl.pdf\nhttp://www.nessus.org/u?b06c7e95\nhttp://www.nessus.org/u?247c4540\nhttps://www.openssl.org/~bodo/ssl-poodle.pdf\nhttp://www.nessus.org/u?5d15ba70\nhttps://www.imperialviolet.org/2014/10/14/poodle.html\nhttps://tools.ietf.org/html/rfc7507\nhttps://tools.ietf.org/html/rfc7568",
            "plugin_output": "- SSLv3 is enabled and the server supports at least one cipher.\nExplanation: TLS 1.0 and SSL 3.0 cipher suites may be used with SSLv3\nMedium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                                   RSA           RSA      3DES-CBC(168)          SHA1\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nAES128-SHA                                     RSA           RSA      AES-CBC(128)           SHA1\nAES256-SHA                                     RSA           RSA      AES-CBC(256)           SHA1\nRC4-MD5                                        RSA           RSA      RC4(128)               MD5\nRC4-SHA                                        RSA           RSA      RC4(128)               SHA1\nRSA-AES128-SHA256                              RSA           RSA      AES-CBC(128)           SHA256\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.4",
            "system": "Arista EOS",
            "os": "other",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.4",
            "system": "Arista EOS",
            "os": "other",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.4",
            "system": "Arista EOS",
            "os": "other",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.4",
            "system": "Arista EOS",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=10.27.0.4"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.4",
            "system": "Arista EOS",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=10.27.0.4\n|-Issuer  : CN=10.27.0.4"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.4",
            "system": "Arista EOS",
            "os": "other",
            "pluginid": "35291",
            "pluginname": "SSL Certificate Signed Using Weak Hashing Algorithm",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote service uses an SSL certificate chain that has been signed using a cryptographically weak hashing algorithm (e.g. MD2, MD4, MD5, or SHA1). These signature algorithms are known to be vulnerable to collision attacks. An attacker can exploit this to generate another certificate with the same digital signature, allowing an attacker to masquerade as the affected service.\n\nNote that this plugin reports all SSL certificate chains signed with SHA-1 that expire after January 1, 2017 as vulnerable. This is in accordance with Google's gradual sunsetting of the SHA-1 cryptographic hash algorithm.\n\nNote that certificates in the chain that are contained in the Nessus CA database (known_CA.inc) have been ignored.",
            "solution": "Contact the Certificate Authority to have the SSL certificate reissued.",
            "cve": "CVE-2004-2761",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://tools.ietf.org/html/rfc3279\nhttp://www.nessus.org/u?9bb87bf2\nhttp://www.nessus.org/u?e120eea1\nhttp://www.nessus.org/u?5d894816\nhttp://www.nessus.org/u?51db68aa\nhttp://www.nessus.org/u?9dc7bfba",
            "plugin_output": "The following certificates were part of the certificate chain sent by\nthe remote host, but contain hashes that are considered to be weak.\nSubject             : CN=10.27.0.4\nSignature Algorithm : SHA-1 With RSA Encryption\nValid From          : Oct 19 08:18:45 2021 GMT\nValid To            : Oct 17 08:18:45 2031 GMT\nRaw PEM certificate :\n-----BEGIN CERTIFICATE-----\nMIIBnzCCAQgCCQCACRm7hH4SPzANBgkqhkiG9w0BAQUFADAUMRIwEAYDVQQDEwkxMC4yNy4wLjQwHhcNMjExMDE5MDgxODQ1WhcNMzExMDE3MDgxODQ1WjAUMRIwEAYDVQQDEwkxMC4yNy4wLjQwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAKDZjJliF9Vm5UDGhYD3FidbteqmgxZmtxKCHHb3QK38F7/10DEYpPqphTDOWDdbFfJqfnD9tLMUZPCzk0ostzLJINvOYQorqQxbjgA2DOGwV72N2EwAbw//UxNrT7fgRcvm22QPtMjCJZtXQrVbobYP1l26l6FSNeZlkpo5y+ZLAgMBAAEwDQYJKoZIhvcNAQEFBQADgYEAjkyJ9bo2NWIkbOHsMIoHs3hA20rQs74D1PgWnHTY3EOQo6fwuQEI2esq03MThEgrl5sOGsX+cr1M/7+zd+WqodP5nQeM9EjgyzCFrqUku1o/p+VJ2jX4gh5WOEk2fa/4xyipX2AV/03ydWzPNu/0p+QJxjeLkMJ5M7AiCj8OxoU=\n-----END CERTIFICATE-----"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.4",
            "system": "Arista EOS",
            "os": "other",
            "pluginid": "69551",
            "pluginname": "SSL Certificate Chain Contains RSA Keys Less Than 2048 bits",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "At least one of the X.509 certificates sent by the remote host has a key that is shorter than 2048 bits. According to industry standards set by the Certification Authority/Browser (CA/B) Forum, certificates issued after January 1, 2014 must be at least 2048 bits.\n\nSome browser SSL implementations may reject keys less than 2048 bits after January 1, 2014. Additionally, some SSL certificate vendors may revoke certificates less than 2048 bits before January 1, 2014.\n\nNote that Nessus will not flag root certificates with RSA keys less than 2048 bits if they were issued prior to December 31, 2010, as the standard considers them exempt.",
            "solution": "Replace the certificate in the chain with the RSA key less than 2048 bits in length with a longer key, and reissue any certificates signed by the old certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "https://www.cabforum.org/wp-content/uploads/Baseline_Requirements_V1.pdf",
            "plugin_output": "The following certificates were part of the certificate chain\nsent by the remote host, but contain RSA keys that are considered\nto be weak :\n|-Subject        : CN=10.27.0.4\n|-RSA Key Length : 1024 bits"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.3",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.3",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.3",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.3",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.3",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "20007",
            "pluginname": "SSL Version 2 and 3 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote service accepts connections encrypted using SSL 2.0 and/or SSL 3.0. These versions of SSL are affected by several cryptographic flaws, including:\n\n  - An insecure padding scheme with CBC ciphers.\n\n  - Insecure session renegotiation and resumption schemes.\n\nAn attacker can exploit these flaws to conduct man-in-the-middle attacks or to decrypt communications between the affected service and clients.\n\nAlthough SSL/TLS has a secure means for choosing the highest supported version of the protocol (so that these versions will be used only if the client or server support nothing better), many web browsers implement this in an unsafe way that allows an attacker to downgrade a connection (such as in POODLE). Therefore, it is recommended that these protocols be disabled entirely.\n\nNIST has determined that SSL 3.0 is no longer acceptable for secure communications. As of the date of enforcement found in PCI DSS v3.1, any version of SSL will not meet the PCI SSC's definition of 'strong cryptography'.",
            "solution": "Consult the application's documentation to disable SSL 2.0 and 3.0.\nUse TLS 1.2 (with approved cipher suites) or higher instead.",
            "cve": "",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "https://www.schneier.com/academic/paperfiles/paper-ssl.pdf\nhttp://www.nessus.org/u?b06c7e95\nhttp://www.nessus.org/u?247c4540\nhttps://www.openssl.org/~bodo/ssl-poodle.pdf\nhttp://www.nessus.org/u?5d15ba70\nhttps://www.imperialviolet.org/2014/10/14/poodle.html\nhttps://tools.ietf.org/html/rfc7507\nhttps://tools.ietf.org/html/rfc7568",
            "plugin_output": "- SSLv3 is enabled and the server supports at least one cipher.\nExplanation: TLS 1.0 and SSL 3.0 cipher suites may be used with SSLv3\nMedium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                                   RSA           RSA      3DES-CBC(168)          SHA1\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nAES128-SHA                                     RSA           RSA      AES-CBC(128)           SHA1\nAES256-SHA                                     RSA           RSA      AES-CBC(256)           SHA1\nRC4-MD5                                        RSA           RSA      RC4(128)               MD5\nRC4-SHA                                        RSA           RSA      RC4(128)               SHA1\nRSA-AES128-SHA256                              RSA           RSA      AES-CBC(128)           SHA256\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.2",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "20007",
            "pluginname": "SSL Version 2 and 3 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote service accepts connections encrypted using SSL 2.0 and/or SSL 3.0. These versions of SSL are affected by several cryptographic flaws, including:\n\n  - An insecure padding scheme with CBC ciphers.\n\n  - Insecure session renegotiation and resumption schemes.\n\nAn attacker can exploit these flaws to conduct man-in-the-middle attacks or to decrypt communications between the affected service and clients.\n\nAlthough SSL/TLS has a secure means for choosing the highest supported version of the protocol (so that these versions will be used only if the client or server support nothing better), many web browsers implement this in an unsafe way that allows an attacker to downgrade a connection (such as in POODLE). Therefore, it is recommended that these protocols be disabled entirely.\n\nNIST has determined that SSL 3.0 is no longer acceptable for secure communications. As of the date of enforcement found in PCI DSS v3.1, any version of SSL will not meet the PCI SSC's definition of 'strong cryptography'.",
            "solution": "Consult the application's documentation to disable SSL 2.0 and 3.0.\nUse TLS 1.2 (with approved cipher suites) or higher instead.",
            "cve": "",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "https://www.schneier.com/academic/paperfiles/paper-ssl.pdf\nhttp://www.nessus.org/u?b06c7e95\nhttp://www.nessus.org/u?247c4540\nhttps://www.openssl.org/~bodo/ssl-poodle.pdf\nhttp://www.nessus.org/u?5d15ba70\nhttps://www.imperialviolet.org/2014/10/14/poodle.html\nhttps://tools.ietf.org/html/rfc7507\nhttps://tools.ietf.org/html/rfc7568",
            "plugin_output": "- SSLv3 is enabled and the server supports at least one cipher.\nExplanation: TLS 1.0 and SSL 3.0 cipher suites may be used with SSLv3\nMedium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                                   RSA           RSA      3DES-CBC(168)          SHA1\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nAES128-SHA                                     RSA           RSA      AES-CBC(128)           SHA1\nAES256-SHA                                     RSA           RSA      AES-CBC(256)           SHA1\nRC4-MD5                                        RSA           RSA      RC4(128)               MD5\nRC4-SHA                                        RSA           RSA      RC4(128)               SHA1\nRSA-AES128-SHA256                              RSA           RSA      AES-CBC(128)           SHA256\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.2",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.2",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.2",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.2",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.2",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=10.27.0.2"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.2",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=10.27.0.2\n|-Issuer  : CN=10.27.0.2"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.2",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "35291",
            "pluginname": "SSL Certificate Signed Using Weak Hashing Algorithm",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote service uses an SSL certificate chain that has been signed using a cryptographically weak hashing algorithm (e.g. MD2, MD4, MD5, or SHA1). These signature algorithms are known to be vulnerable to collision attacks. An attacker can exploit this to generate another certificate with the same digital signature, allowing an attacker to masquerade as the affected service.\n\nNote that this plugin reports all SSL certificate chains signed with SHA-1 that expire after January 1, 2017 as vulnerable. This is in accordance with Google's gradual sunsetting of the SHA-1 cryptographic hash algorithm.\n\nNote that certificates in the chain that are contained in the Nessus CA database (known_CA.inc) have been ignored.",
            "solution": "Contact the Certificate Authority to have the SSL certificate reissued.",
            "cve": "CVE-2004-2761",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://tools.ietf.org/html/rfc3279\nhttp://www.nessus.org/u?9bb87bf2\nhttp://www.nessus.org/u?e120eea1\nhttp://www.nessus.org/u?5d894816\nhttp://www.nessus.org/u?51db68aa\nhttp://www.nessus.org/u?9dc7bfba",
            "plugin_output": "The following certificates were part of the certificate chain sent by\nthe remote host, but contain hashes that are considered to be weak.\nSubject             : CN=10.27.0.2\nSignature Algorithm : SHA-1 With RSA Encryption\nValid From          : Jun 12 08:36:49 2018 GMT\nValid To            : Jun 09 08:36:49 2028 GMT\nRaw PEM certificate :\n-----BEGIN CERTIFICATE-----\nMIIBnzCCAQgCCQDhbZXoRQDtczANBgkqhkiG9w0BAQUFADAUMRIwEAYDVQQDEwkxMC4yNy4wLjIwHhcNMTgwNjEyMDgzNjQ5WhcNMjgwNjA5MDgzNjQ5WjAUMRIwEAYDVQQDEwkxMC4yNy4wLjIwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMAoK9XEACyhBovLkfRCuVMqeg7hNsu72plVfm/JyGFg3XvoFlouJnYD1Mxsq4+3jch2pU1rDob4fJOq/xWs5j8ZrjZ9pvpdbV2PyqFRzb+n9SBTmCWZUUI1ehTXOtMn5axkbNXhXDYjwiC57yM6JlrDq3ogy0hl+7X20it9gk45AgMBAAEwDQYJKoZIhvcNAQEFBQADgYEAX2McfchCAV3rPD7jQZPmcRK7oWqSbf0sGyv+OeSOUQKpI8avhPh9l/FM4ZS4fOVcbNJzi77GUU/U/fFRYyEdojpPu0L4E7mIrn+RbVgRHg8Fm39zSF0ARN/XqsIH4zC3SlIPnnl6mapoLUI25nxzyf8b0sq8TSMofNNfyyE1tls=\n-----END CERTIFICATE-----"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.2",
            "system": "Ubuntu 16.04 Linux Kernel 4.4",
            "os": "linux",
            "pluginid": "69551",
            "pluginname": "SSL Certificate Chain Contains RSA Keys Less Than 2048 bits",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "At least one of the X.509 certificates sent by the remote host has a key that is shorter than 2048 bits. According to industry standards set by the Certification Authority/Browser (CA/B) Forum, certificates issued after January 1, 2014 must be at least 2048 bits.\n\nSome browser SSL implementations may reject keys less than 2048 bits after January 1, 2014. Additionally, some SSL certificate vendors may revoke certificates less than 2048 bits before January 1, 2014.\n\nNote that Nessus will not flag root certificates with RSA keys less than 2048 bits if they were issued prior to December 31, 2010, as the standard considers them exempt.",
            "solution": "Replace the certificate in the chain with the RSA key less than 2048 bits in length with a longer key, and reissue any certificates signed by the old certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "https://www.cabforum.org/wp-content/uploads/Baseline_Requirements_V1.pdf",
            "plugin_output": "The following certificates were part of the certificate chain\nsent by the remote host, but contain RSA keys that are considered\nto be weak :\n|-Subject        : CN=10.27.0.2\n|-RSA Key Length : 1024 bits"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.1",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "20007",
            "pluginname": "SSL Version 2 and 3 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "4",
            "description": "The remote service accepts connections encrypted using SSL 2.0 and/or SSL 3.0. These versions of SSL are affected by several cryptographic flaws, including:\n\n  - An insecure padding scheme with CBC ciphers.\n\n  - Insecure session renegotiation and resumption schemes.\n\nAn attacker can exploit these flaws to conduct man-in-the-middle attacks or to decrypt communications between the affected service and clients.\n\nAlthough SSL/TLS has a secure means for choosing the highest supported version of the protocol (so that these versions will be used only if the client or server support nothing better), many web browsers implement this in an unsafe way that allows an attacker to downgrade a connection (such as in POODLE). Therefore, it is recommended that these protocols be disabled entirely.\n\nNIST has determined that SSL 3.0 is no longer acceptable for secure communications. As of the date of enforcement found in PCI DSS v3.1, any version of SSL will not meet the PCI SSC's definition of 'strong cryptography'.",
            "solution": "Consult the application's documentation to disable SSL 2.0 and 3.0.\nUse TLS 1.2 (with approved cipher suites) or higher instead.",
            "cve": "",
            "cvss3": "9.8",
            "cvss2": "10.0",
            "see_also": "https://www.schneier.com/academic/paperfiles/paper-ssl.pdf\nhttp://www.nessus.org/u?b06c7e95\nhttp://www.nessus.org/u?247c4540\nhttps://www.openssl.org/~bodo/ssl-poodle.pdf\nhttp://www.nessus.org/u?5d15ba70\nhttps://www.imperialviolet.org/2014/10/14/poodle.html\nhttps://tools.ietf.org/html/rfc7507\nhttps://tools.ietf.org/html/rfc7568",
            "plugin_output": "- SSLv3 is enabled and the server supports at least one cipher.\nExplanation: TLS 1.0 and SSL 3.0 cipher suites may be used with SSLv3\nMedium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                                   RSA           RSA      3DES-CBC(168)          SHA1\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nAES128-SHA                                     RSA           RSA      AES-CBC(128)           SHA1\nAES256-SHA                                     RSA           RSA      AES-CBC(256)           SHA1\nRC4-MD5                                        RSA           RSA      RC4(128)               MD5\nRC4-SHA                                        RSA           RSA      RC4(128)               SHA1\nRSA-AES128-SHA256                              RSA           RSA      AES-CBC(128)           SHA256\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.1",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.1",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.1",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.1",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 0,
            "ip": "10.27.0.1",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=10.27.0.1"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.1",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=10.27.0.1\n|-Issuer  : CN=10.27.0.1"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.1",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "35291",
            "pluginname": "SSL Certificate Signed Using Weak Hashing Algorithm",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote service uses an SSL certificate chain that has been signed using a cryptographically weak hashing algorithm (e.g. MD2, MD4, MD5, or SHA1). These signature algorithms are known to be vulnerable to collision attacks. An attacker can exploit this to generate another certificate with the same digital signature, allowing an attacker to masquerade as the affected service.\n\nNote that this plugin reports all SSL certificate chains signed with SHA-1 that expire after January 1, 2017 as vulnerable. This is in accordance with Google's gradual sunsetting of the SHA-1 cryptographic hash algorithm.\n\nNote that certificates in the chain that are contained in the Nessus CA database (known_CA.inc) have been ignored.",
            "solution": "Contact the Certificate Authority to have the SSL certificate reissued.",
            "cve": "CVE-2004-2761",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://tools.ietf.org/html/rfc3279\nhttp://www.nessus.org/u?9bb87bf2\nhttp://www.nessus.org/u?e120eea1\nhttp://www.nessus.org/u?5d894816\nhttp://www.nessus.org/u?51db68aa\nhttp://www.nessus.org/u?9dc7bfba",
            "plugin_output": "The following certificates were part of the certificate chain sent by\nthe remote host, but contain hashes that are considered to be weak.\nSubject             : CN=10.27.0.1\nSignature Algorithm : SHA-1 With RSA Encryption\nValid From          : Jun 08 06:54:21 2018 GMT\nValid To            : Jun 05 06:54:21 2028 GMT\nRaw PEM certificate :\n-----BEGIN CERTIFICATE-----\nMIIBnzCCAQgCCQDX3UNf6fYbyTANBgkqhkiG9w0BAQUFADAUMRIwEAYDVQQDEwkxMC4yNy4wLjEwHhcNMTgwNjA4MDY1NDIxWhcNMjgwNjA1MDY1NDIxWjAUMRIwEAYDVQQDEwkxMC4yNy4wLjEwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAJ8EtBnTYimCSndDGl7Bum0tladPd84CZRn8J6uszOKoOEOFT6bmWOCe//v57d7TxGP082oHjI4WKFDLpFKb9LhX+Z3xJU+Nzcd2I6xK6r2ZOL++lfS2LOTZwkKQIyse2Qytrm3KgQUpxPRhd8TG8rGSwlmk6uqe7+5RzuA9RKYxAgMBAAEwDQYJKoZIhvcNAQEFBQADgYEAYMHcCn6vWlJFOD+msE8lvmDlYl2n+rFP90bQJZ3+9dJAQ8uKQSUIlLSkYKDAwrRYFbO/STodma6+z6OltgPcEdANPy+LcjikyRntkUpF24lG+n6Lez0HUFClw+YZ6+L15YDHX5gPdLAc2/Q4VOIkYnyXOYKu36YaaCw3kSuzA/U=\n-----END CERTIFICATE-----"
        },
        {
            "file_no": 0,
            "ip": "10.27.0.1",
            "system": "CentOS Linux 7 Linux Kernel 3.10",
            "os": "linux",
            "pluginid": "69551",
            "pluginname": "SSL Certificate Chain Contains RSA Keys Less Than 2048 bits",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "1",
            "description": "At least one of the X.509 certificates sent by the remote host has a key that is shorter than 2048 bits. According to industry standards set by the Certification Authority/Browser (CA/B) Forum, certificates issued after January 1, 2014 must be at least 2048 bits.\n\nSome browser SSL implementations may reject keys less than 2048 bits after January 1, 2014. Additionally, some SSL certificate vendors may revoke certificates less than 2048 bits before January 1, 2014.\n\nNote that Nessus will not flag root certificates with RSA keys less than 2048 bits if they were issued prior to December 31, 2010, as the standard considers them exempt.",
            "solution": "Replace the certificate in the chain with the RSA key less than 2048 bits in length with a longer key, and reissue any certificates signed by the old certificate.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "https://www.cabforum.org/wp-content/uploads/Baseline_Requirements_V1.pdf",
            "plugin_output": "The following certificates were part of the certificate chain\nsent by the remote host, but contain RSA keys that are considered\nto be weak :\n|-Subject        : CN=10.27.0.1\n|-RSA Key Length : 1024 bits"
        },
        {
            "file_no": 1,
            "ip": "10.27.232.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The remote clock is synchronized with the local clock."
        },
        {
            "file_no": 1,
            "ip": "10.27.198.254",
            "system": "",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 1,
            "ip": "10.20.184.253",
            "system": "Cisco Device",
            "os": "other",
            "pluginid": "10068",
            "pluginname": "Finger Service Remote Information Disclosure",
            "hostname": "",
            "port": "79",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host is running the 'finger' service. \n\nThe purpose of this service is to show who is currently logged into the remote system, and to give information about the users of the remote system.  It provides useful information to attackers, since it allows them to gain usernames, determine how used a machine is, and see when each user logged in for the last time.",
            "solution": "Comment out the 'finger' line in /etc/inetd.conf and restart the inetd process",
            "cve": "CVE-1999-0612",
            "cvss3": "",
            "cvss2": "5.0",
            "see_also": "",
            "plugin_output": "Here is the output we obtained for 'root' :\nLine      User       Host(s)              Idle Location\n1 vty 0               idle                 00:00:00 10.27.39.133\n*  2 vty 1               idle                 00:00:00 10.27.39.133\nInterface  User      Mode                     Idle Peer Address"
        },
        {
            "file_no": 1,
            "ip": "10.20.184.253",
            "system": "Cisco Device",
            "os": "other",
            "pluginid": "42263",
            "pluginname": "Unencrypted Telnet Server",
            "hostname": "",
            "port": "23",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host is running a Telnet server over an unencrypted channel.\n\nUsing Telnet over an unencrypted channel is not recommended as logins, passwords, and commands are transferred in cleartext. This allows a remote, man-in-the-middle attacker to eavesdrop on a Telnet session to obtain credentials or other sensitive information and to modify traffic exchanged between a client and server.\n\nSSH is preferred over Telnet since it protects credentials from eavesdropping and can tunnel additional data streams such as an X11 session.",
            "solution": "Disable the Telnet service and use SSH instead.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "5.8",
            "see_also": "",
            "plugin_output": "Nessus collected the following banner from the remote Telnet server :\n------------------------------ snip ------------------------------\nUser Access Verification\nUsername:\n------------------------------ snip ------------------------------"
        },
        {
            "file_no": 1,
            "ip": "10.20.184.253",
            "system": "Cisco Device",
            "os": "other",
            "pluginid": "97861",
            "pluginname": "Network Time Protocol (NTP) Mode 6 Scanner",
            "hostname": "",
            "port": "123",
            "protocol": "udp",
            "severity": "2",
            "description": "The remote NTP server responds to mode 6 queries. Devices that respond to these queries have the potential to be used in NTP amplification attacks. An unauthenticated, remote attacker could potentially exploit this, via a specially crafted mode 6 query, to cause a reflected denial of service condition.",
            "solution": "Restrict NTP mode 6 queries.",
            "cve": "",
            "cvss3": "5.8",
            "cvss2": "5.0",
            "see_also": "https://ntpscan.shadowserver.org",
            "plugin_output": "Nessus elicited the following response from the remote\nhost by sending an NTP mode 6 query :\n'system=\"cisco\", leap=3, stratum=16, rootdelay=7.49,\nrootdispersion=3753.30, peer=0, refid=211.79.200.252,\nreftime=0xDAC85AD3.699DE7D6, poll=8, clock=0xEB0E7C79.6179B3C1,\nphase=-0.064, freq=-31.52, error=3751.04'"
        },
        {
            "file_no": 1,
            "ip": "10.20.184.253",
            "system": "Cisco Device",
            "os": "other",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 1,
            "ip": "10.20.184.44",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8834",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : O=Nessus Users United/OU=Nessus Server/L=New York/C=US/ST=NY/CN=ACSI-ICD240VA-001\n|-Issuer  : O=Nessus Users United/OU=Nessus Certification Authority/L=New York/C=US/ST=NY/CN=Nessus Certification Authority"
        },
        {
            "file_no": 1,
            "ip": "10.20.184.44",
            "system": "Nutanix",
            "os": "linux",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "The difference between the local and remote clocks is -1 seconds."
        },
        {
            "file_no": 1,
            "ip": "10.20.184.43",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taiwan/L=Taipei City/O=SEOrg/OU=SEUnit/CN=se3.acsicook.info\n|-Issuer  : C=TW/ST=Taiwan/L=Taipei City/O=SEOrg/OU=SEUnit/CN=se3.acsicook.info"
        },
        {
            "file_no": 1,
            "ip": "10.20.184.43",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Taiwan/L=Taipei City/O=SEOrg/OU=SEUnit/CN=se3.acsicook.info"
        },
        {
            "file_no": 1,
            "ip": "10.20.184.43",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Taiwan/L=Taipei City/O=SEOrg/OU=SEUnit/CN=backend.se.com"
        },
        {
            "file_no": 1,
            "ip": "10.20.184.43",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taiwan/L=Taipei City/O=SEOrg/OU=SEUnit/CN=backend.se.com\n|-Issuer  : C=TW/ST=Taiwan/L=Taipei City/O=SEOrg/OU=SEUnit/CN=backend.se.com"
        },
        {
            "file_no": 1,
            "ip": "10.20.184.41",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : C=TW/ST=Taiwan/L=Taipei City/O=SEOrg/OU=SEUnit/CN=backend.se.com"
        },
        {
            "file_no": 1,
            "ip": "10.20.184.41",
            "system": "Nutanix",
            "os": "other",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "8443",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : C=TW/ST=Taiwan/L=Taipei City/O=SEOrg/OU=SEUnit/CN=backend.se.com\n|-Issuer  : C=TW/ST=Taiwan/L=Taipei City/O=SEOrg/OU=SEUnit/CN=backend.se.com"
        },
        {
            "file_no": 1,
            "ip": "10.20.184.35",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "83875",
            "pluginname": "SSL/TLS Diffie-Hellman Modulus <= 1024 Bits (Logjam)",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "1",
            "description": "The remote host allows SSL/TLS connections with one or more Diffie-Hellman moduli less than or equal to 1024 bits. Through cryptanalysis, a third party may be able to find the shared secret in a short amount of time (depending on modulus size and attacker resources). This may allow an attacker to recover the plaintext or potentially violate the integrity of connections.",
            "solution": "Reconfigure the service to use a unique Diffie-Hellman moduli of 2048 bits or greater.",
            "cve": "CVE-2015-4000",
            "cvss3": "3.7",
            "cvss2": "2.6",
            "see_also": "https://weakdh.org/",
            "plugin_output": "Vulnerable connection combinations :\nSSL/TLS version  : TLSv1.0\nCipher suite     : TLS1_CK_DHE_RSA_WITH_AES_256_CBC_SHA\nDiffie-Hellman MODP size (bits) : 1024\nWarning - This is a known static Oakley Group2 modulus. This may make\nthe remote host more vulnerable to the Logjam attack.\nLogjam attack difficulty : Hard (would require nation-state resources)\nSSL/TLS version  : TLSv1.0\nCipher suite     : TLS1_CK_DHE_RSA_WITH_AES_128_CBC_SHA\nDiffie-Hellman MODP size (bits) : 1024\nWarning - This is a known static Oakley Group2 modulus. This may make\nthe remote host more vulnerable to the Logjam attack.\nLogjam attack difficulty : Hard (would require nation-state resources)\nSSL/TLS version  : TLSv1.1\nCipher suite     : TLS1_CK_DHE_RSA_WITH_AES_256_CBC_SHA\nDiffie-Hellman MODP size (bits) : 1024\nWarning - This is a known static Oakley Group2 modulus. This may make\nthe remote host more vulnerable to the Logjam attack.\nLogjam attack difficulty : Hard (would require nation-state resources)\nSSL/TLS version  : TLSv1.1\nCipher suite     : TLS1_CK_DHE_RSA_WITH_AES_128_CBC_SHA\nDiffie-Hellman MODP size (bits) : 1024\nWarning - This is a known static Oakley Group2 modulus. This may make\nthe remote host more vulnerable to the Logjam attack.\nLogjam attack difficulty : Hard (would require nation-state resources)"
        },
        {
            "file_no": 1,
            "ip": "10.20.184.35",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "65821",
            "pluginname": "SSL RC4 Cipher Suites Supported (Bar Mitzvah)",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote host supports the use of RC4 in one or more cipher suites.\nThe RC4 cipher is flawed in its generation of a pseudo-random stream of bytes so that a wide variety of small biases are introduced into the stream, decreasing its randomness.\n\nIf plaintext is repeatedly encrypted (e.g., HTTP cookies), and an attacker is able to obtain many (i.e., tens of millions) ciphertexts, the attacker may be able to derive the plaintext.",
            "solution": "Reconfigure the affected application, if possible, to avoid use of RC4 ciphers. Consider using TLS 1.2 with AES-GCM suites subject to browser and web server support.",
            "cve": "CVE-2013-2566",
            "cvss3": "5.9",
            "cvss2": "4.3",
            "see_also": "https://www.rc4nomore.com/\nhttp://www.nessus.org/u?ac7327a0\nhttp://cr.yp.to/talks/2013.03.12/slides.pdf\nhttp://www.isg.rhul.ac.uk/tls/\nhttps://www.imperva.com/docs/HII_Attacking_SSL_when_using_RC4.pdf",
            "plugin_output": "List of RC4 cipher suites supported by the remote server :\nHigh Strength Ciphers (>= 112-bit key)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nRC4-MD5                       0x00, 0x04       RSA           RSA      RC4(128)               MD5\nRC4-SHA                       0x00, 0x05       RSA           RSA      RC4(128)               SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 1,
            "ip": "10.20.184.35",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "42873",
            "pluginname": "SSL Medium Strength Cipher Suites Supported (SWEET32)",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "3",
            "description": "The remote host supports the use of SSL ciphers that offer medium strength encryption. Nessus regards medium strength as any encryption that uses key lengths at least 64 bits and less than 112 bits, or else that uses the 3DES encryption suite.\n\nNote that it is considerably easier to circumvent medium strength encryption if the attacker is on the same physical network.",
            "solution": "Reconfigure the affected application if possible to avoid use of medium strength ciphers.",
            "cve": "CVE-2016-2183",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/\nhttps://sweet32.info",
            "plugin_output": "Medium Strength Ciphers (> 64-bit and < 112-bit key, or 3DES)\nName                          Code             KEX           Auth     Encryption             MAC\n----------------------        ----------       ---           ----     ---------------------  ---\nDES-CBC3-SHA                  0x00, 0x0A       RSA           RSA      3DES-CBC(168)          SHA1\nThe fields above are :\n{Tenable ciphername}\n{Cipher ID code}\nKex={key exchange}\nAuth={authentication}\nEncrypt={symmetric encryption method}\nMAC={message authentication code}\n{export flag}"
        },
        {
            "file_no": 1,
            "ip": "10.20.184.35",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "104743",
            "pluginname": "TLS Version 1.0 Protocol Detection",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a number of cryptographic design flaws. Modern implementations of TLS 1.0 mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are designed against these flaws and should be used whenever possible.\n\nAs of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.\n\nPCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30, 2018, except for POS POI terminals (and the SSL/TLS termination points to which they connect) that can be verified as not being susceptible to any known exploits.",
            "solution": "Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00",
            "plugin_output": "TLSv1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 1,
            "ip": "10.20.184.35",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "157288",
            "pluginname": "TLS Version 1.1 Deprecated Protocol",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM cannot be used with TLS 1.1\n\nAs of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major web browsers and major vendors.",
            "solution": "Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.1",
            "see_also": "https://datatracker.ietf.org/doc/html/rfc8996\nhttp://www.nessus.org/u?c8ae820d",
            "plugin_output": "TLSv1.1 is enabled and the server supports at least one cipher."
        },
        {
            "file_no": 1,
            "ip": "10.20.184.35",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "18405",
            "pluginname": "Remote Desktop Protocol Server Man-in-the-Middle Weakness",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote version of the Remote Desktop Protocol Server (Terminal Service) is vulnerable to a man-in-the-middle (MiTM) attack. The RDP client makes no effort to validate the identity of the server when setting up encryption. An attacker with the ability to intercept traffic from the RDP server can establish encryption with the client and server without being detected. A MiTM attack of this nature would allow the attacker to obtain any sensitive information transmitted, including authentication credentials.\n\nThis flaw exists because the RDP server stores a publicly known hard-coded RSA private key. Any attacker in a privileged network location can use the key for this attack.",
            "solution": "- Force the use of SSL as a transport layer for this service if supported, or/and\n\n- On Microsoft Windows operating systems, select the 'Allow connections only from computers running Remote  Desktop with Network Level Authentication' setting if it is available.",
            "cve": "CVE-2005-1794",
            "cvss3": "6.5",
            "cvss2": "5.1",
            "see_also": "http://www.nessus.org/u?8033da0d",
            "plugin_output": ""
        },
        {
            "file_no": 1,
            "ip": "10.20.184.35",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "30218",
            "pluginname": "Terminal Services Encryption Level is not FIPS-140 Compliant",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "1",
            "description": "The encryption setting used by the remote Terminal Services service is not FIPS-140 compliant.",
            "solution": "Change RDP encryption level to :\n\n 4. FIPS Compliant",
            "cve": "",
            "cvss3": "",
            "cvss2": "2.6",
            "see_also": "",
            "plugin_output": "The terminal services encryption level is set to :\n2. Medium (Client Compatible)"
        },
        {
            "file_no": 1,
            "ip": "10.20.184.35",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "57690",
            "pluginname": "Terminal Services Encryption Level is Medium or Low",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote Terminal Services service is not configured to use strong cryptography. \n\nUsing weak cryptography with this service may allow an attacker to eavesdrop on the communications more easily and obtain screenshots and/or keystrokes.",
            "solution": "Change RDP encryption level to one of :\n\n 3. High\n\n 4. FIPS Compliant",
            "cve": "",
            "cvss3": "",
            "cvss2": "4.3",
            "see_also": "",
            "plugin_output": "The terminal services encryption level is set to :\n2. Medium"
        },
        {
            "file_no": 1,
            "ip": "10.20.184.35",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "58453",
            "pluginname": "Terminal Services Doesn't Use Network Level Authentication (NLA) Only",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The remote Terminal Services is not configured to use Network Level Authentication (NLA) only. NLA uses the Credential Security Support Provider (CredSSP) protocol to perform strong server authentication either through TLS/SSL or Kerberos mechanisms, which protect against man-in-the-middle attacks. In addition to improving authentication, NLA also helps protect the remote computer from malicious users and software by completing user authentication before a full RDP connection is established.",
            "solution": "Enable Network Level Authentication (NLA) on the remote RDP server. This is generally done on the 'Remote' tab of the 'System' settings on Windows.",
            "cve": "",
            "cvss3": "4.0",
            "cvss2": "4.3",
            "see_also": "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc732713(v=ws.11)\nhttp://www.nessus.org/u?e2628096",
            "plugin_output": "Nessus was able to negotiate non-NLA (Network Level Authentication) security."
        },
        {
            "file_no": 1,
            "ip": "10.20.184.35",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "194472",
            "pluginname": "Apache Tomcat 8.5.0 < 8.5.64 multiple vulnerabilities",
            "hostname": "",
            "port": "8080",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Tomcat installed on the remote host is prior to 8.5.64. It is, therefore, affected by multiple vulnerabilities as referenced in the fixed_in_apache_tomcat_8.5.64_security-8 advisory.\n\n  - Apache Tomcat 8.5.0 to 8.5.63, 9.0.0-M1 to 9.0.43 and 10.0.0-M1 to 10.0.2 did not properly validate     incoming TLS packets. When Tomcat was configured to use NIO+OpenSSL or NIO2+OpenSSL for TLS, a specially     crafted packet could be used to trigger an infinite loop resulting in a denial of service.\n    (CVE-2021-41079)\n\n  - Generation of Error Message Containing Sensitive Information vulnerability in Apache Tomcat.This issue     affects Apache Tomcat: from 8.5.7 through 8.5.63, from 9.0.0-M11 through 9.0.43. Users are recommended to     upgrade to version 8.5.64 onwards or 9.0.44 onwards, which contain a fix for the issue. (CVE-2024-21733)\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Apache Tomcat version 8.5.64 or later.",
            "cve": "CVE-2021-41079",
            "cvss3": "5.3",
            "cvss2": "4.3",
            "see_also": "http://www.nessus.org/u?d59ef87c\nhttp://www.nessus.org/u?ee2b85c9\nhttp://www.nessus.org/u?8a84b9d3",
            "plugin_output": "URL               : http://10.20.184.35:8080/\nInstalled version : 8.5.63\nFixed version     : 8.5.64"
        },
        {
            "file_no": 1,
            "ip": "10.20.184.35",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "197847",
            "pluginname": "Apache Tomcat 8.5.0 < 8.5.66",
            "hostname": "",
            "port": "8080",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Tomcat installed on the remote host is prior to 8.5.66. It is, therefore, affected by a vulnerability as referenced in the fixed_in_apache_tomcat_8.5.66_security-8 advisory.\n\n  - A vulnerability in the JNDI Realm of Apache Tomcat allows an attacker to authenticate using variations of     a valid user name and/or to bypass some of the protection provided by the LockOut Realm. This issue     affects Apache Tomcat 10.0.0-M1 to 10.0.5; 9.0.0.M1 to 9.0.45; 8.5.0 to 8.5.65. (CVE-2021-30640)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Apache Tomcat version 8.5.66 or later.",
            "cve": "CVE-2021-30640",
            "cvss3": "6.5",
            "cvss2": "5.8",
            "see_also": "http://www.nessus.org/u?7d775100\nhttp://www.nessus.org/u?e7e8c21e\nhttp://www.nessus.org/u?b1496d99\nhttp://www.nessus.org/u?1614ff57\nhttp://www.nessus.org/u?55d830e8\nhttp://www.nessus.org/u?a8ec1993\nhttp://www.nessus.org/u?de77eacf\nhttp://www.nessus.org/u?ce1334ab\nhttps://bz.apache.org/bugzilla/show_bug.cgi?id=65224\nhttp://www.nessus.org/u?6687ab08",
            "plugin_output": "URL               : http://10.20.184.35:8080/\nInstalled version : 8.5.63\nFixed version     : 8.5.66"
        },
        {
            "file_no": 1,
            "ip": "10.20.184.35",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "152183",
            "pluginname": "Apache Tomcat 8.5.0 < 8.5.68",
            "hostname": "",
            "port": "8080",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Tomcat installed on the remote host is prior to 8.5.68. It is, therefore, affected by a vulnerability as referenced in the fixed_in_apache_tomcat_8.5.68_security-8 advisory.\n\n  - Apache Tomcat 10.0.0-M1 to 10.0.6, 9.0.0.M1 to 9.0.46 and 8.5.0 to 8.5.66 did not correctly parse the HTTP     transfer-encoding request header in some circumstances leading to the possibility to request smuggling     when used with a reverse proxy. Specifically: - Tomcat incorrectly ignored the transfer encoding header if     the client declared it would only accept an HTTP/1.0 response; - Tomcat honoured the identify encoding;\n    and - Tomcat did not ensure that, if present, the chunked encoding was the final encoding.\n    (CVE-2021-33037)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Apache Tomcat version 8.5.68 or later.",
            "cve": "CVE-2021-33037",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?ca148f18\nhttp://www.nessus.org/u?9e0e6b06\nhttp://www.nessus.org/u?bea8fba1\nhttp://www.nessus.org/u?836aea5f",
            "plugin_output": "URL               : http://10.20.184.35:8080/\nInstalled version : 8.5.63\nFixed version     : 8.5.68"
        },
        {
            "file_no": 1,
            "ip": "10.20.184.35",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "161181",
            "pluginname": "Apache Tomcat 8.5.0 < 8.5.76",
            "hostname": "",
            "port": "8080",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Tomcat installed on the remote host is prior to 8.5.76. It is, therefore, affected by a vulnerability as referenced in the fixed_in_apache_tomcat_8.5.76_security-8 advisory.\n\n  - If a web application sends a WebSocket message concurrently with the WebSocket connection closing when     running on Apache Tomcat 8.5.0 to 8.5.75 or Apache Tomcat 9.0.0.M1 to 9.0.20, it is possible that the     application will continue to use the socket after it has been closed. The error handling triggered in this     case could cause the a pooled object to be placed in the pool twice. This could result in subsequent     connections using the same object concurrently which could result in data being returned to the wrong use     and/or other errors. (CVE-2022-25762)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Apache Tomcat version 8.5.76 or later.",
            "cve": "CVE-2022-25762",
            "cvss3": "8.6",
            "cvss2": "7.5",
            "see_also": "http://www.nessus.org/u?d8992e36\nhttp://www.nessus.org/u?97cadf8c",
            "plugin_output": "URL               : http://10.20.184.35:8080/\nInstalled version : 8.5.63\nFixed version     : 8.5.76"
        },
        {
            "file_no": 1,
            "ip": "10.20.184.35",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "157119",
            "pluginname": "Apache Tomcat 8.5.55 < 8.5.75 multiple vulnerabilities",
            "hostname": "",
            "port": "8080",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Tomcat installed on the remote host is prior to 8.5.75. It is, therefore, affected by a vulnerability as referenced in the fixed_in_apache_tomcat_8.5.75_security-8 advisory.\n\n  - When using Apache Tomcat versions 10.0.0-M1 to 10.0.0-M4, 9.0.0.M1 to 9.0.34, 8.5.0 to 8.5.54 and 7.0.0 to     7.0.103 if a) an attacker is able to control the contents and name of a file on the server; and b) the     server is configured to use the PersistenceManager with a FileStore; and c) the PersistenceManager is     configured with sessionAttributeValueClassNameFilter=null (the default unless a SecurityManager is used)     or a sufficiently lax filter to allow the attacker provided object to be deserialized; and d) the attacker     knows the relative file path from the storage location used by FileStore to the file the attacker has     control over; then, using a specifically crafted request, the attacker will be able to trigger remote code     execution via deserialization of the file under their control. Note that all of conditions a) to d) must     be true for the attack to succeed. (CVE-2020-9484)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Apache Tomcat version 8.5.75 or later.",
            "cve": "CVE-2020-9484",
            "cvss3": "7.0",
            "cvss2": "4.4",
            "see_also": "http://www.nessus.org/u?95098df5\nhttp://www.nessus.org/u?3d595669",
            "plugin_output": "URL               : http://10.20.184.35:8080/\nInstalled version : 8.5.63\nFixed version     : 8.5.75"
        },
        {
            "file_no": 1,
            "ip": "10.20.184.35",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "162502",
            "pluginname": "Apache Tomcat 8.5.50 < 8.5.82",
            "hostname": "",
            "port": "8080",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Tomcat installed on the remote host is prior to 8.5.82. It is, therefore, affected by a vulnerability as referenced in the fixed_in_apache_tomcat_8.5.82_security-8 advisory.\n\n  - In Apache Tomcat 10.1.0-M1 to 10.1.0-M16, 10.0.0-M1 to 10.0.22, 9.0.30 to 9.0.64 and 8.5.50 to 8.5.81 the     Form authentication example in the examples web application displayed user provided data without     filtering, exposing a XSS vulnerability. (CVE-2022-34305)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Apache Tomcat version 8.5.82 or later.",
            "cve": "CVE-2022-34305",
            "cvss3": "6.1",
            "cvss2": "4.3",
            "see_also": "http://www.nessus.org/u?e84fe261\nhttp://www.nessus.org/u?315f2329",
            "plugin_output": "URL               : http://10.20.184.35:8080/\nInstalled version : 8.5.63\nFixed version     : 8.5.82"
        },
        {
            "file_no": 1,
            "ip": "10.20.184.35",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "160891",
            "pluginname": "Apache Tomcat 8.5.38 < 8.5.79",
            "hostname": "",
            "port": "8080",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Tomcat installed on the remote host is prior to 8.5.79. It is, therefore, affected by a vulnerability as referenced in the fixed_in_apache_tomcat_8.5.79_security-8 advisory.\n\n  - The documentation of Apache Tomcat 10.1.0-M1 to 10.1.0-M14, 10.0.0-M1 to 10.0.20, 9.0.13 to 9.0.62 and     8.5.38 to 8.5.78 for the EncryptInterceptor incorrectly stated it enabled Tomcat clustering to run over an     untrusted network. This was not correct. While the EncryptInterceptor does provide confidentiality and     integrity protection, it does not protect against all risks associated with running over any untrusted     network, particularly DoS risks. (CVE-2022-29885)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Apache Tomcat version 8.5.79 or later.",
            "cve": "CVE-2022-29885",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?dc62ae83\nhttp://www.nessus.org/u?23c86e50",
            "plugin_output": "URL               : http://10.20.184.35:8080/\nInstalled version : 8.5.63\nFixed version     : 8.5.79"
        },
        {
            "file_no": 1,
            "ip": "10.20.184.35",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "180192",
            "pluginname": "Apache Tomcat 8.5.0 < 8.5.93",
            "hostname": "",
            "port": "8080",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Tomcat installed on the remote host is prior to 8.5.93. It is, therefore, affected by a vulnerability as referenced in the fixed_in_apache_tomcat_8.5.93_security-8 advisory.\n\n  - URL Redirection to Untrusted Site ('Open Redirect') vulnerability in FORM authentication feature Apache     Tomcat.This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M10, from 10.1.0-M1 through     10.0.12, from 9.0.0-M1 through 9.0.79 and from 8.5.0 through 8.5.92. The vulnerability is limited to the     ROOT (default) web application. (CVE-2023-41080)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Apache Tomcat version 8.5.93 or later.",
            "cve": "CVE-2023-41080",
            "cvss3": "6.1",
            "cvss2": "6.4",
            "see_also": "http://www.nessus.org/u?7d4ea522\nhttp://www.nessus.org/u?fe81bd67",
            "plugin_output": "URL               : http://10.20.184.35:8080/\nInstalled version : 8.5.63\nFixed version     : 8.5.93"
        },
        {
            "file_no": 1,
            "ip": "10.20.184.35",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "166807",
            "pluginname": "Apache Tomcat 8.5.0 < 8.5.83",
            "hostname": "",
            "port": "8080",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Tomcat installed on the remote host is prior to 8.5.83. It is, therefore, affected by a vulnerability as referenced in the fixed_in_apache_tomcat_8.5.83_security-8 advisory.\n\n  - If Apache Tomcat 8.5.0 to 8.5.82, 9.0.0-M1 to 9.0.67, 10.0.0-M1 to 10.0.26 or 10.1.0-M1 to 10.1.0 was     configured to ignore invalid HTTP headers via setting rejectIllegalHeader to false (the default for 8.5.x     only), Tomcat did not reject a request containing an invalid Content-Length header making a request     smuggling attack possible if Tomcat was located behind a reverse proxy that also failed to reject the     request with the invalid header. (CVE-2022-42252)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Apache Tomcat version 8.5.83 or later.",
            "cve": "CVE-2022-42252",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://www.nessus.org/u?6b7e7ac8\nhttp://www.nessus.org/u?7ff4a0f9",
            "plugin_output": "URL               : http://10.20.184.35:8080/\nInstalled version : 8.5.63\nFixed version     : 8.5.83"
        },
        {
            "file_no": 1,
            "ip": "10.20.184.35",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "154147",
            "pluginname": "Apache Tomcat 8.5.60 < 8.5.72",
            "hostname": "",
            "port": "8080",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Tomcat installed on the remote host is prior to 8.5.72. It is, therefore, affected by a vulnerability as referenced in the fixed_in_apache_tomcat_8.5.72_security-8 advisory.\n\n  - The fix for bug 63362 present in Apache Tomcat 10.1.0-M1 to 10.1.0-M5, 10.0.0-M1 to 10.0.11, 9.0.40 to     9.0.53 and 8.5.60 to 8.5.71 introduced a memory leak. The object introduced to collect metrics for HTTP     upgrade connections was not released for WebSocket connections once the connection was closed. This     created a memory leak that, over time, could lead to a denial of service via an OutOfMemoryError.\n    (CVE-2021-42340)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Apache Tomcat version 8.5.72 or later.",
            "cve": "CVE-2021-42340",
            "cvss3": "7.5",
            "cvss2": "5.0",
            "see_also": "https://bz.apache.org/bugzilla/show_bug.cgi?id=63362\nhttp://www.nessus.org/u?1e57e35e\nhttp://www.nessus.org/u?740768cc",
            "plugin_output": "URL               : http://10.20.184.35:8080/\nInstalled version : 8.5.63\nFixed version     : 8.5.72"
        },
        {
            "file_no": 1,
            "ip": "10.20.184.35",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "186364",
            "pluginname": "Apache Tomcat 8.5.0 < 8.5.96",
            "hostname": "",
            "port": "8080",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Tomcat installed on the remote host is prior to 8.5.96. It is, therefore, affected by a vulnerability as referenced in the fixed_in_apache_tomcat_8.5.96_security-8 advisory.\n\n  - Improper Input Validation vulnerability in Apache Tomcat.Tomcat from 11.0.0-M1 through 11.0.0-M10, from     10.1.0-M1 through 10.1.15, from 9.0.0-M1 through 9.0.82 and from 8.5.0 through 8.5.95 did not correctly     parse HTTP trailer headers. A trailer header that exceeded the header size limit could cause Tomcat to     treat a single request as multiple requests leading to the possibility of request smuggling when behind a     reverse proxy. Users are recommended to upgrade to version 11.0.0-M11 onwards, 10.1.16 onwards, 9.0.83     onwards or 8.5.96 onwards, which fix the issue. (CVE-2023-46589)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Apache Tomcat version 8.5.96 or later.",
            "cve": "CVE-2023-46589",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://www.nessus.org/u?fffc62d5\nhttp://www.nessus.org/u?0b0eb807",
            "plugin_output": "URL               : http://10.20.184.35:8080/\nInstalled version : 8.5.63\nFixed version     : 8.5.96"
        },
        {
            "file_no": 1,
            "ip": "10.20.184.35",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "182811",
            "pluginname": "Apache Tomcat 8.5.0 < 8.5.94 multiple vulnerabilities",
            "hostname": "",
            "port": "8080",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Tomcat installed on the remote host is prior to 8.5.94. It is, therefore, affected by multiple vulnerabilities as referenced in the fixed_in_apache_tomcat_8.5.94_security-8 advisory.\n\n  - Improper Input Validation vulnerability in Apache Tomcat.Tomcat from 11.0.0-M1 through 11.0.0-M11, from     10.1.0-M1 through 10.1.13, from 9.0.0-M1 through 9.0.81 and from 8.5.0 through 8.5.93 did not correctly     parse HTTP trailer headers. A specially crafted, invalid trailer header could cause Tomcat to treat a     single request as multiple requests leading to the possibility of request smuggling when behind a reverse     proxy. Users are recommended to upgrade to version 11.0.0-M12 onwards, 10.1.14 onwards, 9.0.81 onwards or     8.5.94 onwards, which fix the issue. (CVE-2023-45648)\n\n  - The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation     can reset many streams quickly, as exploited in the wild in August through October 2023. (CVE-2023-44487)\n\n  - Incomplete Cleanup vulnerability in Apache Tomcat.When recycling various internal objects in Apache Tomcat     from 11.0.0-M1 through 11.0.0-M11, from 10.1.0-M1 through 10.1.13, from 9.0.0-M1 through 9.0.80 and from     8.5.0 through 8.5.93, an error could cause Tomcat to skip some parts of the recycling process leading to     information leaking from the current request/response to the next. Users are recommended to upgrade to     version 11.0.0-M12 onwards, 10.1.14 onwards, 9.0.81 onwards or 8.5.94 onwards, which fixes the issue.\n    (CVE-2023-42795)\n\n  - Incomplete Cleanup vulnerability in Apache Tomcat. The internal fork of Commons FileUpload packaged with     Apache Tomcat 9.0.70 through 9.0.80 and 8.5.85 through 8.5.93 included an unreleased, in progress     refactoring that exposed a potential denial of service on Windows if a web application opened a stream for     an uploaded file but failed to close the stream. The file would never be deleted from disk creating the     possibility of an eventual denial of service due to the disk being full. Users are recommended to upgrade     to version 9.0.81 onwards or 8.5.94 onwards, which fixes the issue. (CVE-2023-42794)\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Apache Tomcat version 8.5.94 or later.",
            "cve": "CVE-2023-42794",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?285c784f\nhttp://www.nessus.org/u?8f55491f\nhttp://www.nessus.org/u?93061a48\nhttp://www.nessus.org/u?2a58537d\nhttp://www.nessus.org/u?cf4de5ac",
            "plugin_output": "URL               : http://10.20.184.35:8080/\nInstalled version : 8.5.63\nFixed version     : 8.5.94"
        },
        {
            "file_no": 1,
            "ip": "10.20.184.35",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "192043",
            "pluginname": "Apache Tomcat 8.5.0 < 8.5.99 multiple vulnerabilities",
            "hostname": "",
            "port": "8080",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Tomcat installed on the remote host is prior to 8.5.99. It is, therefore, affected by multiple vulnerabilities as referenced in the fixed_in_apache_tomcat_8.5.99_security-8 advisory.\n\n  - Denial of Service via incomplete cleanup vulnerability in Apache Tomcat. It was possible for WebSocket     clients to keep WebSocket connections open leading to increased resource consumption.This issue affects     Apache Tomcat: from 11.0.0-M1 through 11.0.0-M16, from 10.1.0-M1 through 10.1.18, from 9.0.0-M1 through     9.0.85, from 8.5.0 through 8.5.98. Users are recommended to upgrade to version 11.0.0-M17, 10.1.19, 9.0.86     or 8.5.99 which fix the issue. (CVE-2024-23672)\n\n  - Denial of Service due to improper input validation vulnerability for HTTP/2 requests in Apache Tomcat.\n    When processing an HTTP/2 request, if the request exceeded any of the configured limits for headers, the     associated HTTP/2 stream was not reset until after all of the headers had been processed.This issue     affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M16, from 10.1.0-M1 through 10.1.18, from 9.0.0-M1     through 9.0.85, from 8.5.0 through 8.5.98. Users are recommended to upgrade to version 11.0.0-M17,     10.1.19, 9.0.86 or 8.5.99 which fix the issue. (CVE-2024-24549)\n\nNote that Nessus has not tested for these issues but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Apache Tomcat version 8.5.99 or later.",
            "cve": "CVE-2024-23672",
            "cvss3": "6.3",
            "cvss2": "7.8",
            "see_also": "http://www.nessus.org/u?464cee83\nhttp://www.nessus.org/u?30ae8c2d\nhttp://www.nessus.org/u?e43f5fcc",
            "plugin_output": "URL               : http://10.20.184.35:8080/\nInstalled version : 8.5.63\nFixed version     : 8.5.99"
        },
        {
            "file_no": 1,
            "ip": "10.20.184.35",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "173256",
            "pluginname": "Apache Tomcat 8.5.0 < 8.5.86",
            "hostname": "",
            "port": "8080",
            "protocol": "tcp",
            "severity": "2",
            "description": "The version of Tomcat installed on the remote host is prior to 8.5.86. It is, therefore, affected by a vulnerability as referenced in the fixed_in_apache_tomcat_8.5.86_security-8 advisory.\n\n  - When using the RemoteIpFilter with requests received from a reverse proxy via HTTP that include the     X-Forwarded-Proto header set to https, session cookies created by Apache Tomcat 11.0.0-M1 to 11.0.0.-M2,     10.1.0-M1 to 10.1.5, 9.0.0-M1 to 9.0.71 and 8.5.0 to 8.5.85 did not include the secure attribute. This     could result in the user agent transmitting the session cookie over an insecure channel. (CVE-2023-28708)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Apache Tomcat version 8.5.86 or later.",
            "cve": "CVE-2023-28708",
            "cvss3": "4.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?bff3d148\nhttps://bz.apache.org/bugzilla/show_bug.cgi?id=66471\nhttp://www.nessus.org/u?e6187e29",
            "plugin_output": "Installed version : 8.5.63\nFixed version     : 8.5.86"
        },
        {
            "file_no": 1,
            "ip": "10.20.184.35",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "171656",
            "pluginname": "Apache Tomcat 8.5.0 < 8.5.85",
            "hostname": "",
            "port": "8080",
            "protocol": "tcp",
            "severity": "3",
            "description": "The version of Tomcat installed on the remote host is prior to 8.5.85. It is, therefore, affected by a vulnerability as referenced in the fixed_in_apache_tomcat_8.5.85_security-8 advisory.\n\n  - Apache Commons FileUpload before 1.5 does not limit the number of request parts to be processed resulting     in the possibility of an attacker triggering a DoS with a malicious upload or series of uploads.\n    (CVE-2023-24998)\n\nNote that Nessus has not tested for this issue but has instead relied only on the application's self-reported version number.",
            "solution": "Upgrade to Apache Tomcat version 8.5.85 or later.",
            "cve": "CVE-2023-24998",
            "cvss3": "7.5",
            "cvss2": "7.8",
            "see_also": "http://www.nessus.org/u?476daae8\nhttp://www.nessus.org/u?3131512d",
            "plugin_output": "Installed version : 8.5.63\nFixed version     : 8.5.85"
        },
        {
            "file_no": 1,
            "ip": "10.20.184.35",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "178943",
            "pluginname": "Apache Tomcat SEoL (8.5.x)",
            "hostname": "",
            "port": "8080",
            "protocol": "tcp",
            "severity": "1",
            "description": "According to its version, Apache Tomcat is 8.5.x. It is, therefore, no longer maintained by its vendor or provider.\n\nLack of support implies that no new security patches for the product will be released by the vendor. As a result, it may contain security vulnerabilities.",
            "solution": "Upgrade to a version of Apache Tomcat that is currently supported.",
            "cve": "",
            "cvss3": "",
            "cvss2": "",
            "see_also": "https://tomcat.apache.org/tomcat-85-eol.html",
            "plugin_output": "URL                                    : http://10.20.184.35:8080/\nInstalled version                      : 8.5.63\nSecurity End of Life                   : March 31, 2024\nTime since Security End of Life (Est.) : >= 6 months"
        },
        {
            "file_no": 1,
            "ip": "10.20.184.35",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "159462",
            "pluginname": "Apache Tomcat 8.x < 8.5.78 Spring4Shell CVE-2021-43980",
            "hostname": "",
            "port": "8080",
            "protocol": "tcp",
            "severity": "1",
            "description": "The version of Apache Tomcat installed on the remote host is 8.x prior to 8.5.78.\n\n  - The simplified implementation of blocking reads and writes introduced in Tomcat 10 and back-ported to     Tomcat 9.0.47 onwards exposed a long standing (but extremely hard to trigger) concurrency bug in Apache     Tomcat 10.1.0 to 10.1.0-M12, 10.0.0-M1 to 10.0.18, 9.0.0-M1 to 9.0.60 and 8.5.0 to 8.5.77 that could cause     client connections to share an Http11Processor instance resulting in responses, or part responses, to be     received by the wrong client. (CVE-2021-43980)\n\nNote : these changes are to mitigate the effects of CVE-2022-22965.",
            "solution": "Upgrade to Apache Tomcat version 8.5.78 or later.",
            "cve": "CVE-2021-43980",
            "cvss3": "3.7",
            "cvss2": "2.6",
            "see_also": "http://www.nessus.org/u?c41b6749\nhttp://www.nessus.org/u?72f4365d",
            "plugin_output": "Installed version : 8.5.63\nFixed version     : 8.5.78"
        },
        {
            "file_no": 1,
            "ip": "10.20.184.35",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "57582",
            "pluginname": "SSL Self-Signed Certificate",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The X.509 certificate chain for this service is not signed by a recognized certificate authority.  If the remote host is a public host in production, this nullifies the use of SSL as anyone could establish a man-in-the-middle attack against the remote host. \n\nNote that this plugin does not check for certificate chains that end in a certificate that is not self-signed, but is signed by an unrecognized certificate authority.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "",
            "plugin_output": "The following certificate was found at the top of the certificate\nchain sent by the remote host, but is self-signed and was not\nfound in the list of known certificate authorities :\n|-Subject : CN=acsi-sw-052"
        },
        {
            "file_no": 1,
            "ip": "10.20.184.35",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "51192",
            "pluginname": "SSL Certificate Cannot Be Trusted",
            "hostname": "",
            "port": "3389",
            "protocol": "tcp",
            "severity": "2",
            "description": "The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate's 'notBefore' dates, or after one of the     certificate's 'notAfter' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn't match the certificate's information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate's issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.",
            "solution": "Purchase or generate a proper SSL certificate for this service.",
            "cve": "",
            "cvss3": "6.5",
            "cvss2": "6.4",
            "see_also": "https://www.itu.int/rec/T-REC-X.509/en\nhttps://en.wikipedia.org/wiki/X.509",
            "plugin_output": "The following certificate was at the top of the certificate\nchain sent by the remote host, but it is signed by an unknown\ncertificate authority :\n|-Subject : CN=acsi-sw-052\n|-Issuer  : CN=acsi-sw-052"
        },
        {
            "file_no": 1,
            "ip": "10.20.184.35",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "12085",
            "pluginname": "Apache Tomcat Default Files",
            "hostname": "",
            "port": "8080",
            "protocol": "tcp",
            "severity": "2",
            "description": "The default error page, default index page, example JSPs and/or example servlets are installed on the remote Apache Tomcat server. These files should be removed as they may help an attacker uncover information about the remote Tomcat install or host itself.",
            "solution": "Delete the default index page and remove the example JSP and servlets. Follow the Tomcat or OWASP instructions to replace or modify the default error page.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?4cb3b4dd\nhttps://www.owasp.org/index.php/Securing_tomcat",
            "plugin_output": "The server is not configured to return a custom page in the event of a client requesting a non-existent resource.\nThis may result in a potential disclosure of sensitive information about the server to attackers."
        },
        {
            "file_no": 1,
            "ip": "10.20.184.35",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "57608",
            "pluginname": "SMB Signing not required",
            "hostname": "",
            "port": "445",
            "protocol": "tcp",
            "severity": "2",
            "description": "Signing is not required on the remote SMB server. An unauthenticated, remote attacker can exploit this to conduct man-in-the-middle attacks against the SMB server.",
            "solution": "Enforce message signing in the host's configuration. On Windows, this is found in the policy setting 'Microsoft network server: Digitally sign communications (always)'. On Samba, the setting is called 'server signing'. See the 'see also' links for further details.",
            "cve": "",
            "cvss3": "5.3",
            "cvss2": "5.0",
            "see_also": "http://www.nessus.org/u?df39b8b3\nhttp://technet.microsoft.com/en-us/library/cc731957.aspx\nhttp://www.nessus.org/u?74b80723\nhttps://www.samba.org/samba/docs/current/man-html/smb.conf.5.html\nhttp://www.nessus.org/u?a3cac4ea",
            "plugin_output": ""
        },
        {
            "file_no": 1,
            "ip": "10.20.184.35",
            "system": "Microsoft Windows Server 2012 R2 Standard",
            "os": "windows",
            "pluginid": "10114",
            "pluginname": "ICMP Timestamp Request Remote Date Disclosure",
            "hostname": "",
            "port": "0",
            "protocol": "icmp",
            "severity": "1",
            "description": "The remote host answers to an ICMP timestamp request.  This allows an attacker to know the date that is set on the targeted machine, which may assist an unauthenticated, remote attacker in defeating time-based authentication protocols.\n\nTimestamps returned from machines running Windows Vista / 7 / 2008 / 2008 R2 are deliberately incorrect, but usually within 1000 seconds of the actual system time.",
            "solution": "Filter out the ICMP timestamp requests (13), and the outgoing ICMP timestamp replies (14).",
            "cve": "CVE-1999-0524",
            "cvss3": "",
            "cvss2": "2.1",
            "see_also": "",
            "plugin_output": "This host returns non-standard timestamps (high bit is set)\nThe ICMP timestamps might be in little endian format (not in network format)\nThe difference between the local and remote clocks is 1 second."
        }
    ],
    "df_nessus_scan_info": [
        {
            "file_no": 0,
            "start": "2024.12.19 10:03:50",
            "end": "2024.12.19 11:35:17",
            "target": "10.27.0.1-10.27.45.254",
            "count": "604"
        },
        {
            "file_no": 1,
            "start": "2024.12.19 10:03:51",
            "end": "2024.12.19 11:08:27",
            "target": "10.20.184.0/24,10.27.198.0/24,10.27.232.0/24,10.27.233.0/24",
            "count": "10"
        }
    ]
}